[
    {
        "ServiceHumanReadableName": "AWS Amplify Console",
        "ServiceProvider": "AWS",
        "ServiceName": "Amplify",
        "DataTypeName": "App",
        "ResourceTypeIdentifier": "AWS::Amplify::App",
        "ServiceTypeIdentifier": "AWS::Amplify"
    },
    {
        "ServiceHumanReadableName": "AWS Amplify Console",
        "ServiceProvider": "AWS",
        "ServiceName": "Amplify",
        "DataTypeName": "Branch",
        "ResourceTypeIdentifier": "AWS::Amplify::Branch",
        "ServiceTypeIdentifier": "AWS::Amplify"
    },
    {
        "ServiceHumanReadableName": "AWS Amplify Console",
        "ServiceProvider": "AWS",
        "ServiceName": "Amplify",
        "DataTypeName": "Domain",
        "ResourceTypeIdentifier": "AWS::Amplify::Domain",
        "ServiceTypeIdentifier": "AWS::Amplify"
    },
    {
        "ServiceHumanReadableName": "AWS Amplify UI Builder",
        "ServiceProvider": "AWS",
        "ServiceName": "AmplifyUIBuilder",
        "DataTypeName": "Component",
        "ResourceTypeIdentifier": "AWS::AmplifyUIBuilder::Component",
        "ServiceTypeIdentifier": "AWS::AmplifyUIBuilder"
    },
    {
        "ServiceHumanReadableName": "AWS Amplify UI Builder",
        "ServiceProvider": "AWS",
        "ServiceName": "AmplifyUIBuilder",
        "DataTypeName": "Form",
        "ResourceTypeIdentifier": "AWS::AmplifyUIBuilder::Form",
        "ServiceTypeIdentifier": "AWS::AmplifyUIBuilder"
    },
    {
        "ServiceHumanReadableName": "AWS Amplify UI Builder",
        "ServiceProvider": "AWS",
        "ServiceName": "AmplifyUIBuilder",
        "DataTypeName": "Theme",
        "ResourceTypeIdentifier": "AWS::AmplifyUIBuilder::Theme",
        "ServiceTypeIdentifier": "AWS::AmplifyUIBuilder"
    },
    {
        "ServiceHumanReadableName": "Amazon API Gateway",
        "ServiceProvider": "AWS",
        "ServiceName": "ApiGateway",
        "DataTypeName": "Account",
        "ResourceTypeIdentifier": "AWS::ApiGateway::Account",
        "ServiceTypeIdentifier": "AWS::ApiGateway"
    },
    {
        "ServiceHumanReadableName": "Amazon API Gateway",
        "ServiceProvider": "AWS",
        "ServiceName": "ApiGateway",
        "DataTypeName": "ApiKey",
        "ResourceTypeIdentifier": "AWS::ApiGateway::ApiKey",
        "ServiceTypeIdentifier": "AWS::ApiGateway"
    },
    {
        "ServiceHumanReadableName": "Amazon API Gateway",
        "ServiceProvider": "AWS",
        "ServiceName": "ApiGateway",
        "DataTypeName": "Authorizer",
        "ResourceTypeIdentifier": "AWS::ApiGateway::Authorizer",
        "ServiceTypeIdentifier": "AWS::ApiGateway"
    },
    {
        "ServiceHumanReadableName": "Amazon API Gateway",
        "ServiceProvider": "AWS",
        "ServiceName": "ApiGateway",
        "DataTypeName": "BasePathMapping",
        "ResourceTypeIdentifier": "AWS::ApiGateway::BasePathMapping",
        "ServiceTypeIdentifier": "AWS::ApiGateway"
    },
    {
        "ServiceHumanReadableName": "Amazon API Gateway",
        "ServiceProvider": "AWS",
        "ServiceName": "ApiGateway",
        "DataTypeName": "ClientCertificate",
        "ResourceTypeIdentifier": "AWS::ApiGateway::ClientCertificate",
        "ServiceTypeIdentifier": "AWS::ApiGateway"
    },
    {
        "ServiceHumanReadableName": "Amazon API Gateway",
        "ServiceProvider": "AWS",
        "ServiceName": "ApiGateway",
        "DataTypeName": "Deployment",
        "ResourceTypeIdentifier": "AWS::ApiGateway::Deployment",
        "ServiceTypeIdentifier": "AWS::ApiGateway"
    },
    {
        "ServiceHumanReadableName": "Amazon API Gateway",
        "ServiceProvider": "AWS",
        "ServiceName": "ApiGateway",
        "DataTypeName": "DocumentationPart",
        "ResourceTypeIdentifier": "AWS::ApiGateway::DocumentationPart",
        "ServiceTypeIdentifier": "AWS::ApiGateway"
    },
    {
        "ServiceHumanReadableName": "Amazon API Gateway",
        "ServiceProvider": "AWS",
        "ServiceName": "ApiGateway",
        "DataTypeName": "DocumentationVersion",
        "ResourceTypeIdentifier": "AWS::ApiGateway::DocumentationVersion",
        "ServiceTypeIdentifier": "AWS::ApiGateway"
    },
    {
        "ServiceHumanReadableName": "Amazon API Gateway",
        "ServiceProvider": "AWS",
        "ServiceName": "ApiGateway",
        "DataTypeName": "DomainName",
        "ResourceTypeIdentifier": "AWS::ApiGateway::DomainName",
        "ServiceTypeIdentifier": "AWS::ApiGateway"
    },
    {
        "ServiceHumanReadableName": "Amazon API Gateway",
        "ServiceProvider": "AWS",
        "ServiceName": "ApiGateway",
        "DataTypeName": "GatewayResponse",
        "ResourceTypeIdentifier": "AWS::ApiGateway::GatewayResponse",
        "ServiceTypeIdentifier": "AWS::ApiGateway"
    },
    {
        "ServiceHumanReadableName": "Amazon API Gateway",
        "ServiceProvider": "AWS",
        "ServiceName": "ApiGateway",
        "DataTypeName": "Method",
        "ResourceTypeIdentifier": "AWS::ApiGateway::Method",
        "ServiceTypeIdentifier": "AWS::ApiGateway"
    },
    {
        "ServiceHumanReadableName": "Amazon API Gateway",
        "ServiceProvider": "AWS",
        "ServiceName": "ApiGateway",
        "DataTypeName": "Model",
        "ResourceTypeIdentifier": "AWS::ApiGateway::Model",
        "ServiceTypeIdentifier": "AWS::ApiGateway"
    },
    {
        "ServiceHumanReadableName": "Amazon API Gateway",
        "ServiceProvider": "AWS",
        "ServiceName": "ApiGateway",
        "DataTypeName": "RequestValidator",
        "ResourceTypeIdentifier": "AWS::ApiGateway::RequestValidator",
        "ServiceTypeIdentifier": "AWS::ApiGateway"
    },
    {
        "ServiceHumanReadableName": "Amazon API Gateway",
        "ServiceProvider": "AWS",
        "ServiceName": "ApiGateway",
        "DataTypeName": "Resource",
        "ResourceTypeIdentifier": "AWS::ApiGateway::Resource",
        "ServiceTypeIdentifier": "AWS::ApiGateway"
    },
    {
        "ServiceHumanReadableName": "Amazon API Gateway",
        "ServiceProvider": "AWS",
        "ServiceName": "ApiGateway",
        "DataTypeName": "RestApi",
        "ResourceTypeIdentifier": "AWS::ApiGateway::RestApi",
        "ServiceTypeIdentifier": "AWS::ApiGateway"
    },
    {
        "ServiceHumanReadableName": "Amazon API Gateway",
        "ServiceProvider": "AWS",
        "ServiceName": "ApiGateway",
        "DataTypeName": "Stage",
        "ResourceTypeIdentifier": "AWS::ApiGateway::Stage",
        "ServiceTypeIdentifier": "AWS::ApiGateway"
    },
    {
        "ServiceHumanReadableName": "Amazon API Gateway",
        "ServiceProvider": "AWS",
        "ServiceName": "ApiGateway",
        "DataTypeName": "UsagePlan",
        "ResourceTypeIdentifier": "AWS::ApiGateway::UsagePlan",
        "ServiceTypeIdentifier": "AWS::ApiGateway"
    },
    {
        "ServiceHumanReadableName": "Amazon API Gateway",
        "ServiceProvider": "AWS",
        "ServiceName": "ApiGateway",
        "DataTypeName": "UsagePlanKey",
        "ResourceTypeIdentifier": "AWS::ApiGateway::UsagePlanKey",
        "ServiceTypeIdentifier": "AWS::ApiGateway"
    },
    {
        "ServiceHumanReadableName": "Amazon API Gateway",
        "ServiceProvider": "AWS",
        "ServiceName": "ApiGateway",
        "DataTypeName": "VpcLink",
        "ResourceTypeIdentifier": "AWS::ApiGateway::VpcLink",
        "ServiceTypeIdentifier": "AWS::ApiGateway"
    },
    {
        "ServiceHumanReadableName": "Amazon API Gateway V2",
        "ServiceProvider": "AWS",
        "ServiceName": "ApiGatewayV2",
        "DataTypeName": "Api",
        "ResourceTypeIdentifier": "AWS::ApiGatewayV2::Api",
        "ServiceTypeIdentifier": "AWS::ApiGatewayV2"
    },
    {
        "ServiceHumanReadableName": "Amazon API Gateway V2",
        "ServiceProvider": "AWS",
        "ServiceName": "ApiGatewayV2",
        "DataTypeName": "ApiGatewayManagedOverrides",
        "ResourceTypeIdentifier": "AWS::ApiGatewayV2::ApiGatewayManagedOverrides",
        "ServiceTypeIdentifier": "AWS::ApiGatewayV2"
    },
    {
        "ServiceHumanReadableName": "Amazon API Gateway V2",
        "ServiceProvider": "AWS",
        "ServiceName": "ApiGatewayV2",
        "DataTypeName": "ApiMapping",
        "ResourceTypeIdentifier": "AWS::ApiGatewayV2::ApiMapping",
        "ServiceTypeIdentifier": "AWS::ApiGatewayV2"
    },
    {
        "ServiceHumanReadableName": "Amazon API Gateway V2",
        "ServiceProvider": "AWS",
        "ServiceName": "ApiGatewayV2",
        "DataTypeName": "Authorizer",
        "ResourceTypeIdentifier": "AWS::ApiGatewayV2::Authorizer",
        "ServiceTypeIdentifier": "AWS::ApiGatewayV2"
    },
    {
        "ServiceHumanReadableName": "Amazon API Gateway V2",
        "ServiceProvider": "AWS",
        "ServiceName": "ApiGatewayV2",
        "DataTypeName": "Deployment",
        "ResourceTypeIdentifier": "AWS::ApiGatewayV2::Deployment",
        "ServiceTypeIdentifier": "AWS::ApiGatewayV2"
    },
    {
        "ServiceHumanReadableName": "Amazon API Gateway V2",
        "ServiceProvider": "AWS",
        "ServiceName": "ApiGatewayV2",
        "DataTypeName": "DomainName",
        "ResourceTypeIdentifier": "AWS::ApiGatewayV2::DomainName",
        "ServiceTypeIdentifier": "AWS::ApiGatewayV2"
    },
    {
        "ServiceHumanReadableName": "Amazon API Gateway V2",
        "ServiceProvider": "AWS",
        "ServiceName": "ApiGatewayV2",
        "DataTypeName": "Integration",
        "ResourceTypeIdentifier": "AWS::ApiGatewayV2::Integration",
        "ServiceTypeIdentifier": "AWS::ApiGatewayV2"
    },
    {
        "ServiceHumanReadableName": "Amazon API Gateway V2",
        "ServiceProvider": "AWS",
        "ServiceName": "ApiGatewayV2",
        "DataTypeName": "IntegrationResponse",
        "ResourceTypeIdentifier": "AWS::ApiGatewayV2::IntegrationResponse",
        "ServiceTypeIdentifier": "AWS::ApiGatewayV2"
    },
    {
        "ServiceHumanReadableName": "Amazon API Gateway V2",
        "ServiceProvider": "AWS",
        "ServiceName": "ApiGatewayV2",
        "DataTypeName": "Model",
        "ResourceTypeIdentifier": "AWS::ApiGatewayV2::Model",
        "ServiceTypeIdentifier": "AWS::ApiGatewayV2"
    },
    {
        "ServiceHumanReadableName": "Amazon API Gateway V2",
        "ServiceProvider": "AWS",
        "ServiceName": "ApiGatewayV2",
        "DataTypeName": "Route",
        "ResourceTypeIdentifier": "AWS::ApiGatewayV2::Route",
        "ServiceTypeIdentifier": "AWS::ApiGatewayV2"
    },
    {
        "ServiceHumanReadableName": "Amazon API Gateway V2",
        "ServiceProvider": "AWS",
        "ServiceName": "ApiGatewayV2",
        "DataTypeName": "RouteResponse",
        "ResourceTypeIdentifier": "AWS::ApiGatewayV2::RouteResponse",
        "ServiceTypeIdentifier": "AWS::ApiGatewayV2"
    },
    {
        "ServiceHumanReadableName": "Amazon API Gateway V2",
        "ServiceProvider": "AWS",
        "ServiceName": "ApiGatewayV2",
        "DataTypeName": "Stage",
        "ResourceTypeIdentifier": "AWS::ApiGatewayV2::Stage",
        "ServiceTypeIdentifier": "AWS::ApiGatewayV2"
    },
    {
        "ServiceHumanReadableName": "Amazon API Gateway V2",
        "ServiceProvider": "AWS",
        "ServiceName": "ApiGatewayV2",
        "DataTypeName": "VpcLink",
        "ResourceTypeIdentifier": "AWS::ApiGatewayV2::VpcLink",
        "ServiceTypeIdentifier": "AWS::ApiGatewayV2"
    },
    {
        "ServiceHumanReadableName": "AWS AppConfig",
        "ServiceProvider": "AWS",
        "ServiceName": "AppConfig",
        "DataTypeName": "Application",
        "ResourceTypeIdentifier": "AWS::AppConfig::Application",
        "ServiceTypeIdentifier": "AWS::AppConfig"
    },
    {
        "ServiceHumanReadableName": "AWS AppConfig",
        "ServiceProvider": "AWS",
        "ServiceName": "AppConfig",
        "DataTypeName": "ConfigurationProfile",
        "ResourceTypeIdentifier": "AWS::AppConfig::ConfigurationProfile",
        "ServiceTypeIdentifier": "AWS::AppConfig"
    },
    {
        "ServiceHumanReadableName": "AWS AppConfig",
        "ServiceProvider": "AWS",
        "ServiceName": "AppConfig",
        "DataTypeName": "Deployment",
        "ResourceTypeIdentifier": "AWS::AppConfig::Deployment",
        "ServiceTypeIdentifier": "AWS::AppConfig"
    },
    {
        "ServiceHumanReadableName": "AWS AppConfig",
        "ServiceProvider": "AWS",
        "ServiceName": "AppConfig",
        "DataTypeName": "DeploymentStrategy",
        "ResourceTypeIdentifier": "AWS::AppConfig::DeploymentStrategy",
        "ServiceTypeIdentifier": "AWS::AppConfig"
    },
    {
        "ServiceHumanReadableName": "AWS AppConfig",
        "ServiceProvider": "AWS",
        "ServiceName": "AppConfig",
        "DataTypeName": "Environment",
        "ResourceTypeIdentifier": "AWS::AppConfig::Environment",
        "ServiceTypeIdentifier": "AWS::AppConfig"
    },
    {
        "ServiceHumanReadableName": "AWS AppConfig",
        "ServiceProvider": "AWS",
        "ServiceName": "AppConfig",
        "DataTypeName": "Extension",
        "ResourceTypeIdentifier": "AWS::AppConfig::Extension",
        "ServiceTypeIdentifier": "AWS::AppConfig"
    },
    {
        "ServiceHumanReadableName": "AWS AppConfig",
        "ServiceProvider": "AWS",
        "ServiceName": "AppConfig",
        "DataTypeName": "ExtensionAssociation",
        "ResourceTypeIdentifier": "AWS::AppConfig::ExtensionAssociation",
        "ServiceTypeIdentifier": "AWS::AppConfig"
    },
    {
        "ServiceHumanReadableName": "AWS AppConfig",
        "ServiceProvider": "AWS",
        "ServiceName": "AppConfig",
        "DataTypeName": "HostedConfigurationVersion",
        "ResourceTypeIdentifier": "AWS::AppConfig::HostedConfigurationVersion",
        "ServiceTypeIdentifier": "AWS::AppConfig"
    },
    {
        "ServiceHumanReadableName": "Amazon AppFlow",
        "ServiceProvider": "AWS",
        "ServiceName": "AppFlow",
        "DataTypeName": "Connector",
        "ResourceTypeIdentifier": "AWS::AppFlow::Connector",
        "ServiceTypeIdentifier": "AWS::AppFlow"
    },
    {
        "ServiceHumanReadableName": "Amazon AppFlow",
        "ServiceProvider": "AWS",
        "ServiceName": "AppFlow",
        "DataTypeName": "ConnectorProfile",
        "ResourceTypeIdentifier": "AWS::AppFlow::ConnectorProfile",
        "ServiceTypeIdentifier": "AWS::AppFlow"
    },
    {
        "ServiceHumanReadableName": "Amazon AppFlow",
        "ServiceProvider": "AWS",
        "ServiceName": "AppFlow",
        "DataTypeName": "Flow",
        "ResourceTypeIdentifier": "AWS::AppFlow::Flow",
        "ServiceTypeIdentifier": "AWS::AppFlow"
    },
    {
        "ServiceHumanReadableName": "Amazon AppIntegrations",
        "ServiceProvider": "AWS",
        "ServiceName": "AppIntegrations",
        "DataTypeName": "Application",
        "ResourceTypeIdentifier": "AWS::AppIntegrations::Application",
        "ServiceTypeIdentifier": "AWS::AppIntegrations"
    },
    {
        "ServiceHumanReadableName": "Amazon AppIntegrations",
        "ServiceProvider": "AWS",
        "ServiceName": "AppIntegrations",
        "DataTypeName": "DataIntegration",
        "ResourceTypeIdentifier": "AWS::AppIntegrations::DataIntegration",
        "ServiceTypeIdentifier": "AWS::AppIntegrations"
    },
    {
        "ServiceHumanReadableName": "Amazon AppIntegrations",
        "ServiceProvider": "AWS",
        "ServiceName": "AppIntegrations",
        "DataTypeName": "EventIntegration",
        "ResourceTypeIdentifier": "AWS::AppIntegrations::EventIntegration",
        "ServiceTypeIdentifier": "AWS::AppIntegrations"
    },
    {
        "ServiceHumanReadableName": "Application Auto Scaling",
        "ServiceProvider": "AWS",
        "ServiceName": "ApplicationAutoScaling",
        "DataTypeName": "ScalableTarget",
        "ResourceTypeIdentifier": "AWS::ApplicationAutoScaling::ScalableTarget",
        "ServiceTypeIdentifier": "AWS::ApplicationAutoScaling"
    },
    {
        "ServiceHumanReadableName": "Application Auto Scaling",
        "ServiceProvider": "AWS",
        "ServiceName": "ApplicationAutoScaling",
        "DataTypeName": "ScalingPolicy",
        "ResourceTypeIdentifier": "AWS::ApplicationAutoScaling::ScalingPolicy",
        "ServiceTypeIdentifier": "AWS::ApplicationAutoScaling"
    },
    {
        "ServiceHumanReadableName": "AWS App Mesh",
        "ServiceProvider": "AWS",
        "ServiceName": "AppMesh",
        "DataTypeName": "GatewayRoute",
        "ResourceTypeIdentifier": "AWS::AppMesh::GatewayRoute",
        "ServiceTypeIdentifier": "AWS::AppMesh"
    },
    {
        "ServiceHumanReadableName": "AWS App Mesh",
        "ServiceProvider": "AWS",
        "ServiceName": "AppMesh",
        "DataTypeName": "Mesh",
        "ResourceTypeIdentifier": "AWS::AppMesh::Mesh",
        "ServiceTypeIdentifier": "AWS::AppMesh"
    },
    {
        "ServiceHumanReadableName": "AWS App Mesh",
        "ServiceProvider": "AWS",
        "ServiceName": "AppMesh",
        "DataTypeName": "Route",
        "ResourceTypeIdentifier": "AWS::AppMesh::Route",
        "ServiceTypeIdentifier": "AWS::AppMesh"
    },
    {
        "ServiceHumanReadableName": "AWS App Mesh",
        "ServiceProvider": "AWS",
        "ServiceName": "AppMesh",
        "DataTypeName": "VirtualGateway",
        "ResourceTypeIdentifier": "AWS::AppMesh::VirtualGateway",
        "ServiceTypeIdentifier": "AWS::AppMesh"
    },
    {
        "ServiceHumanReadableName": "AWS App Mesh",
        "ServiceProvider": "AWS",
        "ServiceName": "AppMesh",
        "DataTypeName": "VirtualNode",
        "ResourceTypeIdentifier": "AWS::AppMesh::VirtualNode",
        "ServiceTypeIdentifier": "AWS::AppMesh"
    },
    {
        "ServiceHumanReadableName": "AWS App Mesh",
        "ServiceProvider": "AWS",
        "ServiceName": "AppMesh",
        "DataTypeName": "VirtualRouter",
        "ResourceTypeIdentifier": "AWS::AppMesh::VirtualRouter",
        "ServiceTypeIdentifier": "AWS::AppMesh"
    },
    {
        "ServiceHumanReadableName": "AWS App Mesh",
        "ServiceProvider": "AWS",
        "ServiceName": "AppMesh",
        "DataTypeName": "VirtualService",
        "ResourceTypeIdentifier": "AWS::AppMesh::VirtualService",
        "ServiceTypeIdentifier": "AWS::AppMesh"
    },
    {
        "ServiceHumanReadableName": "AWS App Runner",
        "ServiceProvider": "AWS",
        "ServiceName": "AppRunner",
        "DataTypeName": "AutoScalingConfiguration",
        "ResourceTypeIdentifier": "AWS::AppRunner::AutoScalingConfiguration",
        "ServiceTypeIdentifier": "AWS::AppRunner"
    },
    {
        "ServiceHumanReadableName": "AWS App Runner",
        "ServiceProvider": "AWS",
        "ServiceName": "AppRunner",
        "DataTypeName": "ObservabilityConfiguration",
        "ResourceTypeIdentifier": "AWS::AppRunner::ObservabilityConfiguration",
        "ServiceTypeIdentifier": "AWS::AppRunner"
    },
    {
        "ServiceHumanReadableName": "AWS App Runner",
        "ServiceProvider": "AWS",
        "ServiceName": "AppRunner",
        "DataTypeName": "Service",
        "ResourceTypeIdentifier": "AWS::AppRunner::Service",
        "ServiceTypeIdentifier": "AWS::AppRunner"
    },
    {
        "ServiceHumanReadableName": "AWS App Runner",
        "ServiceProvider": "AWS",
        "ServiceName": "AppRunner",
        "DataTypeName": "VpcConnector",
        "ResourceTypeIdentifier": "AWS::AppRunner::VpcConnector",
        "ServiceTypeIdentifier": "AWS::AppRunner"
    },
    {
        "ServiceHumanReadableName": "AWS App Runner",
        "ServiceProvider": "AWS",
        "ServiceName": "AppRunner",
        "DataTypeName": "VpcIngressConnection",
        "ResourceTypeIdentifier": "AWS::AppRunner::VpcIngressConnection",
        "ServiceTypeIdentifier": "AWS::AppRunner"
    },
    {
        "ServiceHumanReadableName": "Amazon AppStream 2.0",
        "ServiceProvider": "AWS",
        "ServiceName": "AppStream",
        "DataTypeName": "AppBlock",
        "ResourceTypeIdentifier": "AWS::AppStream::AppBlock",
        "ServiceTypeIdentifier": "AWS::AppStream"
    },
    {
        "ServiceHumanReadableName": "Amazon AppStream 2.0",
        "ServiceProvider": "AWS",
        "ServiceName": "AppStream",
        "DataTypeName": "AppBlockBuilder",
        "ResourceTypeIdentifier": "AWS::AppStream::AppBlockBuilder",
        "ServiceTypeIdentifier": "AWS::AppStream"
    },
    {
        "ServiceHumanReadableName": "Amazon AppStream 2.0",
        "ServiceProvider": "AWS",
        "ServiceName": "AppStream",
        "DataTypeName": "Application",
        "ResourceTypeIdentifier": "AWS::AppStream::Application",
        "ServiceTypeIdentifier": "AWS::AppStream"
    },
    {
        "ServiceHumanReadableName": "Amazon AppStream 2.0",
        "ServiceProvider": "AWS",
        "ServiceName": "AppStream",
        "DataTypeName": "ApplicationEntitlementAssociation",
        "ResourceTypeIdentifier": "AWS::AppStream::ApplicationEntitlementAssociation",
        "ServiceTypeIdentifier": "AWS::AppStream"
    },
    {
        "ServiceHumanReadableName": "Amazon AppStream 2.0",
        "ServiceProvider": "AWS",
        "ServiceName": "AppStream",
        "DataTypeName": "ApplicationFleetAssociation",
        "ResourceTypeIdentifier": "AWS::AppStream::ApplicationFleetAssociation",
        "ServiceTypeIdentifier": "AWS::AppStream"
    },
    {
        "ServiceHumanReadableName": "Amazon AppStream 2.0",
        "ServiceProvider": "AWS",
        "ServiceName": "AppStream",
        "DataTypeName": "DirectoryConfig",
        "ResourceTypeIdentifier": "AWS::AppStream::DirectoryConfig",
        "ServiceTypeIdentifier": "AWS::AppStream"
    },
    {
        "ServiceHumanReadableName": "Amazon AppStream 2.0",
        "ServiceProvider": "AWS",
        "ServiceName": "AppStream",
        "DataTypeName": "Entitlement",
        "ResourceTypeIdentifier": "AWS::AppStream::Entitlement",
        "ServiceTypeIdentifier": "AWS::AppStream"
    },
    {
        "ServiceHumanReadableName": "Amazon AppStream 2.0",
        "ServiceProvider": "AWS",
        "ServiceName": "AppStream",
        "DataTypeName": "Fleet",
        "ResourceTypeIdentifier": "AWS::AppStream::Fleet",
        "ServiceTypeIdentifier": "AWS::AppStream"
    },
    {
        "ServiceHumanReadableName": "Amazon AppStream 2.0",
        "ServiceProvider": "AWS",
        "ServiceName": "AppStream",
        "DataTypeName": "ImageBuilder",
        "ResourceTypeIdentifier": "AWS::AppStream::ImageBuilder",
        "ServiceTypeIdentifier": "AWS::AppStream"
    },
    {
        "ServiceHumanReadableName": "Amazon AppStream 2.0",
        "ServiceProvider": "AWS",
        "ServiceName": "AppStream",
        "DataTypeName": "Stack",
        "ResourceTypeIdentifier": "AWS::AppStream::Stack",
        "ServiceTypeIdentifier": "AWS::AppStream"
    },
    {
        "ServiceHumanReadableName": "Amazon AppStream 2.0",
        "ServiceProvider": "AWS",
        "ServiceName": "AppStream",
        "DataTypeName": "StackFleetAssociation",
        "ResourceTypeIdentifier": "AWS::AppStream::StackFleetAssociation",
        "ServiceTypeIdentifier": "AWS::AppStream"
    },
    {
        "ServiceHumanReadableName": "Amazon AppStream 2.0",
        "ServiceProvider": "AWS",
        "ServiceName": "AppStream",
        "DataTypeName": "StackUserAssociation",
        "ResourceTypeIdentifier": "AWS::AppStream::StackUserAssociation",
        "ServiceTypeIdentifier": "AWS::AppStream"
    },
    {
        "ServiceHumanReadableName": "Amazon AppStream 2.0",
        "ServiceProvider": "AWS",
        "ServiceName": "AppStream",
        "DataTypeName": "User",
        "ResourceTypeIdentifier": "AWS::AppStream::User",
        "ServiceTypeIdentifier": "AWS::AppStream"
    },
    {
        "ServiceHumanReadableName": "AWS AppSync",
        "ServiceProvider": "AWS",
        "ServiceName": "AppSync",
        "DataTypeName": "Api",
        "ResourceTypeIdentifier": "AWS::AppSync::Api",
        "ServiceTypeIdentifier": "AWS::AppSync"
    },
    {
        "ServiceHumanReadableName": "AWS AppSync",
        "ServiceProvider": "AWS",
        "ServiceName": "AppSync",
        "DataTypeName": "ApiCache",
        "ResourceTypeIdentifier": "AWS::AppSync::ApiCache",
        "ServiceTypeIdentifier": "AWS::AppSync"
    },
    {
        "ServiceHumanReadableName": "AWS AppSync",
        "ServiceProvider": "AWS",
        "ServiceName": "AppSync",
        "DataTypeName": "ApiKey",
        "ResourceTypeIdentifier": "AWS::AppSync::ApiKey",
        "ServiceTypeIdentifier": "AWS::AppSync"
    },
    {
        "ServiceHumanReadableName": "AWS AppSync",
        "ServiceProvider": "AWS",
        "ServiceName": "AppSync",
        "DataTypeName": "ChannelNamespace",
        "ResourceTypeIdentifier": "AWS::AppSync::ChannelNamespace",
        "ServiceTypeIdentifier": "AWS::AppSync"
    },
    {
        "ServiceHumanReadableName": "AWS AppSync",
        "ServiceProvider": "AWS",
        "ServiceName": "AppSync",
        "DataTypeName": "DataSource",
        "ResourceTypeIdentifier": "AWS::AppSync::DataSource",
        "ServiceTypeIdentifier": "AWS::AppSync"
    },
    {
        "ServiceHumanReadableName": "AWS AppSync",
        "ServiceProvider": "AWS",
        "ServiceName": "AppSync",
        "DataTypeName": "DomainName",
        "ResourceTypeIdentifier": "AWS::AppSync::DomainName",
        "ServiceTypeIdentifier": "AWS::AppSync"
    },
    {
        "ServiceHumanReadableName": "AWS AppSync",
        "ServiceProvider": "AWS",
        "ServiceName": "AppSync",
        "DataTypeName": "DomainNameApiAssociation",
        "ResourceTypeIdentifier": "AWS::AppSync::DomainNameApiAssociation",
        "ServiceTypeIdentifier": "AWS::AppSync"
    },
    {
        "ServiceHumanReadableName": "AWS AppSync",
        "ServiceProvider": "AWS",
        "ServiceName": "AppSync",
        "DataTypeName": "FunctionConfiguration",
        "ResourceTypeIdentifier": "AWS::AppSync::FunctionConfiguration",
        "ServiceTypeIdentifier": "AWS::AppSync"
    },
    {
        "ServiceHumanReadableName": "AWS AppSync",
        "ServiceProvider": "AWS",
        "ServiceName": "AppSync",
        "DataTypeName": "GraphQLApi",
        "ResourceTypeIdentifier": "AWS::AppSync::GraphQLApi",
        "ServiceTypeIdentifier": "AWS::AppSync"
    },
    {
        "ServiceHumanReadableName": "AWS AppSync",
        "ServiceProvider": "AWS",
        "ServiceName": "AppSync",
        "DataTypeName": "GraphQLSchema",
        "ResourceTypeIdentifier": "AWS::AppSync::GraphQLSchema",
        "ServiceTypeIdentifier": "AWS::AppSync"
    },
    {
        "ServiceHumanReadableName": "AWS AppSync",
        "ServiceProvider": "AWS",
        "ServiceName": "AppSync",
        "DataTypeName": "Resolver",
        "ResourceTypeIdentifier": "AWS::AppSync::Resolver",
        "ServiceTypeIdentifier": "AWS::AppSync"
    },
    {
        "ServiceHumanReadableName": "AWS AppSync",
        "ServiceProvider": "AWS",
        "ServiceName": "AppSync",
        "DataTypeName": "SourceApiAssociation",
        "ResourceTypeIdentifier": "AWS::AppSync::SourceApiAssociation",
        "ServiceTypeIdentifier": "AWS::AppSync"
    },
    {
        "ServiceHumanReadableName": "AWS ARC - Zonal Shift",
        "ServiceProvider": "AWS",
        "ServiceName": "ARCZonalShift",
        "DataTypeName": "AutoshiftObserverNotificationStatus",
        "ResourceTypeIdentifier": "AWS::ARCZonalShift::AutoshiftObserverNotificationStatus",
        "ServiceTypeIdentifier": "AWS::ARCZonalShift"
    },
    {
        "ServiceHumanReadableName": "AWS ARC - Zonal Shift",
        "ServiceProvider": "AWS",
        "ServiceName": "ARCZonalShift",
        "DataTypeName": "ZonalAutoshiftConfiguration",
        "ResourceTypeIdentifier": "AWS::ARCZonalShift::ZonalAutoshiftConfiguration",
        "ServiceTypeIdentifier": "AWS::ARCZonalShift"
    },
    {
        "ServiceHumanReadableName": "Alexa Skills Kit",
        "ServiceProvider": "Alexa",
        "ServiceName": "ASK",
        "DataTypeName": "Skill",
        "ResourceTypeIdentifier": "Alexa::ASK::Skill",
        "ServiceTypeIdentifier": "Alexa::ASK"
    },
    {
        "ServiceHumanReadableName": "Amazon Athena",
        "ServiceProvider": "AWS",
        "ServiceName": "Athena",
        "DataTypeName": "CapacityReservation",
        "ResourceTypeIdentifier": "AWS::Athena::CapacityReservation",
        "ServiceTypeIdentifier": "AWS::Athena"
    },
    {
        "ServiceHumanReadableName": "Amazon Athena",
        "ServiceProvider": "AWS",
        "ServiceName": "Athena",
        "DataTypeName": "DataCatalog",
        "ResourceTypeIdentifier": "AWS::Athena::DataCatalog",
        "ServiceTypeIdentifier": "AWS::Athena"
    },
    {
        "ServiceHumanReadableName": "Amazon Athena",
        "ServiceProvider": "AWS",
        "ServiceName": "Athena",
        "DataTypeName": "NamedQuery",
        "ResourceTypeIdentifier": "AWS::Athena::NamedQuery",
        "ServiceTypeIdentifier": "AWS::Athena"
    },
    {
        "ServiceHumanReadableName": "Amazon Athena",
        "ServiceProvider": "AWS",
        "ServiceName": "Athena",
        "DataTypeName": "PreparedStatement",
        "ResourceTypeIdentifier": "AWS::Athena::PreparedStatement",
        "ServiceTypeIdentifier": "AWS::Athena"
    },
    {
        "ServiceHumanReadableName": "Amazon Athena",
        "ServiceProvider": "AWS",
        "ServiceName": "Athena",
        "DataTypeName": "WorkGroup",
        "ResourceTypeIdentifier": "AWS::Athena::WorkGroup",
        "ServiceTypeIdentifier": "AWS::Athena"
    },
    {
        "ServiceHumanReadableName": "AWS Audit Manager",
        "ServiceProvider": "AWS",
        "ServiceName": "AuditManager",
        "DataTypeName": "Assessment",
        "ResourceTypeIdentifier": "AWS::AuditManager::Assessment",
        "ServiceTypeIdentifier": "AWS::AuditManager"
    },
    {
        "ServiceHumanReadableName": "AWS Auto Scaling",
        "ServiceProvider": "AWS",
        "ServiceName": "AutoScalingPlans",
        "DataTypeName": "ScalingPlan",
        "ResourceTypeIdentifier": "AWS::AutoScalingPlans::ScalingPlan",
        "ServiceTypeIdentifier": "AWS::AutoScalingPlans"
    },
    {
        "ServiceHumanReadableName": "AWS B2B Data Interchange",
        "ServiceProvider": "AWS",
        "ServiceName": "B2BI",
        "DataTypeName": "Capability",
        "ResourceTypeIdentifier": "AWS::B2BI::Capability",
        "ServiceTypeIdentifier": "AWS::B2BI"
    },
    {
        "ServiceHumanReadableName": "AWS B2B Data Interchange",
        "ServiceProvider": "AWS",
        "ServiceName": "B2BI",
        "DataTypeName": "Partnership",
        "ResourceTypeIdentifier": "AWS::B2BI::Partnership",
        "ServiceTypeIdentifier": "AWS::B2BI"
    },
    {
        "ServiceHumanReadableName": "AWS B2B Data Interchange",
        "ServiceProvider": "AWS",
        "ServiceName": "B2BI",
        "DataTypeName": "Profile",
        "ResourceTypeIdentifier": "AWS::B2BI::Profile",
        "ServiceTypeIdentifier": "AWS::B2BI"
    },
    {
        "ServiceHumanReadableName": "AWS B2B Data Interchange",
        "ServiceProvider": "AWS",
        "ServiceName": "B2BI",
        "DataTypeName": "Transformer",
        "ResourceTypeIdentifier": "AWS::B2BI::Transformer",
        "ServiceTypeIdentifier": "AWS::B2BI"
    },
    {
        "ServiceHumanReadableName": "AWS Backup",
        "ServiceProvider": "AWS",
        "ServiceName": "Backup",
        "DataTypeName": "BackupPlan",
        "ResourceTypeIdentifier": "AWS::Backup::BackupPlan",
        "ServiceTypeIdentifier": "AWS::Backup"
    },
    {
        "ServiceHumanReadableName": "AWS Backup",
        "ServiceProvider": "AWS",
        "ServiceName": "Backup",
        "DataTypeName": "BackupSelection",
        "ResourceTypeIdentifier": "AWS::Backup::BackupSelection",
        "ServiceTypeIdentifier": "AWS::Backup"
    },
    {
        "ServiceHumanReadableName": "AWS Backup",
        "ServiceProvider": "AWS",
        "ServiceName": "Backup",
        "DataTypeName": "BackupVault",
        "ResourceTypeIdentifier": "AWS::Backup::BackupVault",
        "ServiceTypeIdentifier": "AWS::Backup"
    },
    {
        "ServiceHumanReadableName": "AWS Backup",
        "ServiceProvider": "AWS",
        "ServiceName": "Backup",
        "DataTypeName": "Framework",
        "ResourceTypeIdentifier": "AWS::Backup::Framework",
        "ServiceTypeIdentifier": "AWS::Backup"
    },
    {
        "ServiceHumanReadableName": "AWS Backup",
        "ServiceProvider": "AWS",
        "ServiceName": "Backup",
        "DataTypeName": "LogicallyAirGappedBackupVault",
        "ResourceTypeIdentifier": "AWS::Backup::LogicallyAirGappedBackupVault",
        "ServiceTypeIdentifier": "AWS::Backup"
    },
    {
        "ServiceHumanReadableName": "AWS Backup",
        "ServiceProvider": "AWS",
        "ServiceName": "Backup",
        "DataTypeName": "ReportPlan",
        "ResourceTypeIdentifier": "AWS::Backup::ReportPlan",
        "ServiceTypeIdentifier": "AWS::Backup"
    },
    {
        "ServiceHumanReadableName": "AWS Backup",
        "ServiceProvider": "AWS",
        "ServiceName": "Backup",
        "DataTypeName": "RestoreTestingPlan",
        "ResourceTypeIdentifier": "AWS::Backup::RestoreTestingPlan",
        "ServiceTypeIdentifier": "AWS::Backup"
    },
    {
        "ServiceHumanReadableName": "AWS Backup",
        "ServiceProvider": "AWS",
        "ServiceName": "Backup",
        "DataTypeName": "RestoreTestingSelection",
        "ResourceTypeIdentifier": "AWS::Backup::RestoreTestingSelection",
        "ServiceTypeIdentifier": "AWS::Backup"
    },
    {
        "ServiceHumanReadableName": "AWS Backup gateway",
        "ServiceProvider": "AWS",
        "ServiceName": "BackupGateway",
        "DataTypeName": "Hypervisor",
        "ResourceTypeIdentifier": "AWS::BackupGateway::Hypervisor",
        "ServiceTypeIdentifier": "AWS::BackupGateway"
    },
    {
        "ServiceHumanReadableName": "AWS Batch",
        "ServiceProvider": "AWS",
        "ServiceName": "Batch",
        "DataTypeName": "ComputeEnvironment",
        "ResourceTypeIdentifier": "AWS::Batch::ComputeEnvironment",
        "ServiceTypeIdentifier": "AWS::Batch"
    },
    {
        "ServiceHumanReadableName": "AWS Batch",
        "ServiceProvider": "AWS",
        "ServiceName": "Batch",
        "DataTypeName": "JobDefinition",
        "ResourceTypeIdentifier": "AWS::Batch::JobDefinition",
        "ServiceTypeIdentifier": "AWS::Batch"
    },
    {
        "ServiceHumanReadableName": "AWS Batch",
        "ServiceProvider": "AWS",
        "ServiceName": "Batch",
        "DataTypeName": "JobQueue",
        "ResourceTypeIdentifier": "AWS::Batch::JobQueue",
        "ServiceTypeIdentifier": "AWS::Batch"
    },
    {
        "ServiceHumanReadableName": "AWS Batch",
        "ServiceProvider": "AWS",
        "ServiceName": "Batch",
        "DataTypeName": "SchedulingPolicy",
        "ResourceTypeIdentifier": "AWS::Batch::SchedulingPolicy",
        "ServiceTypeIdentifier": "AWS::Batch"
    },
    {
        "ServiceHumanReadableName": "Amazon Bedrock",
        "ServiceProvider": "AWS",
        "ServiceName": "Bedrock",
        "DataTypeName": "Agent",
        "ResourceTypeIdentifier": "AWS::Bedrock::Agent",
        "ServiceTypeIdentifier": "AWS::Bedrock"
    },
    {
        "ServiceHumanReadableName": "Amazon Bedrock",
        "ServiceProvider": "AWS",
        "ServiceName": "Bedrock",
        "DataTypeName": "AgentAlias",
        "ResourceTypeIdentifier": "AWS::Bedrock::AgentAlias",
        "ServiceTypeIdentifier": "AWS::Bedrock"
    },
    {
        "ServiceHumanReadableName": "Amazon Bedrock",
        "ServiceProvider": "AWS",
        "ServiceName": "Bedrock",
        "DataTypeName": "ApplicationInferenceProfile",
        "ResourceTypeIdentifier": "AWS::Bedrock::ApplicationInferenceProfile",
        "ServiceTypeIdentifier": "AWS::Bedrock"
    },
    {
        "ServiceHumanReadableName": "Amazon Bedrock",
        "ServiceProvider": "AWS",
        "ServiceName": "Bedrock",
        "DataTypeName": "DataSource",
        "ResourceTypeIdentifier": "AWS::Bedrock::DataSource",
        "ServiceTypeIdentifier": "AWS::Bedrock"
    },
    {
        "ServiceHumanReadableName": "Amazon Bedrock",
        "ServiceProvider": "AWS",
        "ServiceName": "Bedrock",
        "DataTypeName": "Flow",
        "ResourceTypeIdentifier": "AWS::Bedrock::Flow",
        "ServiceTypeIdentifier": "AWS::Bedrock"
    },
    {
        "ServiceHumanReadableName": "Amazon Bedrock",
        "ServiceProvider": "AWS",
        "ServiceName": "Bedrock",
        "DataTypeName": "FlowAlias",
        "ResourceTypeIdentifier": "AWS::Bedrock::FlowAlias",
        "ServiceTypeIdentifier": "AWS::Bedrock"
    },
    {
        "ServiceHumanReadableName": "Amazon Bedrock",
        "ServiceProvider": "AWS",
        "ServiceName": "Bedrock",
        "DataTypeName": "FlowVersion",
        "ResourceTypeIdentifier": "AWS::Bedrock::FlowVersion",
        "ServiceTypeIdentifier": "AWS::Bedrock"
    },
    {
        "ServiceHumanReadableName": "Amazon Bedrock",
        "ServiceProvider": "AWS",
        "ServiceName": "Bedrock",
        "DataTypeName": "Guardrail",
        "ResourceTypeIdentifier": "AWS::Bedrock::Guardrail",
        "ServiceTypeIdentifier": "AWS::Bedrock"
    },
    {
        "ServiceHumanReadableName": "Amazon Bedrock",
        "ServiceProvider": "AWS",
        "ServiceName": "Bedrock",
        "DataTypeName": "GuardrailVersion",
        "ResourceTypeIdentifier": "AWS::Bedrock::GuardrailVersion",
        "ServiceTypeIdentifier": "AWS::Bedrock"
    },
    {
        "ServiceHumanReadableName": "Amazon Bedrock",
        "ServiceProvider": "AWS",
        "ServiceName": "Bedrock",
        "DataTypeName": "KnowledgeBase",
        "ResourceTypeIdentifier": "AWS::Bedrock::KnowledgeBase",
        "ServiceTypeIdentifier": "AWS::Bedrock"
    },
    {
        "ServiceHumanReadableName": "Amazon Bedrock",
        "ServiceProvider": "AWS",
        "ServiceName": "Bedrock",
        "DataTypeName": "Prompt",
        "ResourceTypeIdentifier": "AWS::Bedrock::Prompt",
        "ServiceTypeIdentifier": "AWS::Bedrock"
    },
    {
        "ServiceHumanReadableName": "Amazon Bedrock",
        "ServiceProvider": "AWS",
        "ServiceName": "Bedrock",
        "DataTypeName": "PromptVersion",
        "ResourceTypeIdentifier": "AWS::Bedrock::PromptVersion",
        "ServiceTypeIdentifier": "AWS::Bedrock"
    },
    {
        "ServiceHumanReadableName": "AWS Billing Conductor",
        "ServiceProvider": "AWS",
        "ServiceName": "BillingConductor",
        "DataTypeName": "BillingGroup",
        "ResourceTypeIdentifier": "AWS::BillingConductor::BillingGroup",
        "ServiceTypeIdentifier": "AWS::BillingConductor"
    },
    {
        "ServiceHumanReadableName": "AWS Billing Conductor",
        "ServiceProvider": "AWS",
        "ServiceName": "BillingConductor",
        "DataTypeName": "CustomLineItem",
        "ResourceTypeIdentifier": "AWS::BillingConductor::CustomLineItem",
        "ServiceTypeIdentifier": "AWS::BillingConductor"
    },
    {
        "ServiceHumanReadableName": "AWS Billing Conductor",
        "ServiceProvider": "AWS",
        "ServiceName": "BillingConductor",
        "DataTypeName": "PricingPlan",
        "ResourceTypeIdentifier": "AWS::BillingConductor::PricingPlan",
        "ServiceTypeIdentifier": "AWS::BillingConductor"
    },
    {
        "ServiceHumanReadableName": "AWS Billing Conductor",
        "ServiceProvider": "AWS",
        "ServiceName": "BillingConductor",
        "DataTypeName": "PricingRule",
        "ResourceTypeIdentifier": "AWS::BillingConductor::PricingRule",
        "ServiceTypeIdentifier": "AWS::BillingConductor"
    },
    {
        "ServiceHumanReadableName": "AWS Budgets",
        "ServiceProvider": "AWS",
        "ServiceName": "Budgets",
        "DataTypeName": "Budget",
        "ResourceTypeIdentifier": "AWS::Budgets::Budget",
        "ServiceTypeIdentifier": "AWS::Budgets"
    },
    {
        "ServiceHumanReadableName": "AWS Budgets",
        "ServiceProvider": "AWS",
        "ServiceName": "Budgets",
        "DataTypeName": "BudgetsAction",
        "ResourceTypeIdentifier": "AWS::Budgets::BudgetsAction",
        "ServiceTypeIdentifier": "AWS::Budgets"
    },
    {
        "ServiceHumanReadableName": "AWS Certificate Manager",
        "ServiceProvider": "AWS",
        "ServiceName": "CertificateManager",
        "DataTypeName": "Account",
        "ResourceTypeIdentifier": "AWS::CertificateManager::Account",
        "ServiceTypeIdentifier": "AWS::CertificateManager"
    },
    {
        "ServiceHumanReadableName": "AWS Certificate Manager",
        "ServiceProvider": "AWS",
        "ServiceName": "CertificateManager",
        "DataTypeName": "Certificate",
        "ResourceTypeIdentifier": "AWS::CertificateManager::Certificate",
        "ServiceTypeIdentifier": "AWS::CertificateManager"
    },
    {
        "ServiceHumanReadableName": "AWS Chatbot",
        "ServiceProvider": "AWS",
        "ServiceName": "Chatbot",
        "DataTypeName": "MicrosoftTeamsChannelConfiguration",
        "ResourceTypeIdentifier": "AWS::Chatbot::MicrosoftTeamsChannelConfiguration",
        "ServiceTypeIdentifier": "AWS::Chatbot"
    },
    {
        "ServiceHumanReadableName": "AWS Chatbot",
        "ServiceProvider": "AWS",
        "ServiceName": "Chatbot",
        "DataTypeName": "SlackChannelConfiguration",
        "ResourceTypeIdentifier": "AWS::Chatbot::SlackChannelConfiguration",
        "ServiceTypeIdentifier": "AWS::Chatbot"
    },
    {
        "ServiceHumanReadableName": "AWS Clean Rooms",
        "ServiceProvider": "AWS",
        "ServiceName": "CleanRooms",
        "DataTypeName": "AnalysisTemplate",
        "ResourceTypeIdentifier": "AWS::CleanRooms::AnalysisTemplate",
        "ServiceTypeIdentifier": "AWS::CleanRooms"
    },
    {
        "ServiceHumanReadableName": "AWS Clean Rooms",
        "ServiceProvider": "AWS",
        "ServiceName": "CleanRooms",
        "DataTypeName": "Collaboration",
        "ResourceTypeIdentifier": "AWS::CleanRooms::Collaboration",
        "ServiceTypeIdentifier": "AWS::CleanRooms"
    },
    {
        "ServiceHumanReadableName": "AWS Clean Rooms",
        "ServiceProvider": "AWS",
        "ServiceName": "CleanRooms",
        "DataTypeName": "ConfiguredTable",
        "ResourceTypeIdentifier": "AWS::CleanRooms::ConfiguredTable",
        "ServiceTypeIdentifier": "AWS::CleanRooms"
    },
    {
        "ServiceHumanReadableName": "AWS Clean Rooms",
        "ServiceProvider": "AWS",
        "ServiceName": "CleanRooms",
        "DataTypeName": "ConfiguredTableAssociation",
        "ResourceTypeIdentifier": "AWS::CleanRooms::ConfiguredTableAssociation",
        "ServiceTypeIdentifier": "AWS::CleanRooms"
    },
    {
        "ServiceHumanReadableName": "AWS Clean Rooms",
        "ServiceProvider": "AWS",
        "ServiceName": "CleanRooms",
        "DataTypeName": "IdMappingTable",
        "ResourceTypeIdentifier": "AWS::CleanRooms::IdMappingTable",
        "ServiceTypeIdentifier": "AWS::CleanRooms"
    },
    {
        "ServiceHumanReadableName": "AWS Clean Rooms",
        "ServiceProvider": "AWS",
        "ServiceName": "CleanRooms",
        "DataTypeName": "IdNamespaceAssociation",
        "ResourceTypeIdentifier": "AWS::CleanRooms::IdNamespaceAssociation",
        "ServiceTypeIdentifier": "AWS::CleanRooms"
    },
    {
        "ServiceHumanReadableName": "AWS Clean Rooms",
        "ServiceProvider": "AWS",
        "ServiceName": "CleanRooms",
        "DataTypeName": "Membership",
        "ResourceTypeIdentifier": "AWS::CleanRooms::Membership",
        "ServiceTypeIdentifier": "AWS::CleanRooms"
    },
    {
        "ServiceHumanReadableName": "AWS Clean Rooms",
        "ServiceProvider": "AWS",
        "ServiceName": "CleanRooms",
        "DataTypeName": "PrivacyBudgetTemplate",
        "ResourceTypeIdentifier": "AWS::CleanRooms::PrivacyBudgetTemplate",
        "ServiceTypeIdentifier": "AWS::CleanRooms"
    },
    {
        "ServiceHumanReadableName": "CleanRoomsML",
        "ServiceProvider": "AWS",
        "ServiceName": "CleanRoomsML",
        "DataTypeName": "TrainingDataset",
        "ResourceTypeIdentifier": "AWS::CleanRoomsML::TrainingDataset",
        "ServiceTypeIdentifier": "AWS::CleanRoomsML"
    },
    {
        "ServiceHumanReadableName": "AWS Cloud9",
        "ServiceProvider": "AWS",
        "ServiceName": "Cloud9",
        "DataTypeName": "EnvironmentEC2",
        "ResourceTypeIdentifier": "AWS::Cloud9::EnvironmentEC2",
        "ServiceTypeIdentifier": "AWS::Cloud9"
    },
    {
        "ServiceHumanReadableName": "AWS CloudFormation",
        "ServiceProvider": "AWS",
        "ServiceName": "CloudFormation",
        "DataTypeName": "CustomResource",
        "ResourceTypeIdentifier": "AWS::CloudFormation::CustomResource",
        "ServiceTypeIdentifier": "AWS::CloudFormation"
    },
    {
        "ServiceHumanReadableName": "AWS CloudFormation",
        "ServiceProvider": "AWS",
        "ServiceName": "CloudFormation",
        "DataTypeName": "HookDefaultVersion",
        "ResourceTypeIdentifier": "AWS::CloudFormation::HookDefaultVersion",
        "ServiceTypeIdentifier": "AWS::CloudFormation"
    },
    {
        "ServiceHumanReadableName": "AWS CloudFormation",
        "ServiceProvider": "AWS",
        "ServiceName": "CloudFormation",
        "DataTypeName": "HookTypeConfig",
        "ResourceTypeIdentifier": "AWS::CloudFormation::HookTypeConfig",
        "ServiceTypeIdentifier": "AWS::CloudFormation"
    },
    {
        "ServiceHumanReadableName": "AWS CloudFormation",
        "ServiceProvider": "AWS",
        "ServiceName": "CloudFormation",
        "DataTypeName": "HookVersion",
        "ResourceTypeIdentifier": "AWS::CloudFormation::HookVersion",
        "ServiceTypeIdentifier": "AWS::CloudFormation"
    },
    {
        "ServiceHumanReadableName": "AWS CloudFormation",
        "ServiceProvider": "AWS",
        "ServiceName": "CloudFormation",
        "DataTypeName": "Macro",
        "ResourceTypeIdentifier": "AWS::CloudFormation::Macro",
        "ServiceTypeIdentifier": "AWS::CloudFormation"
    },
    {
        "ServiceHumanReadableName": "AWS CloudFormation",
        "ServiceProvider": "AWS",
        "ServiceName": "CloudFormation",
        "DataTypeName": "ModuleDefaultVersion",
        "ResourceTypeIdentifier": "AWS::CloudFormation::ModuleDefaultVersion",
        "ServiceTypeIdentifier": "AWS::CloudFormation"
    },
    {
        "ServiceHumanReadableName": "AWS CloudFormation",
        "ServiceProvider": "AWS",
        "ServiceName": "CloudFormation",
        "DataTypeName": "ModuleVersion",
        "ResourceTypeIdentifier": "AWS::CloudFormation::ModuleVersion",
        "ServiceTypeIdentifier": "AWS::CloudFormation"
    },
    {
        "ServiceHumanReadableName": "AWS CloudFormation",
        "ServiceProvider": "AWS",
        "ServiceName": "CloudFormation",
        "DataTypeName": "PublicTypeVersion",
        "ResourceTypeIdentifier": "AWS::CloudFormation::PublicTypeVersion",
        "ServiceTypeIdentifier": "AWS::CloudFormation"
    },
    {
        "ServiceHumanReadableName": "AWS CloudFormation",
        "ServiceProvider": "AWS",
        "ServiceName": "CloudFormation",
        "DataTypeName": "Publisher",
        "ResourceTypeIdentifier": "AWS::CloudFormation::Publisher",
        "ServiceTypeIdentifier": "AWS::CloudFormation"
    },
    {
        "ServiceHumanReadableName": "AWS CloudFormation",
        "ServiceProvider": "AWS",
        "ServiceName": "CloudFormation",
        "DataTypeName": "ResourceDefaultVersion",
        "ResourceTypeIdentifier": "AWS::CloudFormation::ResourceDefaultVersion",
        "ServiceTypeIdentifier": "AWS::CloudFormation"
    },
    {
        "ServiceHumanReadableName": "AWS CloudFormation",
        "ServiceProvider": "AWS",
        "ServiceName": "CloudFormation",
        "DataTypeName": "ResourceVersion",
        "ResourceTypeIdentifier": "AWS::CloudFormation::ResourceVersion",
        "ServiceTypeIdentifier": "AWS::CloudFormation"
    },
    {
        "ServiceHumanReadableName": "AWS CloudFormation",
        "ServiceProvider": "AWS",
        "ServiceName": "CloudFormation",
        "DataTypeName": "Stack",
        "ResourceTypeIdentifier": "AWS::CloudFormation::Stack",
        "ServiceTypeIdentifier": "AWS::CloudFormation"
    },
    {
        "ServiceHumanReadableName": "AWS CloudFormation",
        "ServiceProvider": "AWS",
        "ServiceName": "CloudFormation",
        "DataTypeName": "StackSet",
        "ResourceTypeIdentifier": "AWS::CloudFormation::StackSet",
        "ServiceTypeIdentifier": "AWS::CloudFormation"
    },
    {
        "ServiceHumanReadableName": "AWS CloudFormation",
        "ServiceProvider": "AWS",
        "ServiceName": "CloudFormation",
        "DataTypeName": "TypeActivation",
        "ResourceTypeIdentifier": "AWS::CloudFormation::TypeActivation",
        "ServiceTypeIdentifier": "AWS::CloudFormation"
    },
    {
        "ServiceHumanReadableName": "AWS CloudFormation",
        "ServiceProvider": "AWS",
        "ServiceName": "CloudFormation",
        "DataTypeName": "WaitCondition",
        "ResourceTypeIdentifier": "AWS::CloudFormation::WaitCondition",
        "ServiceTypeIdentifier": "AWS::CloudFormation"
    },
    {
        "ServiceHumanReadableName": "AWS CloudFormation",
        "ServiceProvider": "AWS",
        "ServiceName": "CloudFormation",
        "DataTypeName": "WaitConditionHandle",
        "ResourceTypeIdentifier": "AWS::CloudFormation::WaitConditionHandle",
        "ServiceTypeIdentifier": "AWS::CloudFormation"
    },
    {
        "ServiceHumanReadableName": "Amazon CloudFront",
        "ServiceProvider": "AWS",
        "ServiceName": "CloudFront",
        "DataTypeName": "CachePolicy",
        "ResourceTypeIdentifier": "AWS::CloudFront::CachePolicy",
        "ServiceTypeIdentifier": "AWS::CloudFront"
    },
    {
        "ServiceHumanReadableName": "Amazon CloudFront",
        "ServiceProvider": "AWS",
        "ServiceName": "CloudFront",
        "DataTypeName": "CloudFrontOriginAccessIdentity",
        "ResourceTypeIdentifier": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
        "ServiceTypeIdentifier": "AWS::CloudFront"
    },
    {
        "ServiceHumanReadableName": "Amazon CloudFront",
        "ServiceProvider": "AWS",
        "ServiceName": "CloudFront",
        "DataTypeName": "ContinuousDeploymentPolicy",
        "ResourceTypeIdentifier": "AWS::CloudFront::ContinuousDeploymentPolicy",
        "ServiceTypeIdentifier": "AWS::CloudFront"
    },
    {
        "ServiceHumanReadableName": "Amazon CloudFront",
        "ServiceProvider": "AWS",
        "ServiceName": "CloudFront",
        "DataTypeName": "Distribution",
        "ResourceTypeIdentifier": "AWS::CloudFront::Distribution",
        "ServiceTypeIdentifier": "AWS::CloudFront"
    },
    {
        "ServiceHumanReadableName": "Amazon CloudFront",
        "ServiceProvider": "AWS",
        "ServiceName": "CloudFront",
        "DataTypeName": "Function",
        "ResourceTypeIdentifier": "AWS::CloudFront::Function",
        "ServiceTypeIdentifier": "AWS::CloudFront"
    },
    {
        "ServiceHumanReadableName": "Amazon CloudFront",
        "ServiceProvider": "AWS",
        "ServiceName": "CloudFront",
        "DataTypeName": "KeyGroup",
        "ResourceTypeIdentifier": "AWS::CloudFront::KeyGroup",
        "ServiceTypeIdentifier": "AWS::CloudFront"
    },
    {
        "ServiceHumanReadableName": "Amazon CloudFront",
        "ServiceProvider": "AWS",
        "ServiceName": "CloudFront",
        "DataTypeName": "KeyValueStore",
        "ResourceTypeIdentifier": "AWS::CloudFront::KeyValueStore",
        "ServiceTypeIdentifier": "AWS::CloudFront"
    },
    {
        "ServiceHumanReadableName": "Amazon CloudFront",
        "ServiceProvider": "AWS",
        "ServiceName": "CloudFront",
        "DataTypeName": "MonitoringSubscription",
        "ResourceTypeIdentifier": "AWS::CloudFront::MonitoringSubscription",
        "ServiceTypeIdentifier": "AWS::CloudFront"
    },
    {
        "ServiceHumanReadableName": "Amazon CloudFront",
        "ServiceProvider": "AWS",
        "ServiceName": "CloudFront",
        "DataTypeName": "OriginAccessControl",
        "ResourceTypeIdentifier": "AWS::CloudFront::OriginAccessControl",
        "ServiceTypeIdentifier": "AWS::CloudFront"
    },
    {
        "ServiceHumanReadableName": "Amazon CloudFront",
        "ServiceProvider": "AWS",
        "ServiceName": "CloudFront",
        "DataTypeName": "OriginRequestPolicy",
        "ResourceTypeIdentifier": "AWS::CloudFront::OriginRequestPolicy",
        "ServiceTypeIdentifier": "AWS::CloudFront"
    },
    {
        "ServiceHumanReadableName": "Amazon CloudFront",
        "ServiceProvider": "AWS",
        "ServiceName": "CloudFront",
        "DataTypeName": "PublicKey",
        "ResourceTypeIdentifier": "AWS::CloudFront::PublicKey",
        "ServiceTypeIdentifier": "AWS::CloudFront"
    },
    {
        "ServiceHumanReadableName": "Amazon CloudFront",
        "ServiceProvider": "AWS",
        "ServiceName": "CloudFront",
        "DataTypeName": "RealtimeLogConfig",
        "ResourceTypeIdentifier": "AWS::CloudFront::RealtimeLogConfig",
        "ServiceTypeIdentifier": "AWS::CloudFront"
    },
    {
        "ServiceHumanReadableName": "Amazon CloudFront",
        "ServiceProvider": "AWS",
        "ServiceName": "CloudFront",
        "DataTypeName": "ResponseHeadersPolicy",
        "ResourceTypeIdentifier": "AWS::CloudFront::ResponseHeadersPolicy",
        "ServiceTypeIdentifier": "AWS::CloudFront"
    },
    {
        "ServiceHumanReadableName": "Amazon CloudFront",
        "ServiceProvider": "AWS",
        "ServiceName": "CloudFront",
        "DataTypeName": "StreamingDistribution",
        "ResourceTypeIdentifier": "AWS::CloudFront::StreamingDistribution",
        "ServiceTypeIdentifier": "AWS::CloudFront"
    },
    {
        "ServiceHumanReadableName": "AWS Cloud Map",
        "ServiceProvider": "AWS",
        "ServiceName": "ServiceDiscovery",
        "DataTypeName": "HttpNamespace",
        "ResourceTypeIdentifier": "AWS::ServiceDiscovery::HttpNamespace",
        "ServiceTypeIdentifier": "AWS::ServiceDiscovery"
    },
    {
        "ServiceHumanReadableName": "AWS Cloud Map",
        "ServiceProvider": "AWS",
        "ServiceName": "ServiceDiscovery",
        "DataTypeName": "Instance",
        "ResourceTypeIdentifier": "AWS::ServiceDiscovery::Instance",
        "ServiceTypeIdentifier": "AWS::ServiceDiscovery"
    },
    {
        "ServiceHumanReadableName": "AWS Cloud Map",
        "ServiceProvider": "AWS",
        "ServiceName": "ServiceDiscovery",
        "DataTypeName": "PrivateDnsNamespace",
        "ResourceTypeIdentifier": "AWS::ServiceDiscovery::PrivateDnsNamespace",
        "ServiceTypeIdentifier": "AWS::ServiceDiscovery"
    },
    {
        "ServiceHumanReadableName": "AWS Cloud Map",
        "ServiceProvider": "AWS",
        "ServiceName": "ServiceDiscovery",
        "DataTypeName": "PublicDnsNamespace",
        "ResourceTypeIdentifier": "AWS::ServiceDiscovery::PublicDnsNamespace",
        "ServiceTypeIdentifier": "AWS::ServiceDiscovery"
    },
    {
        "ServiceHumanReadableName": "AWS Cloud Map",
        "ServiceProvider": "AWS",
        "ServiceName": "ServiceDiscovery",
        "DataTypeName": "Service",
        "ResourceTypeIdentifier": "AWS::ServiceDiscovery::Service",
        "ServiceTypeIdentifier": "AWS::ServiceDiscovery"
    },
    {
        "ServiceHumanReadableName": "AWS CloudTrail",
        "ServiceProvider": "AWS",
        "ServiceName": "CloudTrail",
        "DataTypeName": "Channel",
        "ResourceTypeIdentifier": "AWS::CloudTrail::Channel",
        "ServiceTypeIdentifier": "AWS::CloudTrail"
    },
    {
        "ServiceHumanReadableName": "AWS CloudTrail",
        "ServiceProvider": "AWS",
        "ServiceName": "CloudTrail",
        "DataTypeName": "EventDataStore",
        "ResourceTypeIdentifier": "AWS::CloudTrail::EventDataStore",
        "ServiceTypeIdentifier": "AWS::CloudTrail"
    },
    {
        "ServiceHumanReadableName": "AWS CloudTrail",
        "ServiceProvider": "AWS",
        "ServiceName": "CloudTrail",
        "DataTypeName": "ResourcePolicy",
        "ResourceTypeIdentifier": "AWS::CloudTrail::ResourcePolicy",
        "ServiceTypeIdentifier": "AWS::CloudTrail"
    },
    {
        "ServiceHumanReadableName": "AWS CloudTrail",
        "ServiceProvider": "AWS",
        "ServiceName": "CloudTrail",
        "DataTypeName": "Trail",
        "ResourceTypeIdentifier": "AWS::CloudTrail::Trail",
        "ServiceTypeIdentifier": "AWS::CloudTrail"
    },
    {
        "ServiceHumanReadableName": "Amazon CloudWatch",
        "ServiceProvider": "AWS",
        "ServiceName": "CloudWatch",
        "DataTypeName": "Alarm",
        "ResourceTypeIdentifier": "AWS::CloudWatch::Alarm",
        "ServiceTypeIdentifier": "AWS::CloudWatch"
    },
    {
        "ServiceHumanReadableName": "Amazon CloudWatch",
        "ServiceProvider": "AWS",
        "ServiceName": "CloudWatch",
        "DataTypeName": "AnomalyDetector",
        "ResourceTypeIdentifier": "AWS::CloudWatch::AnomalyDetector",
        "ServiceTypeIdentifier": "AWS::CloudWatch"
    },
    {
        "ServiceHumanReadableName": "Amazon CloudWatch",
        "ServiceProvider": "AWS",
        "ServiceName": "CloudWatch",
        "DataTypeName": "CompositeAlarm",
        "ResourceTypeIdentifier": "AWS::CloudWatch::CompositeAlarm",
        "ServiceTypeIdentifier": "AWS::CloudWatch"
    },
    {
        "ServiceHumanReadableName": "Amazon CloudWatch",
        "ServiceProvider": "AWS",
        "ServiceName": "CloudWatch",
        "DataTypeName": "Dashboard",
        "ResourceTypeIdentifier": "AWS::CloudWatch::Dashboard",
        "ServiceTypeIdentifier": "AWS::CloudWatch"
    },
    {
        "ServiceHumanReadableName": "Amazon CloudWatch",
        "ServiceProvider": "AWS",
        "ServiceName": "CloudWatch",
        "DataTypeName": "InsightRule",
        "ResourceTypeIdentifier": "AWS::CloudWatch::InsightRule",
        "ServiceTypeIdentifier": "AWS::CloudWatch"
    },
    {
        "ServiceHumanReadableName": "Amazon CloudWatch",
        "ServiceProvider": "AWS",
        "ServiceName": "CloudWatch",
        "DataTypeName": "MetricStream",
        "ResourceTypeIdentifier": "AWS::CloudWatch::MetricStream",
        "ServiceTypeIdentifier": "AWS::CloudWatch"
    },
    {
        "ServiceHumanReadableName": "Amazon CloudWatch Application Insights",
        "ServiceProvider": "AWS",
        "ServiceName": "ApplicationInsights",
        "DataTypeName": "Application",
        "ResourceTypeIdentifier": "AWS::ApplicationInsights::Application",
        "ServiceTypeIdentifier": "AWS::ApplicationInsights"
    },
    {
        "ServiceHumanReadableName": "CloudWatch Application Signals",
        "ServiceProvider": "AWS",
        "ServiceName": "ApplicationSignals",
        "DataTypeName": "ServiceLevelObjective",
        "ResourceTypeIdentifier": "AWS::ApplicationSignals::ServiceLevelObjective",
        "ServiceTypeIdentifier": "AWS::ApplicationSignals"
    },
    {
        "ServiceHumanReadableName": "Amazon CloudWatch Evidently",
        "ServiceProvider": "AWS",
        "ServiceName": "Evidently",
        "DataTypeName": "Experiment",
        "ResourceTypeIdentifier": "AWS::Evidently::Experiment",
        "ServiceTypeIdentifier": "AWS::Evidently"
    },
    {
        "ServiceHumanReadableName": "Amazon CloudWatch Evidently",
        "ServiceProvider": "AWS",
        "ServiceName": "Evidently",
        "DataTypeName": "Feature",
        "ResourceTypeIdentifier": "AWS::Evidently::Feature",
        "ServiceTypeIdentifier": "AWS::Evidently"
    },
    {
        "ServiceHumanReadableName": "Amazon CloudWatch Evidently",
        "ServiceProvider": "AWS",
        "ServiceName": "Evidently",
        "DataTypeName": "Launch",
        "ResourceTypeIdentifier": "AWS::Evidently::Launch",
        "ServiceTypeIdentifier": "AWS::Evidently"
    },
    {
        "ServiceHumanReadableName": "Amazon CloudWatch Evidently",
        "ServiceProvider": "AWS",
        "ServiceName": "Evidently",
        "DataTypeName": "Project",
        "ResourceTypeIdentifier": "AWS::Evidently::Project",
        "ServiceTypeIdentifier": "AWS::Evidently"
    },
    {
        "ServiceHumanReadableName": "Amazon CloudWatch Evidently",
        "ServiceProvider": "AWS",
        "ServiceName": "Evidently",
        "DataTypeName": "Segment",
        "ResourceTypeIdentifier": "AWS::Evidently::Segment",
        "ServiceTypeIdentifier": "AWS::Evidently"
    },
    {
        "ServiceHumanReadableName": "Amazon CloudWatch Internet Monitor",
        "ServiceProvider": "AWS",
        "ServiceName": "InternetMonitor",
        "DataTypeName": "Monitor",
        "ResourceTypeIdentifier": "AWS::InternetMonitor::Monitor",
        "ServiceTypeIdentifier": "AWS::InternetMonitor"
    },
    {
        "ServiceHumanReadableName": "Amazon CloudWatch Logs",
        "ServiceProvider": "AWS",
        "ServiceName": "Logs",
        "DataTypeName": "AccountPolicy",
        "ResourceTypeIdentifier": "AWS::Logs::AccountPolicy",
        "ServiceTypeIdentifier": "AWS::Logs"
    },
    {
        "ServiceHumanReadableName": "Amazon CloudWatch Logs",
        "ServiceProvider": "AWS",
        "ServiceName": "Logs",
        "DataTypeName": "Delivery",
        "ResourceTypeIdentifier": "AWS::Logs::Delivery",
        "ServiceTypeIdentifier": "AWS::Logs"
    },
    {
        "ServiceHumanReadableName": "Amazon CloudWatch Logs",
        "ServiceProvider": "AWS",
        "ServiceName": "Logs",
        "DataTypeName": "DeliveryDestination",
        "ResourceTypeIdentifier": "AWS::Logs::DeliveryDestination",
        "ServiceTypeIdentifier": "AWS::Logs"
    },
    {
        "ServiceHumanReadableName": "Amazon CloudWatch Logs",
        "ServiceProvider": "AWS",
        "ServiceName": "Logs",
        "DataTypeName": "DeliverySource",
        "ResourceTypeIdentifier": "AWS::Logs::DeliverySource",
        "ServiceTypeIdentifier": "AWS::Logs"
    },
    {
        "ServiceHumanReadableName": "Amazon CloudWatch Logs",
        "ServiceProvider": "AWS",
        "ServiceName": "Logs",
        "DataTypeName": "Destination",
        "ResourceTypeIdentifier": "AWS::Logs::Destination",
        "ServiceTypeIdentifier": "AWS::Logs"
    },
    {
        "ServiceHumanReadableName": "Amazon CloudWatch Logs",
        "ServiceProvider": "AWS",
        "ServiceName": "Logs",
        "DataTypeName": "LogAnomalyDetector",
        "ResourceTypeIdentifier": "AWS::Logs::LogAnomalyDetector",
        "ServiceTypeIdentifier": "AWS::Logs"
    },
    {
        "ServiceHumanReadableName": "Amazon CloudWatch Logs",
        "ServiceProvider": "AWS",
        "ServiceName": "Logs",
        "DataTypeName": "LogGroup",
        "ResourceTypeIdentifier": "AWS::Logs::LogGroup",
        "ServiceTypeIdentifier": "AWS::Logs"
    },
    {
        "ServiceHumanReadableName": "Amazon CloudWatch Logs",
        "ServiceProvider": "AWS",
        "ServiceName": "Logs",
        "DataTypeName": "LogStream",
        "ResourceTypeIdentifier": "AWS::Logs::LogStream",
        "ServiceTypeIdentifier": "AWS::Logs"
    },
    {
        "ServiceHumanReadableName": "Amazon CloudWatch Logs",
        "ServiceProvider": "AWS",
        "ServiceName": "Logs",
        "DataTypeName": "MetricFilter",
        "ResourceTypeIdentifier": "AWS::Logs::MetricFilter",
        "ServiceTypeIdentifier": "AWS::Logs"
    },
    {
        "ServiceHumanReadableName": "Amazon CloudWatch Logs",
        "ServiceProvider": "AWS",
        "ServiceName": "Logs",
        "DataTypeName": "QueryDefinition",
        "ResourceTypeIdentifier": "AWS::Logs::QueryDefinition",
        "ServiceTypeIdentifier": "AWS::Logs"
    },
    {
        "ServiceHumanReadableName": "Amazon CloudWatch Logs",
        "ServiceProvider": "AWS",
        "ServiceName": "Logs",
        "DataTypeName": "ResourcePolicy",
        "ResourceTypeIdentifier": "AWS::Logs::ResourcePolicy",
        "ServiceTypeIdentifier": "AWS::Logs"
    },
    {
        "ServiceHumanReadableName": "Amazon CloudWatch Logs",
        "ServiceProvider": "AWS",
        "ServiceName": "Logs",
        "DataTypeName": "SubscriptionFilter",
        "ResourceTypeIdentifier": "AWS::Logs::SubscriptionFilter",
        "ServiceTypeIdentifier": "AWS::Logs"
    },
    {
        "ServiceHumanReadableName": "Amazon CloudWatch Synthetics",
        "ServiceProvider": "AWS",
        "ServiceName": "Synthetics",
        "DataTypeName": "Canary",
        "ResourceTypeIdentifier": "AWS::Synthetics::Canary",
        "ServiceTypeIdentifier": "AWS::Synthetics"
    },
    {
        "ServiceHumanReadableName": "Amazon CloudWatch Synthetics",
        "ServiceProvider": "AWS",
        "ServiceName": "Synthetics",
        "DataTypeName": "Group",
        "ResourceTypeIdentifier": "AWS::Synthetics::Group",
        "ServiceTypeIdentifier": "AWS::Synthetics"
    },
    {
        "ServiceHumanReadableName": "AWS CodeArtifact",
        "ServiceProvider": "AWS",
        "ServiceName": "CodeArtifact",
        "DataTypeName": "Domain",
        "ResourceTypeIdentifier": "AWS::CodeArtifact::Domain",
        "ServiceTypeIdentifier": "AWS::CodeArtifact"
    },
    {
        "ServiceHumanReadableName": "AWS CodeArtifact",
        "ServiceProvider": "AWS",
        "ServiceName": "CodeArtifact",
        "DataTypeName": "PackageGroup",
        "ResourceTypeIdentifier": "AWS::CodeArtifact::PackageGroup",
        "ServiceTypeIdentifier": "AWS::CodeArtifact"
    },
    {
        "ServiceHumanReadableName": "AWS CodeArtifact",
        "ServiceProvider": "AWS",
        "ServiceName": "CodeArtifact",
        "DataTypeName": "Repository",
        "ResourceTypeIdentifier": "AWS::CodeArtifact::Repository",
        "ServiceTypeIdentifier": "AWS::CodeArtifact"
    },
    {
        "ServiceHumanReadableName": "AWS CodeBuild",
        "ServiceProvider": "AWS",
        "ServiceName": "CodeBuild",
        "DataTypeName": "Fleet",
        "ResourceTypeIdentifier": "AWS::CodeBuild::Fleet",
        "ServiceTypeIdentifier": "AWS::CodeBuild"
    },
    {
        "ServiceHumanReadableName": "AWS CodeBuild",
        "ServiceProvider": "AWS",
        "ServiceName": "CodeBuild",
        "DataTypeName": "Project",
        "ResourceTypeIdentifier": "AWS::CodeBuild::Project",
        "ServiceTypeIdentifier": "AWS::CodeBuild"
    },
    {
        "ServiceHumanReadableName": "AWS CodeBuild",
        "ServiceProvider": "AWS",
        "ServiceName": "CodeBuild",
        "DataTypeName": "ReportGroup",
        "ResourceTypeIdentifier": "AWS::CodeBuild::ReportGroup",
        "ServiceTypeIdentifier": "AWS::CodeBuild"
    },
    {
        "ServiceHumanReadableName": "AWS CodeBuild",
        "ServiceProvider": "AWS",
        "ServiceName": "CodeBuild",
        "DataTypeName": "SourceCredential",
        "ResourceTypeIdentifier": "AWS::CodeBuild::SourceCredential",
        "ServiceTypeIdentifier": "AWS::CodeBuild"
    },
    {
        "ServiceHumanReadableName": "AWS CodeCommit",
        "ServiceProvider": "AWS",
        "ServiceName": "CodeCommit",
        "DataTypeName": "Repository",
        "ResourceTypeIdentifier": "AWS::CodeCommit::Repository",
        "ServiceTypeIdentifier": "AWS::CodeCommit"
    },
    {
        "ServiceHumanReadableName": "AWS CodeConnections",
        "ServiceProvider": "AWS",
        "ServiceName": "CodeConnections",
        "DataTypeName": "Connection",
        "ResourceTypeIdentifier": "AWS::CodeConnections::Connection",
        "ServiceTypeIdentifier": "AWS::CodeConnections"
    },
    {
        "ServiceHumanReadableName": "AWS CodeDeploy",
        "ServiceProvider": "AWS",
        "ServiceName": "CodeDeploy",
        "DataTypeName": "Application",
        "ResourceTypeIdentifier": "AWS::CodeDeploy::Application",
        "ServiceTypeIdentifier": "AWS::CodeDeploy"
    },
    {
        "ServiceHumanReadableName": "AWS CodeDeploy",
        "ServiceProvider": "AWS",
        "ServiceName": "CodeDeploy",
        "DataTypeName": "DeploymentConfig",
        "ResourceTypeIdentifier": "AWS::CodeDeploy::DeploymentConfig",
        "ServiceTypeIdentifier": "AWS::CodeDeploy"
    },
    {
        "ServiceHumanReadableName": "AWS CodeDeploy",
        "ServiceProvider": "AWS",
        "ServiceName": "CodeDeploy",
        "DataTypeName": "DeploymentGroup",
        "ResourceTypeIdentifier": "AWS::CodeDeploy::DeploymentGroup",
        "ServiceTypeIdentifier": "AWS::CodeDeploy"
    },
    {
        "ServiceHumanReadableName": "Amazon CodeGuru Profiler",
        "ServiceProvider": "AWS",
        "ServiceName": "CodeGuruProfiler",
        "DataTypeName": "ProfilingGroup",
        "ResourceTypeIdentifier": "AWS::CodeGuruProfiler::ProfilingGroup",
        "ServiceTypeIdentifier": "AWS::CodeGuruProfiler"
    },
    {
        "ServiceHumanReadableName": "Amazon CodeGuru Reviewer",
        "ServiceProvider": "AWS",
        "ServiceName": "CodeGuruReviewer",
        "DataTypeName": "RepositoryAssociation",
        "ResourceTypeIdentifier": "AWS::CodeGuruReviewer::RepositoryAssociation",
        "ServiceTypeIdentifier": "AWS::CodeGuruReviewer"
    },
    {
        "ServiceHumanReadableName": "AWS CodePipeline",
        "ServiceProvider": "AWS",
        "ServiceName": "CodePipeline",
        "DataTypeName": "CustomActionType",
        "ResourceTypeIdentifier": "AWS::CodePipeline::CustomActionType",
        "ServiceTypeIdentifier": "AWS::CodePipeline"
    },
    {
        "ServiceHumanReadableName": "AWS CodePipeline",
        "ServiceProvider": "AWS",
        "ServiceName": "CodePipeline",
        "DataTypeName": "Pipeline",
        "ResourceTypeIdentifier": "AWS::CodePipeline::Pipeline",
        "ServiceTypeIdentifier": "AWS::CodePipeline"
    },
    {
        "ServiceHumanReadableName": "AWS CodePipeline",
        "ServiceProvider": "AWS",
        "ServiceName": "CodePipeline",
        "DataTypeName": "Webhook",
        "ResourceTypeIdentifier": "AWS::CodePipeline::Webhook",
        "ServiceTypeIdentifier": "AWS::CodePipeline"
    },
    {
        "ServiceHumanReadableName": "AWS CodeStar",
        "ServiceProvider": "AWS",
        "ServiceName": "CodeStar",
        "DataTypeName": "GitHubRepository",
        "ResourceTypeIdentifier": "AWS::CodeStar::GitHubRepository",
        "ServiceTypeIdentifier": "AWS::CodeStar"
    },
    {
        "ServiceHumanReadableName": "AWS CodeStar Connections",
        "ServiceProvider": "AWS",
        "ServiceName": "CodeStarConnections",
        "DataTypeName": "Connection",
        "ResourceTypeIdentifier": "AWS::CodeStarConnections::Connection",
        "ServiceTypeIdentifier": "AWS::CodeStarConnections"
    },
    {
        "ServiceHumanReadableName": "AWS CodeStar Connections",
        "ServiceProvider": "AWS",
        "ServiceName": "CodeStarConnections",
        "DataTypeName": "RepositoryLink",
        "ResourceTypeIdentifier": "AWS::CodeStarConnections::RepositoryLink",
        "ServiceTypeIdentifier": "AWS::CodeStarConnections"
    },
    {
        "ServiceHumanReadableName": "AWS CodeStar Connections",
        "ServiceProvider": "AWS",
        "ServiceName": "CodeStarConnections",
        "DataTypeName": "SyncConfiguration",
        "ResourceTypeIdentifier": "AWS::CodeStarConnections::SyncConfiguration",
        "ServiceTypeIdentifier": "AWS::CodeStarConnections"
    },
    {
        "ServiceHumanReadableName": "AWS CodeStar Notifications",
        "ServiceProvider": "AWS",
        "ServiceName": "CodeStarNotifications",
        "DataTypeName": "NotificationRule",
        "ResourceTypeIdentifier": "AWS::CodeStarNotifications::NotificationRule",
        "ServiceTypeIdentifier": "AWS::CodeStarNotifications"
    },
    {
        "ServiceHumanReadableName": "Amazon Cognito",
        "ServiceProvider": "AWS",
        "ServiceName": "Cognito",
        "DataTypeName": "IdentityPool",
        "ResourceTypeIdentifier": "AWS::Cognito::IdentityPool",
        "ServiceTypeIdentifier": "AWS::Cognito"
    },
    {
        "ServiceHumanReadableName": "Amazon Cognito",
        "ServiceProvider": "AWS",
        "ServiceName": "Cognito",
        "DataTypeName": "IdentityPoolPrincipalTag",
        "ResourceTypeIdentifier": "AWS::Cognito::IdentityPoolPrincipalTag",
        "ServiceTypeIdentifier": "AWS::Cognito"
    },
    {
        "ServiceHumanReadableName": "Amazon Cognito",
        "ServiceProvider": "AWS",
        "ServiceName": "Cognito",
        "DataTypeName": "IdentityPoolRoleAttachment",
        "ResourceTypeIdentifier": "AWS::Cognito::IdentityPoolRoleAttachment",
        "ServiceTypeIdentifier": "AWS::Cognito"
    },
    {
        "ServiceHumanReadableName": "Amazon Cognito",
        "ServiceProvider": "AWS",
        "ServiceName": "Cognito",
        "DataTypeName": "LogDeliveryConfiguration",
        "ResourceTypeIdentifier": "AWS::Cognito::LogDeliveryConfiguration",
        "ServiceTypeIdentifier": "AWS::Cognito"
    },
    {
        "ServiceHumanReadableName": "Amazon Cognito",
        "ServiceProvider": "AWS",
        "ServiceName": "Cognito",
        "DataTypeName": "UserPool",
        "ResourceTypeIdentifier": "AWS::Cognito::UserPool",
        "ServiceTypeIdentifier": "AWS::Cognito"
    },
    {
        "ServiceHumanReadableName": "Amazon Cognito",
        "ServiceProvider": "AWS",
        "ServiceName": "Cognito",
        "DataTypeName": "UserPoolClient",
        "ResourceTypeIdentifier": "AWS::Cognito::UserPoolClient",
        "ServiceTypeIdentifier": "AWS::Cognito"
    },
    {
        "ServiceHumanReadableName": "Amazon Cognito",
        "ServiceProvider": "AWS",
        "ServiceName": "Cognito",
        "DataTypeName": "UserPoolDomain",
        "ResourceTypeIdentifier": "AWS::Cognito::UserPoolDomain",
        "ServiceTypeIdentifier": "AWS::Cognito"
    },
    {
        "ServiceHumanReadableName": "Amazon Cognito",
        "ServiceProvider": "AWS",
        "ServiceName": "Cognito",
        "DataTypeName": "UserPoolGroup",
        "ResourceTypeIdentifier": "AWS::Cognito::UserPoolGroup",
        "ServiceTypeIdentifier": "AWS::Cognito"
    },
    {
        "ServiceHumanReadableName": "Amazon Cognito",
        "ServiceProvider": "AWS",
        "ServiceName": "Cognito",
        "DataTypeName": "UserPoolIdentityProvider",
        "ResourceTypeIdentifier": "AWS::Cognito::UserPoolIdentityProvider",
        "ServiceTypeIdentifier": "AWS::Cognito"
    },
    {
        "ServiceHumanReadableName": "Amazon Cognito",
        "ServiceProvider": "AWS",
        "ServiceName": "Cognito",
        "DataTypeName": "UserPoolResourceServer",
        "ResourceTypeIdentifier": "AWS::Cognito::UserPoolResourceServer",
        "ServiceTypeIdentifier": "AWS::Cognito"
    },
    {
        "ServiceHumanReadableName": "Amazon Cognito",
        "ServiceProvider": "AWS",
        "ServiceName": "Cognito",
        "DataTypeName": "UserPoolRiskConfigurationAttachment",
        "ResourceTypeIdentifier": "AWS::Cognito::UserPoolRiskConfigurationAttachment",
        "ServiceTypeIdentifier": "AWS::Cognito"
    },
    {
        "ServiceHumanReadableName": "Amazon Cognito",
        "ServiceProvider": "AWS",
        "ServiceName": "Cognito",
        "DataTypeName": "UserPoolUICustomizationAttachment",
        "ResourceTypeIdentifier": "AWS::Cognito::UserPoolUICustomizationAttachment",
        "ServiceTypeIdentifier": "AWS::Cognito"
    },
    {
        "ServiceHumanReadableName": "Amazon Cognito",
        "ServiceProvider": "AWS",
        "ServiceName": "Cognito",
        "DataTypeName": "UserPoolUser",
        "ResourceTypeIdentifier": "AWS::Cognito::UserPoolUser",
        "ServiceTypeIdentifier": "AWS::Cognito"
    },
    {
        "ServiceHumanReadableName": "Amazon Cognito",
        "ServiceProvider": "AWS",
        "ServiceName": "Cognito",
        "DataTypeName": "UserPoolUserToGroupAttachment",
        "ResourceTypeIdentifier": "AWS::Cognito::UserPoolUserToGroupAttachment",
        "ServiceTypeIdentifier": "AWS::Cognito"
    },
    {
        "ServiceHumanReadableName": "Amazon Comprehend",
        "ServiceProvider": "AWS",
        "ServiceName": "Comprehend",
        "DataTypeName": "DocumentClassifier",
        "ResourceTypeIdentifier": "AWS::Comprehend::DocumentClassifier",
        "ServiceTypeIdentifier": "AWS::Comprehend"
    },
    {
        "ServiceHumanReadableName": "Amazon Comprehend",
        "ServiceProvider": "AWS",
        "ServiceName": "Comprehend",
        "DataTypeName": "Flywheel",
        "ResourceTypeIdentifier": "AWS::Comprehend::Flywheel",
        "ServiceTypeIdentifier": "AWS::Comprehend"
    },
    {
        "ServiceHumanReadableName": "AWS Config",
        "ServiceProvider": "AWS",
        "ServiceName": "Config",
        "DataTypeName": "AggregationAuthorization",
        "ResourceTypeIdentifier": "AWS::Config::AggregationAuthorization",
        "ServiceTypeIdentifier": "AWS::Config"
    },
    {
        "ServiceHumanReadableName": "AWS Config",
        "ServiceProvider": "AWS",
        "ServiceName": "Config",
        "DataTypeName": "ConfigRule",
        "ResourceTypeIdentifier": "AWS::Config::ConfigRule",
        "ServiceTypeIdentifier": "AWS::Config"
    },
    {
        "ServiceHumanReadableName": "AWS Config",
        "ServiceProvider": "AWS",
        "ServiceName": "Config",
        "DataTypeName": "ConfigurationAggregator",
        "ResourceTypeIdentifier": "AWS::Config::ConfigurationAggregator",
        "ServiceTypeIdentifier": "AWS::Config"
    },
    {
        "ServiceHumanReadableName": "AWS Config",
        "ServiceProvider": "AWS",
        "ServiceName": "Config",
        "DataTypeName": "ConfigurationRecorder",
        "ResourceTypeIdentifier": "AWS::Config::ConfigurationRecorder",
        "ServiceTypeIdentifier": "AWS::Config"
    },
    {
        "ServiceHumanReadableName": "AWS Config",
        "ServiceProvider": "AWS",
        "ServiceName": "Config",
        "DataTypeName": "ConformancePack",
        "ResourceTypeIdentifier": "AWS::Config::ConformancePack",
        "ServiceTypeIdentifier": "AWS::Config"
    },
    {
        "ServiceHumanReadableName": "AWS Config",
        "ServiceProvider": "AWS",
        "ServiceName": "Config",
        "DataTypeName": "DeliveryChannel",
        "ResourceTypeIdentifier": "AWS::Config::DeliveryChannel",
        "ServiceTypeIdentifier": "AWS::Config"
    },
    {
        "ServiceHumanReadableName": "AWS Config",
        "ServiceProvider": "AWS",
        "ServiceName": "Config",
        "DataTypeName": "OrganizationConfigRule",
        "ResourceTypeIdentifier": "AWS::Config::OrganizationConfigRule",
        "ServiceTypeIdentifier": "AWS::Config"
    },
    {
        "ServiceHumanReadableName": "AWS Config",
        "ServiceProvider": "AWS",
        "ServiceName": "Config",
        "DataTypeName": "OrganizationConformancePack",
        "ResourceTypeIdentifier": "AWS::Config::OrganizationConformancePack",
        "ServiceTypeIdentifier": "AWS::Config"
    },
    {
        "ServiceHumanReadableName": "AWS Config",
        "ServiceProvider": "AWS",
        "ServiceName": "Config",
        "DataTypeName": "RemediationConfiguration",
        "ResourceTypeIdentifier": "AWS::Config::RemediationConfiguration",
        "ServiceTypeIdentifier": "AWS::Config"
    },
    {
        "ServiceHumanReadableName": "AWS Config",
        "ServiceProvider": "AWS",
        "ServiceName": "Config",
        "DataTypeName": "StoredQuery",
        "ResourceTypeIdentifier": "AWS::Config::StoredQuery",
        "ServiceTypeIdentifier": "AWS::Config"
    },
    {
        "ServiceHumanReadableName": "Amazon Connect",
        "ServiceProvider": "AWS",
        "ServiceName": "Connect",
        "DataTypeName": "AgentStatus",
        "ResourceTypeIdentifier": "AWS::Connect::AgentStatus",
        "ServiceTypeIdentifier": "AWS::Connect"
    },
    {
        "ServiceHumanReadableName": "Amazon Connect",
        "ServiceProvider": "AWS",
        "ServiceName": "Connect",
        "DataTypeName": "ApprovedOrigin",
        "ResourceTypeIdentifier": "AWS::Connect::ApprovedOrigin",
        "ServiceTypeIdentifier": "AWS::Connect"
    },
    {
        "ServiceHumanReadableName": "Amazon Connect",
        "ServiceProvider": "AWS",
        "ServiceName": "Connect",
        "DataTypeName": "ContactFlow",
        "ResourceTypeIdentifier": "AWS::Connect::ContactFlow",
        "ServiceTypeIdentifier": "AWS::Connect"
    },
    {
        "ServiceHumanReadableName": "Amazon Connect",
        "ServiceProvider": "AWS",
        "ServiceName": "Connect",
        "DataTypeName": "ContactFlowModule",
        "ResourceTypeIdentifier": "AWS::Connect::ContactFlowModule",
        "ServiceTypeIdentifier": "AWS::Connect"
    },
    {
        "ServiceHumanReadableName": "Amazon Connect",
        "ServiceProvider": "AWS",
        "ServiceName": "Connect",
        "DataTypeName": "EvaluationForm",
        "ResourceTypeIdentifier": "AWS::Connect::EvaluationForm",
        "ServiceTypeIdentifier": "AWS::Connect"
    },
    {
        "ServiceHumanReadableName": "Amazon Connect",
        "ServiceProvider": "AWS",
        "ServiceName": "Connect",
        "DataTypeName": "HoursOfOperation",
        "ResourceTypeIdentifier": "AWS::Connect::HoursOfOperation",
        "ServiceTypeIdentifier": "AWS::Connect"
    },
    {
        "ServiceHumanReadableName": "Amazon Connect",
        "ServiceProvider": "AWS",
        "ServiceName": "Connect",
        "DataTypeName": "Instance",
        "ResourceTypeIdentifier": "AWS::Connect::Instance",
        "ServiceTypeIdentifier": "AWS::Connect"
    },
    {
        "ServiceHumanReadableName": "Amazon Connect",
        "ServiceProvider": "AWS",
        "ServiceName": "Connect",
        "DataTypeName": "InstanceStorageConfig",
        "ResourceTypeIdentifier": "AWS::Connect::InstanceStorageConfig",
        "ServiceTypeIdentifier": "AWS::Connect"
    },
    {
        "ServiceHumanReadableName": "Amazon Connect",
        "ServiceProvider": "AWS",
        "ServiceName": "Connect",
        "DataTypeName": "IntegrationAssociation",
        "ResourceTypeIdentifier": "AWS::Connect::IntegrationAssociation",
        "ServiceTypeIdentifier": "AWS::Connect"
    },
    {
        "ServiceHumanReadableName": "Amazon Connect",
        "ServiceProvider": "AWS",
        "ServiceName": "Connect",
        "DataTypeName": "PhoneNumber",
        "ResourceTypeIdentifier": "AWS::Connect::PhoneNumber",
        "ServiceTypeIdentifier": "AWS::Connect"
    },
    {
        "ServiceHumanReadableName": "Amazon Connect",
        "ServiceProvider": "AWS",
        "ServiceName": "Connect",
        "DataTypeName": "PredefinedAttribute",
        "ResourceTypeIdentifier": "AWS::Connect::PredefinedAttribute",
        "ServiceTypeIdentifier": "AWS::Connect"
    },
    {
        "ServiceHumanReadableName": "Amazon Connect",
        "ServiceProvider": "AWS",
        "ServiceName": "Connect",
        "DataTypeName": "Prompt",
        "ResourceTypeIdentifier": "AWS::Connect::Prompt",
        "ServiceTypeIdentifier": "AWS::Connect"
    },
    {
        "ServiceHumanReadableName": "Amazon Connect",
        "ServiceProvider": "AWS",
        "ServiceName": "Connect",
        "DataTypeName": "Queue",
        "ResourceTypeIdentifier": "AWS::Connect::Queue",
        "ServiceTypeIdentifier": "AWS::Connect"
    },
    {
        "ServiceHumanReadableName": "Amazon Connect",
        "ServiceProvider": "AWS",
        "ServiceName": "Connect",
        "DataTypeName": "QuickConnect",
        "ResourceTypeIdentifier": "AWS::Connect::QuickConnect",
        "ServiceTypeIdentifier": "AWS::Connect"
    },
    {
        "ServiceHumanReadableName": "Amazon Connect",
        "ServiceProvider": "AWS",
        "ServiceName": "Connect",
        "DataTypeName": "RoutingProfile",
        "ResourceTypeIdentifier": "AWS::Connect::RoutingProfile",
        "ServiceTypeIdentifier": "AWS::Connect"
    },
    {
        "ServiceHumanReadableName": "Amazon Connect",
        "ServiceProvider": "AWS",
        "ServiceName": "Connect",
        "DataTypeName": "Rule",
        "ResourceTypeIdentifier": "AWS::Connect::Rule",
        "ServiceTypeIdentifier": "AWS::Connect"
    },
    {
        "ServiceHumanReadableName": "Amazon Connect",
        "ServiceProvider": "AWS",
        "ServiceName": "Connect",
        "DataTypeName": "SecurityKey",
        "ResourceTypeIdentifier": "AWS::Connect::SecurityKey",
        "ServiceTypeIdentifier": "AWS::Connect"
    },
    {
        "ServiceHumanReadableName": "Amazon Connect",
        "ServiceProvider": "AWS",
        "ServiceName": "Connect",
        "DataTypeName": "SecurityProfile",
        "ResourceTypeIdentifier": "AWS::Connect::SecurityProfile",
        "ServiceTypeIdentifier": "AWS::Connect"
    },
    {
        "ServiceHumanReadableName": "Amazon Connect",
        "ServiceProvider": "AWS",
        "ServiceName": "Connect",
        "DataTypeName": "TaskTemplate",
        "ResourceTypeIdentifier": "AWS::Connect::TaskTemplate",
        "ServiceTypeIdentifier": "AWS::Connect"
    },
    {
        "ServiceHumanReadableName": "Amazon Connect",
        "ServiceProvider": "AWS",
        "ServiceName": "Connect",
        "DataTypeName": "TrafficDistributionGroup",
        "ResourceTypeIdentifier": "AWS::Connect::TrafficDistributionGroup",
        "ServiceTypeIdentifier": "AWS::Connect"
    },
    {
        "ServiceHumanReadableName": "Amazon Connect",
        "ServiceProvider": "AWS",
        "ServiceName": "Connect",
        "DataTypeName": "User",
        "ResourceTypeIdentifier": "AWS::Connect::User",
        "ServiceTypeIdentifier": "AWS::Connect"
    },
    {
        "ServiceHumanReadableName": "Amazon Connect",
        "ServiceProvider": "AWS",
        "ServiceName": "Connect",
        "DataTypeName": "UserHierarchyGroup",
        "ResourceTypeIdentifier": "AWS::Connect::UserHierarchyGroup",
        "ServiceTypeIdentifier": "AWS::Connect"
    },
    {
        "ServiceHumanReadableName": "Amazon Connect",
        "ServiceProvider": "AWS",
        "ServiceName": "Connect",
        "DataTypeName": "UserHierarchyStructure",
        "ResourceTypeIdentifier": "AWS::Connect::UserHierarchyStructure",
        "ServiceTypeIdentifier": "AWS::Connect"
    },
    {
        "ServiceHumanReadableName": "Amazon Connect",
        "ServiceProvider": "AWS",
        "ServiceName": "Connect",
        "DataTypeName": "View",
        "ResourceTypeIdentifier": "AWS::Connect::View",
        "ServiceTypeIdentifier": "AWS::Connect"
    },
    {
        "ServiceHumanReadableName": "Amazon Connect",
        "ServiceProvider": "AWS",
        "ServiceName": "Connect",
        "DataTypeName": "ViewVersion",
        "ResourceTypeIdentifier": "AWS::Connect::ViewVersion",
        "ServiceTypeIdentifier": "AWS::Connect"
    },
    {
        "ServiceHumanReadableName": "Amazon Connect Outbound Campaigns",
        "ServiceProvider": "AWS",
        "ServiceName": "ConnectCampaigns",
        "DataTypeName": "Campaign",
        "ResourceTypeIdentifier": "AWS::ConnectCampaigns::Campaign",
        "ServiceTypeIdentifier": "AWS::ConnectCampaigns"
    },
    {
        "ServiceHumanReadableName": "AWS Control Tower",
        "ServiceProvider": "AWS",
        "ServiceName": "ControlTower",
        "DataTypeName": "EnabledBaseline",
        "ResourceTypeIdentifier": "AWS::ControlTower::EnabledBaseline",
        "ServiceTypeIdentifier": "AWS::ControlTower"
    },
    {
        "ServiceHumanReadableName": "AWS Control Tower",
        "ServiceProvider": "AWS",
        "ServiceName": "ControlTower",
        "DataTypeName": "EnabledControl",
        "ResourceTypeIdentifier": "AWS::ControlTower::EnabledControl",
        "ServiceTypeIdentifier": "AWS::ControlTower"
    },
    {
        "ServiceHumanReadableName": "AWS Control Tower",
        "ServiceProvider": "AWS",
        "ServiceName": "ControlTower",
        "DataTypeName": "LandingZone",
        "ResourceTypeIdentifier": "AWS::ControlTower::LandingZone",
        "ServiceTypeIdentifier": "AWS::ControlTower"
    },
    {
        "ServiceHumanReadableName": "Amazon Connect Customer Profiles",
        "ServiceProvider": "AWS",
        "ServiceName": "CustomerProfiles",
        "DataTypeName": "CalculatedAttributeDefinition",
        "ResourceTypeIdentifier": "AWS::CustomerProfiles::CalculatedAttributeDefinition",
        "ServiceTypeIdentifier": "AWS::CustomerProfiles"
    },
    {
        "ServiceHumanReadableName": "Amazon Connect Customer Profiles",
        "ServiceProvider": "AWS",
        "ServiceName": "CustomerProfiles",
        "DataTypeName": "Domain",
        "ResourceTypeIdentifier": "AWS::CustomerProfiles::Domain",
        "ServiceTypeIdentifier": "AWS::CustomerProfiles"
    },
    {
        "ServiceHumanReadableName": "Amazon Connect Customer Profiles",
        "ServiceProvider": "AWS",
        "ServiceName": "CustomerProfiles",
        "DataTypeName": "EventStream",
        "ResourceTypeIdentifier": "AWS::CustomerProfiles::EventStream",
        "ServiceTypeIdentifier": "AWS::CustomerProfiles"
    },
    {
        "ServiceHumanReadableName": "Amazon Connect Customer Profiles",
        "ServiceProvider": "AWS",
        "ServiceName": "CustomerProfiles",
        "DataTypeName": "Integration",
        "ResourceTypeIdentifier": "AWS::CustomerProfiles::Integration",
        "ServiceTypeIdentifier": "AWS::CustomerProfiles"
    },
    {
        "ServiceHumanReadableName": "Amazon Connect Customer Profiles",
        "ServiceProvider": "AWS",
        "ServiceName": "CustomerProfiles",
        "DataTypeName": "ObjectType",
        "ResourceTypeIdentifier": "AWS::CustomerProfiles::ObjectType",
        "ServiceTypeIdentifier": "AWS::CustomerProfiles"
    },
    {
        "ServiceHumanReadableName": "AWS Cost Explorer",
        "ServiceProvider": "AWS",
        "ServiceName": "CE",
        "DataTypeName": "AnomalyMonitor",
        "ResourceTypeIdentifier": "AWS::CE::AnomalyMonitor",
        "ServiceTypeIdentifier": "AWS::CE"
    },
    {
        "ServiceHumanReadableName": "AWS Cost Explorer",
        "ServiceProvider": "AWS",
        "ServiceName": "CE",
        "DataTypeName": "AnomalySubscription",
        "ResourceTypeIdentifier": "AWS::CE::AnomalySubscription",
        "ServiceTypeIdentifier": "AWS::CE"
    },
    {
        "ServiceHumanReadableName": "AWS Cost Explorer",
        "ServiceProvider": "AWS",
        "ServiceName": "CE",
        "DataTypeName": "CostCategory",
        "ResourceTypeIdentifier": "AWS::CE::CostCategory",
        "ServiceTypeIdentifier": "AWS::CE"
    },
    {
        "ServiceHumanReadableName": "AWS Cost and Usage Report",
        "ServiceProvider": "AWS",
        "ServiceName": "CUR",
        "DataTypeName": "ReportDefinition",
        "ResourceTypeIdentifier": "AWS::CUR::ReportDefinition",
        "ServiceTypeIdentifier": "AWS::CUR"
    },
    {
        "ServiceHumanReadableName": "AWS Data Exports",
        "ServiceProvider": "AWS",
        "ServiceName": "BCMDataExports",
        "DataTypeName": "Export",
        "ResourceTypeIdentifier": "AWS::BCMDataExports::Export",
        "ServiceTypeIdentifier": "AWS::BCMDataExports"
    },
    {
        "ServiceHumanReadableName": "Amazon Data Lifecycle Manager",
        "ServiceProvider": "AWS",
        "ServiceName": "DLM",
        "DataTypeName": "LifecyclePolicy",
        "ResourceTypeIdentifier": "AWS::DLM::LifecyclePolicy",
        "ServiceTypeIdentifier": "AWS::DLM"
    },
    {
        "ServiceHumanReadableName": "AWS Data Pipeline",
        "ServiceProvider": "AWS",
        "ServiceName": "DataPipeline",
        "DataTypeName": "Pipeline",
        "ResourceTypeIdentifier": "AWS::DataPipeline::Pipeline",
        "ServiceTypeIdentifier": "AWS::DataPipeline"
    },
    {
        "ServiceHumanReadableName": "AWS DataSync",
        "ServiceProvider": "AWS",
        "ServiceName": "DataSync",
        "DataTypeName": "Agent",
        "ResourceTypeIdentifier": "AWS::DataSync::Agent",
        "ServiceTypeIdentifier": "AWS::DataSync"
    },
    {
        "ServiceHumanReadableName": "AWS DataSync",
        "ServiceProvider": "AWS",
        "ServiceName": "DataSync",
        "DataTypeName": "LocationAzureBlob",
        "ResourceTypeIdentifier": "AWS::DataSync::LocationAzureBlob",
        "ServiceTypeIdentifier": "AWS::DataSync"
    },
    {
        "ServiceHumanReadableName": "AWS DataSync",
        "ServiceProvider": "AWS",
        "ServiceName": "DataSync",
        "DataTypeName": "LocationEFS",
        "ResourceTypeIdentifier": "AWS::DataSync::LocationEFS",
        "ServiceTypeIdentifier": "AWS::DataSync"
    },
    {
        "ServiceHumanReadableName": "AWS DataSync",
        "ServiceProvider": "AWS",
        "ServiceName": "DataSync",
        "DataTypeName": "LocationFSxLustre",
        "ResourceTypeIdentifier": "AWS::DataSync::LocationFSxLustre",
        "ServiceTypeIdentifier": "AWS::DataSync"
    },
    {
        "ServiceHumanReadableName": "AWS DataSync",
        "ServiceProvider": "AWS",
        "ServiceName": "DataSync",
        "DataTypeName": "LocationFSxONTAP",
        "ResourceTypeIdentifier": "AWS::DataSync::LocationFSxONTAP",
        "ServiceTypeIdentifier": "AWS::DataSync"
    },
    {
        "ServiceHumanReadableName": "AWS DataSync",
        "ServiceProvider": "AWS",
        "ServiceName": "DataSync",
        "DataTypeName": "LocationFSxOpenZFS",
        "ResourceTypeIdentifier": "AWS::DataSync::LocationFSxOpenZFS",
        "ServiceTypeIdentifier": "AWS::DataSync"
    },
    {
        "ServiceHumanReadableName": "AWS DataSync",
        "ServiceProvider": "AWS",
        "ServiceName": "DataSync",
        "DataTypeName": "LocationFSxWindows",
        "ResourceTypeIdentifier": "AWS::DataSync::LocationFSxWindows",
        "ServiceTypeIdentifier": "AWS::DataSync"
    },
    {
        "ServiceHumanReadableName": "AWS DataSync",
        "ServiceProvider": "AWS",
        "ServiceName": "DataSync",
        "DataTypeName": "LocationHDFS",
        "ResourceTypeIdentifier": "AWS::DataSync::LocationHDFS",
        "ServiceTypeIdentifier": "AWS::DataSync"
    },
    {
        "ServiceHumanReadableName": "AWS DataSync",
        "ServiceProvider": "AWS",
        "ServiceName": "DataSync",
        "DataTypeName": "LocationNFS",
        "ResourceTypeIdentifier": "AWS::DataSync::LocationNFS",
        "ServiceTypeIdentifier": "AWS::DataSync"
    },
    {
        "ServiceHumanReadableName": "AWS DataSync",
        "ServiceProvider": "AWS",
        "ServiceName": "DataSync",
        "DataTypeName": "LocationObjectStorage",
        "ResourceTypeIdentifier": "AWS::DataSync::LocationObjectStorage",
        "ServiceTypeIdentifier": "AWS::DataSync"
    },
    {
        "ServiceHumanReadableName": "AWS DataSync",
        "ServiceProvider": "AWS",
        "ServiceName": "DataSync",
        "DataTypeName": "LocationS3",
        "ResourceTypeIdentifier": "AWS::DataSync::LocationS3",
        "ServiceTypeIdentifier": "AWS::DataSync"
    },
    {
        "ServiceHumanReadableName": "AWS DataSync",
        "ServiceProvider": "AWS",
        "ServiceName": "DataSync",
        "DataTypeName": "LocationSMB",
        "ResourceTypeIdentifier": "AWS::DataSync::LocationSMB",
        "ServiceTypeIdentifier": "AWS::DataSync"
    },
    {
        "ServiceHumanReadableName": "AWS DataSync",
        "ServiceProvider": "AWS",
        "ServiceName": "DataSync",
        "DataTypeName": "StorageSystem",
        "ResourceTypeIdentifier": "AWS::DataSync::StorageSystem",
        "ServiceTypeIdentifier": "AWS::DataSync"
    },
    {
        "ServiceHumanReadableName": "AWS DataSync",
        "ServiceProvider": "AWS",
        "ServiceName": "DataSync",
        "DataTypeName": "Task",
        "ResourceTypeIdentifier": "AWS::DataSync::Task",
        "ServiceTypeIdentifier": "AWS::DataSync"
    },
    {
        "ServiceHumanReadableName": "Amazon DataZone",
        "ServiceProvider": "AWS",
        "ServiceName": "DataZone",
        "DataTypeName": "DataSource",
        "ResourceTypeIdentifier": "AWS::DataZone::DataSource",
        "ServiceTypeIdentifier": "AWS::DataZone"
    },
    {
        "ServiceHumanReadableName": "Amazon DataZone",
        "ServiceProvider": "AWS",
        "ServiceName": "DataZone",
        "DataTypeName": "Domain",
        "ResourceTypeIdentifier": "AWS::DataZone::Domain",
        "ServiceTypeIdentifier": "AWS::DataZone"
    },
    {
        "ServiceHumanReadableName": "Amazon DataZone",
        "ServiceProvider": "AWS",
        "ServiceName": "DataZone",
        "DataTypeName": "Environment",
        "ResourceTypeIdentifier": "AWS::DataZone::Environment",
        "ServiceTypeIdentifier": "AWS::DataZone"
    },
    {
        "ServiceHumanReadableName": "Amazon DataZone",
        "ServiceProvider": "AWS",
        "ServiceName": "DataZone",
        "DataTypeName": "EnvironmentActions",
        "ResourceTypeIdentifier": "AWS::DataZone::EnvironmentActions",
        "ServiceTypeIdentifier": "AWS::DataZone"
    },
    {
        "ServiceHumanReadableName": "Amazon DataZone",
        "ServiceProvider": "AWS",
        "ServiceName": "DataZone",
        "DataTypeName": "EnvironmentBlueprintConfiguration",
        "ResourceTypeIdentifier": "AWS::DataZone::EnvironmentBlueprintConfiguration",
        "ServiceTypeIdentifier": "AWS::DataZone"
    },
    {
        "ServiceHumanReadableName": "Amazon DataZone",
        "ServiceProvider": "AWS",
        "ServiceName": "DataZone",
        "DataTypeName": "EnvironmentProfile",
        "ResourceTypeIdentifier": "AWS::DataZone::EnvironmentProfile",
        "ServiceTypeIdentifier": "AWS::DataZone"
    },
    {
        "ServiceHumanReadableName": "Amazon DataZone",
        "ServiceProvider": "AWS",
        "ServiceName": "DataZone",
        "DataTypeName": "GroupProfile",
        "ResourceTypeIdentifier": "AWS::DataZone::GroupProfile",
        "ServiceTypeIdentifier": "AWS::DataZone"
    },
    {
        "ServiceHumanReadableName": "Amazon DataZone",
        "ServiceProvider": "AWS",
        "ServiceName": "DataZone",
        "DataTypeName": "Project",
        "ResourceTypeIdentifier": "AWS::DataZone::Project",
        "ServiceTypeIdentifier": "AWS::DataZone"
    },
    {
        "ServiceHumanReadableName": "Amazon DataZone",
        "ServiceProvider": "AWS",
        "ServiceName": "DataZone",
        "DataTypeName": "ProjectMembership",
        "ResourceTypeIdentifier": "AWS::DataZone::ProjectMembership",
        "ServiceTypeIdentifier": "AWS::DataZone"
    },
    {
        "ServiceHumanReadableName": "Amazon DataZone",
        "ServiceProvider": "AWS",
        "ServiceName": "DataZone",
        "DataTypeName": "SubscriptionTarget",
        "ResourceTypeIdentifier": "AWS::DataZone::SubscriptionTarget",
        "ServiceTypeIdentifier": "AWS::DataZone"
    },
    {
        "ServiceHumanReadableName": "Amazon DataZone",
        "ServiceProvider": "AWS",
        "ServiceName": "DataZone",
        "DataTypeName": "UserProfile",
        "ResourceTypeIdentifier": "AWS::DataZone::UserProfile",
        "ServiceTypeIdentifier": "AWS::DataZone"
    },
    {
        "ServiceHumanReadableName": "AWS Deadline Cloud",
        "ServiceProvider": "AWS",
        "ServiceName": "Deadline",
        "DataTypeName": "Farm",
        "ResourceTypeIdentifier": "AWS::Deadline::Farm",
        "ServiceTypeIdentifier": "AWS::Deadline"
    },
    {
        "ServiceHumanReadableName": "AWS Deadline Cloud",
        "ServiceProvider": "AWS",
        "ServiceName": "Deadline",
        "DataTypeName": "Fleet",
        "ResourceTypeIdentifier": "AWS::Deadline::Fleet",
        "ServiceTypeIdentifier": "AWS::Deadline"
    },
    {
        "ServiceHumanReadableName": "AWS Deadline Cloud",
        "ServiceProvider": "AWS",
        "ServiceName": "Deadline",
        "DataTypeName": "LicenseEndpoint",
        "ResourceTypeIdentifier": "AWS::Deadline::LicenseEndpoint",
        "ServiceTypeIdentifier": "AWS::Deadline"
    },
    {
        "ServiceHumanReadableName": "AWS Deadline Cloud",
        "ServiceProvider": "AWS",
        "ServiceName": "Deadline",
        "DataTypeName": "MeteredProduct",
        "ResourceTypeIdentifier": "AWS::Deadline::MeteredProduct",
        "ServiceTypeIdentifier": "AWS::Deadline"
    },
    {
        "ServiceHumanReadableName": "AWS Deadline Cloud",
        "ServiceProvider": "AWS",
        "ServiceName": "Deadline",
        "DataTypeName": "Monitor",
        "ResourceTypeIdentifier": "AWS::Deadline::Monitor",
        "ServiceTypeIdentifier": "AWS::Deadline"
    },
    {
        "ServiceHumanReadableName": "AWS Deadline Cloud",
        "ServiceProvider": "AWS",
        "ServiceName": "Deadline",
        "DataTypeName": "Queue",
        "ResourceTypeIdentifier": "AWS::Deadline::Queue",
        "ServiceTypeIdentifier": "AWS::Deadline"
    },
    {
        "ServiceHumanReadableName": "AWS Deadline Cloud",
        "ServiceProvider": "AWS",
        "ServiceName": "Deadline",
        "DataTypeName": "QueueEnvironment",
        "ResourceTypeIdentifier": "AWS::Deadline::QueueEnvironment",
        "ServiceTypeIdentifier": "AWS::Deadline"
    },
    {
        "ServiceHumanReadableName": "AWS Deadline Cloud",
        "ServiceProvider": "AWS",
        "ServiceName": "Deadline",
        "DataTypeName": "QueueFleetAssociation",
        "ResourceTypeIdentifier": "AWS::Deadline::QueueFleetAssociation",
        "ServiceTypeIdentifier": "AWS::Deadline"
    },
    {
        "ServiceHumanReadableName": "AWS Deadline Cloud",
        "ServiceProvider": "AWS",
        "ServiceName": "Deadline",
        "DataTypeName": "StorageProfile",
        "ResourceTypeIdentifier": "AWS::Deadline::StorageProfile",
        "ServiceTypeIdentifier": "AWS::Deadline"
    },
    {
        "ServiceHumanReadableName": "DynamoDB Accelerator",
        "ServiceProvider": "AWS",
        "ServiceName": "DAX",
        "DataTypeName": "Cluster",
        "ResourceTypeIdentifier": "AWS::DAX::Cluster",
        "ServiceTypeIdentifier": "AWS::DAX"
    },
    {
        "ServiceHumanReadableName": "DynamoDB Accelerator",
        "ServiceProvider": "AWS",
        "ServiceName": "DAX",
        "DataTypeName": "ParameterGroup",
        "ResourceTypeIdentifier": "AWS::DAX::ParameterGroup",
        "ServiceTypeIdentifier": "AWS::DAX"
    },
    {
        "ServiceHumanReadableName": "DynamoDB Accelerator",
        "ServiceProvider": "AWS",
        "ServiceName": "DAX",
        "DataTypeName": "SubnetGroup",
        "ResourceTypeIdentifier": "AWS::DAX::SubnetGroup",
        "ServiceTypeIdentifier": "AWS::DAX"
    },
    {
        "ServiceHumanReadableName": "Amazon Detective",
        "ServiceProvider": "AWS",
        "ServiceName": "Detective",
        "DataTypeName": "Graph",
        "ResourceTypeIdentifier": "AWS::Detective::Graph",
        "ServiceTypeIdentifier": "AWS::Detective"
    },
    {
        "ServiceHumanReadableName": "Amazon Detective",
        "ServiceProvider": "AWS",
        "ServiceName": "Detective",
        "DataTypeName": "MemberInvitation",
        "ResourceTypeIdentifier": "AWS::Detective::MemberInvitation",
        "ServiceTypeIdentifier": "AWS::Detective"
    },
    {
        "ServiceHumanReadableName": "Amazon Detective",
        "ServiceProvider": "AWS",
        "ServiceName": "Detective",
        "DataTypeName": "OrganizationAdmin",
        "ResourceTypeIdentifier": "AWS::Detective::OrganizationAdmin",
        "ServiceTypeIdentifier": "AWS::Detective"
    },
    {
        "ServiceHumanReadableName": "AWS Device Farm",
        "ServiceProvider": "AWS",
        "ServiceName": "DeviceFarm",
        "DataTypeName": "DevicePool",
        "ResourceTypeIdentifier": "AWS::DeviceFarm::DevicePool",
        "ServiceTypeIdentifier": "AWS::DeviceFarm"
    },
    {
        "ServiceHumanReadableName": "AWS Device Farm",
        "ServiceProvider": "AWS",
        "ServiceName": "DeviceFarm",
        "DataTypeName": "InstanceProfile",
        "ResourceTypeIdentifier": "AWS::DeviceFarm::InstanceProfile",
        "ServiceTypeIdentifier": "AWS::DeviceFarm"
    },
    {
        "ServiceHumanReadableName": "AWS Device Farm",
        "ServiceProvider": "AWS",
        "ServiceName": "DeviceFarm",
        "DataTypeName": "NetworkProfile",
        "ResourceTypeIdentifier": "AWS::DeviceFarm::NetworkProfile",
        "ServiceTypeIdentifier": "AWS::DeviceFarm"
    },
    {
        "ServiceHumanReadableName": "AWS Device Farm",
        "ServiceProvider": "AWS",
        "ServiceName": "DeviceFarm",
        "DataTypeName": "Project",
        "ResourceTypeIdentifier": "AWS::DeviceFarm::Project",
        "ServiceTypeIdentifier": "AWS::DeviceFarm"
    },
    {
        "ServiceHumanReadableName": "AWS Device Farm",
        "ServiceProvider": "AWS",
        "ServiceName": "DeviceFarm",
        "DataTypeName": "TestGridProject",
        "ResourceTypeIdentifier": "AWS::DeviceFarm::TestGridProject",
        "ServiceTypeIdentifier": "AWS::DeviceFarm"
    },
    {
        "ServiceHumanReadableName": "AWS Device Farm",
        "ServiceProvider": "AWS",
        "ServiceName": "DeviceFarm",
        "DataTypeName": "VPCEConfiguration",
        "ResourceTypeIdentifier": "AWS::DeviceFarm::VPCEConfiguration",
        "ServiceTypeIdentifier": "AWS::DeviceFarm"
    },
    {
        "ServiceHumanReadableName": "Amazon DevOps\u00a0Guru",
        "ServiceProvider": "AWS",
        "ServiceName": "DevOpsGuru",
        "DataTypeName": "LogAnomalyDetectionIntegration",
        "ResourceTypeIdentifier": "AWS::DevOpsGuru::LogAnomalyDetectionIntegration",
        "ServiceTypeIdentifier": "AWS::DevOpsGuru"
    },
    {
        "ServiceHumanReadableName": "Amazon DevOps\u00a0Guru",
        "ServiceProvider": "AWS",
        "ServiceName": "DevOpsGuru",
        "DataTypeName": "NotificationChannel",
        "ResourceTypeIdentifier": "AWS::DevOpsGuru::NotificationChannel",
        "ServiceTypeIdentifier": "AWS::DevOpsGuru"
    },
    {
        "ServiceHumanReadableName": "Amazon DevOps\u00a0Guru",
        "ServiceProvider": "AWS",
        "ServiceName": "DevOpsGuru",
        "DataTypeName": "ResourceCollection",
        "ResourceTypeIdentifier": "AWS::DevOpsGuru::ResourceCollection",
        "ServiceTypeIdentifier": "AWS::DevOpsGuru"
    },
    {
        "ServiceHumanReadableName": "AWS Directory Service",
        "ServiceProvider": "AWS",
        "ServiceName": "DirectoryService",
        "DataTypeName": "MicrosoftAD",
        "ResourceTypeIdentifier": "AWS::DirectoryService::MicrosoftAD",
        "ServiceTypeIdentifier": "AWS::DirectoryService"
    },
    {
        "ServiceHumanReadableName": "AWS Directory Service",
        "ServiceProvider": "AWS",
        "ServiceName": "DirectoryService",
        "DataTypeName": "SimpleAD",
        "ResourceTypeIdentifier": "AWS::DirectoryService::SimpleAD",
        "ServiceTypeIdentifier": "AWS::DirectoryService"
    },
    {
        "ServiceHumanReadableName": "AWS Database Migration Service",
        "ServiceProvider": "AWS",
        "ServiceName": "DMS",
        "DataTypeName": "Certificate",
        "ResourceTypeIdentifier": "AWS::DMS::Certificate",
        "ServiceTypeIdentifier": "AWS::DMS"
    },
    {
        "ServiceHumanReadableName": "AWS Database Migration Service",
        "ServiceProvider": "AWS",
        "ServiceName": "DMS",
        "DataTypeName": "DataMigration",
        "ResourceTypeIdentifier": "AWS::DMS::DataMigration",
        "ServiceTypeIdentifier": "AWS::DMS"
    },
    {
        "ServiceHumanReadableName": "AWS Database Migration Service",
        "ServiceProvider": "AWS",
        "ServiceName": "DMS",
        "DataTypeName": "DataProvider",
        "ResourceTypeIdentifier": "AWS::DMS::DataProvider",
        "ServiceTypeIdentifier": "AWS::DMS"
    },
    {
        "ServiceHumanReadableName": "AWS Database Migration Service",
        "ServiceProvider": "AWS",
        "ServiceName": "DMS",
        "DataTypeName": "Endpoint",
        "ResourceTypeIdentifier": "AWS::DMS::Endpoint",
        "ServiceTypeIdentifier": "AWS::DMS"
    },
    {
        "ServiceHumanReadableName": "AWS Database Migration Service",
        "ServiceProvider": "AWS",
        "ServiceName": "DMS",
        "DataTypeName": "EventSubscription",
        "ResourceTypeIdentifier": "AWS::DMS::EventSubscription",
        "ServiceTypeIdentifier": "AWS::DMS"
    },
    {
        "ServiceHumanReadableName": "AWS Database Migration Service",
        "ServiceProvider": "AWS",
        "ServiceName": "DMS",
        "DataTypeName": "InstanceProfile",
        "ResourceTypeIdentifier": "AWS::DMS::InstanceProfile",
        "ServiceTypeIdentifier": "AWS::DMS"
    },
    {
        "ServiceHumanReadableName": "AWS Database Migration Service",
        "ServiceProvider": "AWS",
        "ServiceName": "DMS",
        "DataTypeName": "MigrationProject",
        "ResourceTypeIdentifier": "AWS::DMS::MigrationProject",
        "ServiceTypeIdentifier": "AWS::DMS"
    },
    {
        "ServiceHumanReadableName": "AWS Database Migration Service",
        "ServiceProvider": "AWS",
        "ServiceName": "DMS",
        "DataTypeName": "ReplicationConfig",
        "ResourceTypeIdentifier": "AWS::DMS::ReplicationConfig",
        "ServiceTypeIdentifier": "AWS::DMS"
    },
    {
        "ServiceHumanReadableName": "AWS Database Migration Service",
        "ServiceProvider": "AWS",
        "ServiceName": "DMS",
        "DataTypeName": "ReplicationInstance",
        "ResourceTypeIdentifier": "AWS::DMS::ReplicationInstance",
        "ServiceTypeIdentifier": "AWS::DMS"
    },
    {
        "ServiceHumanReadableName": "AWS Database Migration Service",
        "ServiceProvider": "AWS",
        "ServiceName": "DMS",
        "DataTypeName": "ReplicationSubnetGroup",
        "ResourceTypeIdentifier": "AWS::DMS::ReplicationSubnetGroup",
        "ServiceTypeIdentifier": "AWS::DMS"
    },
    {
        "ServiceHumanReadableName": "AWS Database Migration Service",
        "ServiceProvider": "AWS",
        "ServiceName": "DMS",
        "DataTypeName": "ReplicationTask",
        "ResourceTypeIdentifier": "AWS::DMS::ReplicationTask",
        "ServiceTypeIdentifier": "AWS::DMS"
    },
    {
        "ServiceHumanReadableName": "Amazon DocumentDB (with MongoDB compatibility)",
        "ServiceProvider": "AWS",
        "ServiceName": "DocDB",
        "DataTypeName": "DBCluster",
        "ResourceTypeIdentifier": "AWS::DocDB::DBCluster",
        "ServiceTypeIdentifier": "AWS::DocDB"
    },
    {
        "ServiceHumanReadableName": "Amazon DocumentDB (with MongoDB compatibility)",
        "ServiceProvider": "AWS",
        "ServiceName": "DocDB",
        "DataTypeName": "DBClusterParameterGroup",
        "ResourceTypeIdentifier": "AWS::DocDB::DBClusterParameterGroup",
        "ServiceTypeIdentifier": "AWS::DocDB"
    },
    {
        "ServiceHumanReadableName": "Amazon DocumentDB (with MongoDB compatibility)",
        "ServiceProvider": "AWS",
        "ServiceName": "DocDB",
        "DataTypeName": "DBInstance",
        "ResourceTypeIdentifier": "AWS::DocDB::DBInstance",
        "ServiceTypeIdentifier": "AWS::DocDB"
    },
    {
        "ServiceHumanReadableName": "Amazon DocumentDB (with MongoDB compatibility)",
        "ServiceProvider": "AWS",
        "ServiceName": "DocDB",
        "DataTypeName": "DBSubnetGroup",
        "ResourceTypeIdentifier": "AWS::DocDB::DBSubnetGroup",
        "ServiceTypeIdentifier": "AWS::DocDB"
    },
    {
        "ServiceHumanReadableName": "Amazon DocumentDB (with MongoDB compatibility)",
        "ServiceProvider": "AWS",
        "ServiceName": "DocDB",
        "DataTypeName": "EventSubscription",
        "ResourceTypeIdentifier": "AWS::DocDB::EventSubscription",
        "ServiceTypeIdentifier": "AWS::DocDB"
    },
    {
        "ServiceHumanReadableName": "Amazon DocumentDB (with MongoDB compatibility) elastic",
        "ServiceProvider": "AWS",
        "ServiceName": "DocDBElastic",
        "DataTypeName": "Cluster",
        "ResourceTypeIdentifier": "AWS::DocDBElastic::Cluster",
        "ServiceTypeIdentifier": "AWS::DocDBElastic"
    },
    {
        "ServiceHumanReadableName": "Amazon DynamoDB",
        "ServiceProvider": "AWS",
        "ServiceName": "DynamoDB",
        "DataTypeName": "GlobalTable",
        "ResourceTypeIdentifier": "AWS::DynamoDB::GlobalTable",
        "ServiceTypeIdentifier": "AWS::DynamoDB"
    },
    {
        "ServiceHumanReadableName": "Amazon DynamoDB",
        "ServiceProvider": "AWS",
        "ServiceName": "DynamoDB",
        "DataTypeName": "Table",
        "ResourceTypeIdentifier": "AWS::DynamoDB::Table",
        "ServiceTypeIdentifier": "AWS::DynamoDB"
    },
    {
        "ServiceHumanReadableName": "Amazon EC2",
        "ServiceProvider": "AWS",
        "ServiceName": "EC2",
        "DataTypeName": "CapacityReservation",
        "ResourceTypeIdentifier": "AWS::EC2::CapacityReservation",
        "ServiceTypeIdentifier": "AWS::EC2"
    },
    {
        "ServiceHumanReadableName": "Amazon EC2",
        "ServiceProvider": "AWS",
        "ServiceName": "EC2",
        "DataTypeName": "CapacityReservationFleet",
        "ResourceTypeIdentifier": "AWS::EC2::CapacityReservationFleet",
        "ServiceTypeIdentifier": "AWS::EC2"
    },
    {
        "ServiceHumanReadableName": "Amazon EC2",
        "ServiceProvider": "AWS",
        "ServiceName": "EC2",
        "DataTypeName": "CarrierGateway",
        "ResourceTypeIdentifier": "AWS::EC2::CarrierGateway",
        "ServiceTypeIdentifier": "AWS::EC2"
    },
    {
        "ServiceHumanReadableName": "Amazon EC2",
        "ServiceProvider": "AWS",
        "ServiceName": "EC2",
        "DataTypeName": "ClientVpnAuthorizationRule",
        "ResourceTypeIdentifier": "AWS::EC2::ClientVpnAuthorizationRule",
        "ServiceTypeIdentifier": "AWS::EC2"
    },
    {
        "ServiceHumanReadableName": "Amazon EC2",
        "ServiceProvider": "AWS",
        "ServiceName": "EC2",
        "DataTypeName": "ClientVpnEndpoint",
        "ResourceTypeIdentifier": "AWS::EC2::ClientVpnEndpoint",
        "ServiceTypeIdentifier": "AWS::EC2"
    },
    {
        "ServiceHumanReadableName": "Amazon EC2",
        "ServiceProvider": "AWS",
        "ServiceName": "EC2",
        "DataTypeName": "ClientVpnRoute",
        "ResourceTypeIdentifier": "AWS::EC2::ClientVpnRoute",
        "ServiceTypeIdentifier": "AWS::EC2"
    },
    {
        "ServiceHumanReadableName": "Amazon EC2",
        "ServiceProvider": "AWS",
        "ServiceName": "EC2",
        "DataTypeName": "ClientVpnTargetNetworkAssociation",
        "ResourceTypeIdentifier": "AWS::EC2::ClientVpnTargetNetworkAssociation",
        "ServiceTypeIdentifier": "AWS::EC2"
    },
    {
        "ServiceHumanReadableName": "Amazon EC2",
        "ServiceProvider": "AWS",
        "ServiceName": "EC2",
        "DataTypeName": "CustomerGateway",
        "ResourceTypeIdentifier": "AWS::EC2::CustomerGateway",
        "ServiceTypeIdentifier": "AWS::EC2"
    },
    {
        "ServiceHumanReadableName": "Amazon EC2",
        "ServiceProvider": "AWS",
        "ServiceName": "EC2",
        "DataTypeName": "DHCPOptions",
        "ResourceTypeIdentifier": "AWS::EC2::DHCPOptions",
        "ServiceTypeIdentifier": "AWS::EC2"
    },
    {
        "ServiceHumanReadableName": "Amazon EC2",
        "ServiceProvider": "AWS",
        "ServiceName": "EC2",
        "DataTypeName": "EC2Fleet",
        "ResourceTypeIdentifier": "AWS::EC2::EC2Fleet",
        "ServiceTypeIdentifier": "AWS::EC2"
    },
    {
        "ServiceHumanReadableName": "Amazon EC2",
        "ServiceProvider": "AWS",
        "ServiceName": "EC2",
        "DataTypeName": "EgressOnlyInternetGateway",
        "ResourceTypeIdentifier": "AWS::EC2::EgressOnlyInternetGateway",
        "ServiceTypeIdentifier": "AWS::EC2"
    },
    {
        "ServiceHumanReadableName": "Amazon EC2",
        "ServiceProvider": "AWS",
        "ServiceName": "EC2",
        "DataTypeName": "EIP",
        "ResourceTypeIdentifier": "AWS::EC2::EIP",
        "ServiceTypeIdentifier": "AWS::EC2"
    },
    {
        "ServiceHumanReadableName": "Amazon EC2",
        "ServiceProvider": "AWS",
        "ServiceName": "EC2",
        "DataTypeName": "EIPAssociation",
        "ResourceTypeIdentifier": "AWS::EC2::EIPAssociation",
        "ServiceTypeIdentifier": "AWS::EC2"
    },
    {
        "ServiceHumanReadableName": "Amazon EC2",
        "ServiceProvider": "AWS",
        "ServiceName": "EC2",
        "DataTypeName": "EnclaveCertificateIamRoleAssociation",
        "ResourceTypeIdentifier": "AWS::EC2::EnclaveCertificateIamRoleAssociation",
        "ServiceTypeIdentifier": "AWS::EC2"
    },
    {
        "ServiceHumanReadableName": "Amazon EC2",
        "ServiceProvider": "AWS",
        "ServiceName": "EC2",
        "DataTypeName": "FlowLog",
        "ResourceTypeIdentifier": "AWS::EC2::FlowLog",
        "ServiceTypeIdentifier": "AWS::EC2"
    },
    {
        "ServiceHumanReadableName": "Amazon EC2",
        "ServiceProvider": "AWS",
        "ServiceName": "EC2",
        "DataTypeName": "GatewayRouteTableAssociation",
        "ResourceTypeIdentifier": "AWS::EC2::GatewayRouteTableAssociation",
        "ServiceTypeIdentifier": "AWS::EC2"
    },
    {
        "ServiceHumanReadableName": "Amazon EC2",
        "ServiceProvider": "AWS",
        "ServiceName": "EC2",
        "DataTypeName": "Host",
        "ResourceTypeIdentifier": "AWS::EC2::Host",
        "ServiceTypeIdentifier": "AWS::EC2"
    },
    {
        "ServiceHumanReadableName": "Amazon EC2",
        "ServiceProvider": "AWS",
        "ServiceName": "EC2",
        "DataTypeName": "Instance",
        "ResourceTypeIdentifier": "AWS::EC2::Instance",
        "ServiceTypeIdentifier": "AWS::EC2"
    },
    {
        "ServiceHumanReadableName": "Amazon EC2",
        "ServiceProvider": "AWS",
        "ServiceName": "EC2",
        "DataTypeName": "InstanceConnectEndpoint",
        "ResourceTypeIdentifier": "AWS::EC2::InstanceConnectEndpoint",
        "ServiceTypeIdentifier": "AWS::EC2"
    },
    {
        "ServiceHumanReadableName": "Amazon EC2",
        "ServiceProvider": "AWS",
        "ServiceName": "EC2",
        "DataTypeName": "InternetGateway",
        "ResourceTypeIdentifier": "AWS::EC2::InternetGateway",
        "ServiceTypeIdentifier": "AWS::EC2"
    },
    {
        "ServiceHumanReadableName": "Amazon EC2",
        "ServiceProvider": "AWS",
        "ServiceName": "EC2",
        "DataTypeName": "IPAM",
        "ResourceTypeIdentifier": "AWS::EC2::IPAM",
        "ServiceTypeIdentifier": "AWS::EC2"
    },
    {
        "ServiceHumanReadableName": "Amazon EC2",
        "ServiceProvider": "AWS",
        "ServiceName": "EC2",
        "DataTypeName": "IPAMAllocation",
        "ResourceTypeIdentifier": "AWS::EC2::IPAMAllocation",
        "ServiceTypeIdentifier": "AWS::EC2"
    },
    {
        "ServiceHumanReadableName": "Amazon EC2",
        "ServiceProvider": "AWS",
        "ServiceName": "EC2",
        "DataTypeName": "IPAMPool",
        "ResourceTypeIdentifier": "AWS::EC2::IPAMPool",
        "ServiceTypeIdentifier": "AWS::EC2"
    },
    {
        "ServiceHumanReadableName": "Amazon EC2",
        "ServiceProvider": "AWS",
        "ServiceName": "EC2",
        "DataTypeName": "IPAMPoolCidr",
        "ResourceTypeIdentifier": "AWS::EC2::IPAMPoolCidr",
        "ServiceTypeIdentifier": "AWS::EC2"
    },
    {
        "ServiceHumanReadableName": "Amazon EC2",
        "ServiceProvider": "AWS",
        "ServiceName": "EC2",
        "DataTypeName": "IPAMResourceDiscovery",
        "ResourceTypeIdentifier": "AWS::EC2::IPAMResourceDiscovery",
        "ServiceTypeIdentifier": "AWS::EC2"
    },
    {
        "ServiceHumanReadableName": "Amazon EC2",
        "ServiceProvider": "AWS",
        "ServiceName": "EC2",
        "DataTypeName": "IPAMResourceDiscoveryAssociation",
        "ResourceTypeIdentifier": "AWS::EC2::IPAMResourceDiscoveryAssociation",
        "ServiceTypeIdentifier": "AWS::EC2"
    },
    {
        "ServiceHumanReadableName": "Amazon EC2",
        "ServiceProvider": "AWS",
        "ServiceName": "EC2",
        "DataTypeName": "IPAMScope",
        "ResourceTypeIdentifier": "AWS::EC2::IPAMScope",
        "ServiceTypeIdentifier": "AWS::EC2"
    },
    {
        "ServiceHumanReadableName": "Amazon EC2",
        "ServiceProvider": "AWS",
        "ServiceName": "EC2",
        "DataTypeName": "KeyPair",
        "ResourceTypeIdentifier": "AWS::EC2::KeyPair",
        "ServiceTypeIdentifier": "AWS::EC2"
    },
    {
        "ServiceHumanReadableName": "Amazon EC2",
        "ServiceProvider": "AWS",
        "ServiceName": "EC2",
        "DataTypeName": "LaunchTemplate",
        "ResourceTypeIdentifier": "AWS::EC2::LaunchTemplate",
        "ServiceTypeIdentifier": "AWS::EC2"
    },
    {
        "ServiceHumanReadableName": "Amazon EC2",
        "ServiceProvider": "AWS",
        "ServiceName": "EC2",
        "DataTypeName": "LocalGatewayRoute",
        "ResourceTypeIdentifier": "AWS::EC2::LocalGatewayRoute",
        "ServiceTypeIdentifier": "AWS::EC2"
    },
    {
        "ServiceHumanReadableName": "Amazon EC2",
        "ServiceProvider": "AWS",
        "ServiceName": "EC2",
        "DataTypeName": "LocalGatewayRouteTable",
        "ResourceTypeIdentifier": "AWS::EC2::LocalGatewayRouteTable",
        "ServiceTypeIdentifier": "AWS::EC2"
    },
    {
        "ServiceHumanReadableName": "Amazon EC2",
        "ServiceProvider": "AWS",
        "ServiceName": "EC2",
        "DataTypeName": "LocalGatewayRouteTableVirtualInterfaceGroupAssociation",
        "ResourceTypeIdentifier": "AWS::EC2::LocalGatewayRouteTableVirtualInterfaceGroupAssociation",
        "ServiceTypeIdentifier": "AWS::EC2"
    },
    {
        "ServiceHumanReadableName": "Amazon EC2",
        "ServiceProvider": "AWS",
        "ServiceName": "EC2",
        "DataTypeName": "LocalGatewayRouteTableVPCAssociation",
        "ResourceTypeIdentifier": "AWS::EC2::LocalGatewayRouteTableVPCAssociation",
        "ServiceTypeIdentifier": "AWS::EC2"
    },
    {
        "ServiceHumanReadableName": "Amazon EC2",
        "ServiceProvider": "AWS",
        "ServiceName": "EC2",
        "DataTypeName": "NatGateway",
        "ResourceTypeIdentifier": "AWS::EC2::NatGateway",
        "ServiceTypeIdentifier": "AWS::EC2"
    },
    {
        "ServiceHumanReadableName": "Amazon EC2",
        "ServiceProvider": "AWS",
        "ServiceName": "EC2",
        "DataTypeName": "NetworkAcl",
        "ResourceTypeIdentifier": "AWS::EC2::NetworkAcl",
        "ServiceTypeIdentifier": "AWS::EC2"
    },
    {
        "ServiceHumanReadableName": "Amazon EC2",
        "ServiceProvider": "AWS",
        "ServiceName": "EC2",
        "DataTypeName": "NetworkAclEntry",
        "ResourceTypeIdentifier": "AWS::EC2::NetworkAclEntry",
        "ServiceTypeIdentifier": "AWS::EC2"
    },
    {
        "ServiceHumanReadableName": "Amazon EC2",
        "ServiceProvider": "AWS",
        "ServiceName": "EC2",
        "DataTypeName": "NetworkInsightsAccessScope",
        "ResourceTypeIdentifier": "AWS::EC2::NetworkInsightsAccessScope",
        "ServiceTypeIdentifier": "AWS::EC2"
    },
    {
        "ServiceHumanReadableName": "Amazon EC2",
        "ServiceProvider": "AWS",
        "ServiceName": "EC2",
        "DataTypeName": "NetworkInsightsAccessScopeAnalysis",
        "ResourceTypeIdentifier": "AWS::EC2::NetworkInsightsAccessScopeAnalysis",
        "ServiceTypeIdentifier": "AWS::EC2"
    },
    {
        "ServiceHumanReadableName": "Amazon EC2",
        "ServiceProvider": "AWS",
        "ServiceName": "EC2",
        "DataTypeName": "NetworkInsightsAnalysis",
        "ResourceTypeIdentifier": "AWS::EC2::NetworkInsightsAnalysis",
        "ServiceTypeIdentifier": "AWS::EC2"
    },
    {
        "ServiceHumanReadableName": "Amazon EC2",
        "ServiceProvider": "AWS",
        "ServiceName": "EC2",
        "DataTypeName": "NetworkInsightsPath",
        "ResourceTypeIdentifier": "AWS::EC2::NetworkInsightsPath",
        "ServiceTypeIdentifier": "AWS::EC2"
    },
    {
        "ServiceHumanReadableName": "Amazon EC2",
        "ServiceProvider": "AWS",
        "ServiceName": "EC2",
        "DataTypeName": "NetworkInterface",
        "ResourceTypeIdentifier": "AWS::EC2::NetworkInterface",
        "ServiceTypeIdentifier": "AWS::EC2"
    },
    {
        "ServiceHumanReadableName": "Amazon EC2",
        "ServiceProvider": "AWS",
        "ServiceName": "EC2",
        "DataTypeName": "NetworkInterfaceAttachment",
        "ResourceTypeIdentifier": "AWS::EC2::NetworkInterfaceAttachment",
        "ServiceTypeIdentifier": "AWS::EC2"
    },
    {
        "ServiceHumanReadableName": "Amazon EC2",
        "ServiceProvider": "AWS",
        "ServiceName": "EC2",
        "DataTypeName": "NetworkInterfacePermission",
        "ResourceTypeIdentifier": "AWS::EC2::NetworkInterfacePermission",
        "ServiceTypeIdentifier": "AWS::EC2"
    },
    {
        "ServiceHumanReadableName": "Amazon EC2",
        "ServiceProvider": "AWS",
        "ServiceName": "EC2",
        "DataTypeName": "NetworkPerformanceMetricSubscription",
        "ResourceTypeIdentifier": "AWS::EC2::NetworkPerformanceMetricSubscription",
        "ServiceTypeIdentifier": "AWS::EC2"
    },
    {
        "ServiceHumanReadableName": "Amazon EC2",
        "ServiceProvider": "AWS",
        "ServiceName": "EC2",
        "DataTypeName": "PlacementGroup",
        "ResourceTypeIdentifier": "AWS::EC2::PlacementGroup",
        "ServiceTypeIdentifier": "AWS::EC2"
    },
    {
        "ServiceHumanReadableName": "Amazon EC2",
        "ServiceProvider": "AWS",
        "ServiceName": "EC2",
        "DataTypeName": "PrefixList",
        "ResourceTypeIdentifier": "AWS::EC2::PrefixList",
        "ServiceTypeIdentifier": "AWS::EC2"
    },
    {
        "ServiceHumanReadableName": "Amazon EC2",
        "ServiceProvider": "AWS",
        "ServiceName": "EC2",
        "DataTypeName": "Route",
        "ResourceTypeIdentifier": "AWS::EC2::Route",
        "ServiceTypeIdentifier": "AWS::EC2"
    },
    {
        "ServiceHumanReadableName": "Amazon EC2",
        "ServiceProvider": "AWS",
        "ServiceName": "EC2",
        "DataTypeName": "RouteTable",
        "ResourceTypeIdentifier": "AWS::EC2::RouteTable",
        "ServiceTypeIdentifier": "AWS::EC2"
    },
    {
        "ServiceHumanReadableName": "Amazon EC2",
        "ServiceProvider": "AWS",
        "ServiceName": "EC2",
        "DataTypeName": "SecurityGroup",
        "ResourceTypeIdentifier": "AWS::EC2::SecurityGroup",
        "ServiceTypeIdentifier": "AWS::EC2"
    },
    {
        "ServiceHumanReadableName": "Amazon EC2",
        "ServiceProvider": "AWS",
        "ServiceName": "EC2",
        "DataTypeName": "SecurityGroupEgress",
        "ResourceTypeIdentifier": "AWS::EC2::SecurityGroupEgress",
        "ServiceTypeIdentifier": "AWS::EC2"
    },
    {
        "ServiceHumanReadableName": "Amazon EC2",
        "ServiceProvider": "AWS",
        "ServiceName": "EC2",
        "DataTypeName": "SecurityGroupIngress",
        "ResourceTypeIdentifier": "AWS::EC2::SecurityGroupIngress",
        "ServiceTypeIdentifier": "AWS::EC2"
    },
    {
        "ServiceHumanReadableName": "Amazon EC2",
        "ServiceProvider": "AWS",
        "ServiceName": "EC2",
        "DataTypeName": "SnapshotBlockPublicAccess",
        "ResourceTypeIdentifier": "AWS::EC2::SnapshotBlockPublicAccess",
        "ServiceTypeIdentifier": "AWS::EC2"
    },
    {
        "ServiceHumanReadableName": "Amazon EC2",
        "ServiceProvider": "AWS",
        "ServiceName": "EC2",
        "DataTypeName": "SpotFleet",
        "ResourceTypeIdentifier": "AWS::EC2::SpotFleet",
        "ServiceTypeIdentifier": "AWS::EC2"
    },
    {
        "ServiceHumanReadableName": "Amazon EC2",
        "ServiceProvider": "AWS",
        "ServiceName": "EC2",
        "DataTypeName": "Subnet",
        "ResourceTypeIdentifier": "AWS::EC2::Subnet",
        "ServiceTypeIdentifier": "AWS::EC2"
    },
    {
        "ServiceHumanReadableName": "Amazon EC2",
        "ServiceProvider": "AWS",
        "ServiceName": "EC2",
        "DataTypeName": "SubnetCidrBlock",
        "ResourceTypeIdentifier": "AWS::EC2::SubnetCidrBlock",
        "ServiceTypeIdentifier": "AWS::EC2"
    },
    {
        "ServiceHumanReadableName": "Amazon EC2",
        "ServiceProvider": "AWS",
        "ServiceName": "EC2",
        "DataTypeName": "SubnetNetworkAclAssociation",
        "ResourceTypeIdentifier": "AWS::EC2::SubnetNetworkAclAssociation",
        "ServiceTypeIdentifier": "AWS::EC2"
    },
    {
        "ServiceHumanReadableName": "Amazon EC2",
        "ServiceProvider": "AWS",
        "ServiceName": "EC2",
        "DataTypeName": "SubnetRouteTableAssociation",
        "ResourceTypeIdentifier": "AWS::EC2::SubnetRouteTableAssociation",
        "ServiceTypeIdentifier": "AWS::EC2"
    },
    {
        "ServiceHumanReadableName": "Amazon EC2",
        "ServiceProvider": "AWS",
        "ServiceName": "EC2",
        "DataTypeName": "TrafficMirrorFilter",
        "ResourceTypeIdentifier": "AWS::EC2::TrafficMirrorFilter",
        "ServiceTypeIdentifier": "AWS::EC2"
    },
    {
        "ServiceHumanReadableName": "Amazon EC2",
        "ServiceProvider": "AWS",
        "ServiceName": "EC2",
        "DataTypeName": "TrafficMirrorFilterRule",
        "ResourceTypeIdentifier": "AWS::EC2::TrafficMirrorFilterRule",
        "ServiceTypeIdentifier": "AWS::EC2"
    },
    {
        "ServiceHumanReadableName": "Amazon EC2",
        "ServiceProvider": "AWS",
        "ServiceName": "EC2",
        "DataTypeName": "TrafficMirrorSession",
        "ResourceTypeIdentifier": "AWS::EC2::TrafficMirrorSession",
        "ServiceTypeIdentifier": "AWS::EC2"
    },
    {
        "ServiceHumanReadableName": "Amazon EC2",
        "ServiceProvider": "AWS",
        "ServiceName": "EC2",
        "DataTypeName": "TrafficMirrorTarget",
        "ResourceTypeIdentifier": "AWS::EC2::TrafficMirrorTarget",
        "ServiceTypeIdentifier": "AWS::EC2"
    },
    {
        "ServiceHumanReadableName": "Amazon EC2",
        "ServiceProvider": "AWS",
        "ServiceName": "EC2",
        "DataTypeName": "TransitGateway",
        "ResourceTypeIdentifier": "AWS::EC2::TransitGateway",
        "ServiceTypeIdentifier": "AWS::EC2"
    },
    {
        "ServiceHumanReadableName": "Amazon EC2",
        "ServiceProvider": "AWS",
        "ServiceName": "EC2",
        "DataTypeName": "TransitGatewayAttachment",
        "ResourceTypeIdentifier": "AWS::EC2::TransitGatewayAttachment",
        "ServiceTypeIdentifier": "AWS::EC2"
    },
    {
        "ServiceHumanReadableName": "Amazon EC2",
        "ServiceProvider": "AWS",
        "ServiceName": "EC2",
        "DataTypeName": "TransitGatewayConnect",
        "ResourceTypeIdentifier": "AWS::EC2::TransitGatewayConnect",
        "ServiceTypeIdentifier": "AWS::EC2"
    },
    {
        "ServiceHumanReadableName": "Amazon EC2",
        "ServiceProvider": "AWS",
        "ServiceName": "EC2",
        "DataTypeName": "TransitGatewayMulticastDomain",
        "ResourceTypeIdentifier": "AWS::EC2::TransitGatewayMulticastDomain",
        "ServiceTypeIdentifier": "AWS::EC2"
    },
    {
        "ServiceHumanReadableName": "Amazon EC2",
        "ServiceProvider": "AWS",
        "ServiceName": "EC2",
        "DataTypeName": "TransitGatewayMulticastDomainAssociation",
        "ResourceTypeIdentifier": "AWS::EC2::TransitGatewayMulticastDomainAssociation",
        "ServiceTypeIdentifier": "AWS::EC2"
    },
    {
        "ServiceHumanReadableName": "Amazon EC2",
        "ServiceProvider": "AWS",
        "ServiceName": "EC2",
        "DataTypeName": "TransitGatewayMulticastGroupMember",
        "ResourceTypeIdentifier": "AWS::EC2::TransitGatewayMulticastGroupMember",
        "ServiceTypeIdentifier": "AWS::EC2"
    },
    {
        "ServiceHumanReadableName": "Amazon EC2",
        "ServiceProvider": "AWS",
        "ServiceName": "EC2",
        "DataTypeName": "TransitGatewayMulticastGroupSource",
        "ResourceTypeIdentifier": "AWS::EC2::TransitGatewayMulticastGroupSource",
        "ServiceTypeIdentifier": "AWS::EC2"
    },
    {
        "ServiceHumanReadableName": "Amazon EC2",
        "ServiceProvider": "AWS",
        "ServiceName": "EC2",
        "DataTypeName": "TransitGatewayPeeringAttachment",
        "ResourceTypeIdentifier": "AWS::EC2::TransitGatewayPeeringAttachment",
        "ServiceTypeIdentifier": "AWS::EC2"
    },
    {
        "ServiceHumanReadableName": "Amazon EC2",
        "ServiceProvider": "AWS",
        "ServiceName": "EC2",
        "DataTypeName": "TransitGatewayRoute",
        "ResourceTypeIdentifier": "AWS::EC2::TransitGatewayRoute",
        "ServiceTypeIdentifier": "AWS::EC2"
    },
    {
        "ServiceHumanReadableName": "Amazon EC2",
        "ServiceProvider": "AWS",
        "ServiceName": "EC2",
        "DataTypeName": "TransitGatewayRouteTable",
        "ResourceTypeIdentifier": "AWS::EC2::TransitGatewayRouteTable",
        "ServiceTypeIdentifier": "AWS::EC2"
    },
    {
        "ServiceHumanReadableName": "Amazon EC2",
        "ServiceProvider": "AWS",
        "ServiceName": "EC2",
        "DataTypeName": "TransitGatewayRouteTableAssociation",
        "ResourceTypeIdentifier": "AWS::EC2::TransitGatewayRouteTableAssociation",
        "ServiceTypeIdentifier": "AWS::EC2"
    },
    {
        "ServiceHumanReadableName": "Amazon EC2",
        "ServiceProvider": "AWS",
        "ServiceName": "EC2",
        "DataTypeName": "TransitGatewayRouteTablePropagation",
        "ResourceTypeIdentifier": "AWS::EC2::TransitGatewayRouteTablePropagation",
        "ServiceTypeIdentifier": "AWS::EC2"
    },
    {
        "ServiceHumanReadableName": "Amazon EC2",
        "ServiceProvider": "AWS",
        "ServiceName": "EC2",
        "DataTypeName": "TransitGatewayVpcAttachment",
        "ResourceTypeIdentifier": "AWS::EC2::TransitGatewayVpcAttachment",
        "ServiceTypeIdentifier": "AWS::EC2"
    },
    {
        "ServiceHumanReadableName": "Amazon EC2",
        "ServiceProvider": "AWS",
        "ServiceName": "EC2",
        "DataTypeName": "VerifiedAccessEndpoint",
        "ResourceTypeIdentifier": "AWS::EC2::VerifiedAccessEndpoint",
        "ServiceTypeIdentifier": "AWS::EC2"
    },
    {
        "ServiceHumanReadableName": "Amazon EC2",
        "ServiceProvider": "AWS",
        "ServiceName": "EC2",
        "DataTypeName": "VerifiedAccessGroup",
        "ResourceTypeIdentifier": "AWS::EC2::VerifiedAccessGroup",
        "ServiceTypeIdentifier": "AWS::EC2"
    },
    {
        "ServiceHumanReadableName": "Amazon EC2",
        "ServiceProvider": "AWS",
        "ServiceName": "EC2",
        "DataTypeName": "VerifiedAccessInstance",
        "ResourceTypeIdentifier": "AWS::EC2::VerifiedAccessInstance",
        "ServiceTypeIdentifier": "AWS::EC2"
    },
    {
        "ServiceHumanReadableName": "Amazon EC2",
        "ServiceProvider": "AWS",
        "ServiceName": "EC2",
        "DataTypeName": "VerifiedAccessTrustProvider",
        "ResourceTypeIdentifier": "AWS::EC2::VerifiedAccessTrustProvider",
        "ServiceTypeIdentifier": "AWS::EC2"
    },
    {
        "ServiceHumanReadableName": "Amazon EC2",
        "ServiceProvider": "AWS",
        "ServiceName": "EC2",
        "DataTypeName": "Volume",
        "ResourceTypeIdentifier": "AWS::EC2::Volume",
        "ServiceTypeIdentifier": "AWS::EC2"
    },
    {
        "ServiceHumanReadableName": "Amazon EC2",
        "ServiceProvider": "AWS",
        "ServiceName": "EC2",
        "DataTypeName": "VolumeAttachment",
        "ResourceTypeIdentifier": "AWS::EC2::VolumeAttachment",
        "ServiceTypeIdentifier": "AWS::EC2"
    },
    {
        "ServiceHumanReadableName": "Amazon EC2",
        "ServiceProvider": "AWS",
        "ServiceName": "EC2",
        "DataTypeName": "VPC",
        "ResourceTypeIdentifier": "AWS::EC2::VPC",
        "ServiceTypeIdentifier": "AWS::EC2"
    },
    {
        "ServiceHumanReadableName": "Amazon EC2",
        "ServiceProvider": "AWS",
        "ServiceName": "EC2",
        "DataTypeName": "VPCCidrBlock",
        "ResourceTypeIdentifier": "AWS::EC2::VPCCidrBlock",
        "ServiceTypeIdentifier": "AWS::EC2"
    },
    {
        "ServiceHumanReadableName": "Amazon EC2",
        "ServiceProvider": "AWS",
        "ServiceName": "EC2",
        "DataTypeName": "VPCDHCPOptionsAssociation",
        "ResourceTypeIdentifier": "AWS::EC2::VPCDHCPOptionsAssociation",
        "ServiceTypeIdentifier": "AWS::EC2"
    },
    {
        "ServiceHumanReadableName": "Amazon EC2",
        "ServiceProvider": "AWS",
        "ServiceName": "EC2",
        "DataTypeName": "VPCEndpoint",
        "ResourceTypeIdentifier": "AWS::EC2::VPCEndpoint",
        "ServiceTypeIdentifier": "AWS::EC2"
    },
    {
        "ServiceHumanReadableName": "Amazon EC2",
        "ServiceProvider": "AWS",
        "ServiceName": "EC2",
        "DataTypeName": "VPCEndpointConnectionNotification",
        "ResourceTypeIdentifier": "AWS::EC2::VPCEndpointConnectionNotification",
        "ServiceTypeIdentifier": "AWS::EC2"
    },
    {
        "ServiceHumanReadableName": "Amazon EC2",
        "ServiceProvider": "AWS",
        "ServiceName": "EC2",
        "DataTypeName": "VPCEndpointService",
        "ResourceTypeIdentifier": "AWS::EC2::VPCEndpointService",
        "ServiceTypeIdentifier": "AWS::EC2"
    },
    {
        "ServiceHumanReadableName": "Amazon EC2",
        "ServiceProvider": "AWS",
        "ServiceName": "EC2",
        "DataTypeName": "VPCEndpointServicePermissions",
        "ResourceTypeIdentifier": "AWS::EC2::VPCEndpointServicePermissions",
        "ServiceTypeIdentifier": "AWS::EC2"
    },
    {
        "ServiceHumanReadableName": "Amazon EC2",
        "ServiceProvider": "AWS",
        "ServiceName": "EC2",
        "DataTypeName": "VPCGatewayAttachment",
        "ResourceTypeIdentifier": "AWS::EC2::VPCGatewayAttachment",
        "ServiceTypeIdentifier": "AWS::EC2"
    },
    {
        "ServiceHumanReadableName": "Amazon EC2",
        "ServiceProvider": "AWS",
        "ServiceName": "EC2",
        "DataTypeName": "VPCPeeringConnection",
        "ResourceTypeIdentifier": "AWS::EC2::VPCPeeringConnection",
        "ServiceTypeIdentifier": "AWS::EC2"
    },
    {
        "ServiceHumanReadableName": "Amazon EC2",
        "ServiceProvider": "AWS",
        "ServiceName": "EC2",
        "DataTypeName": "VPNConnection",
        "ResourceTypeIdentifier": "AWS::EC2::VPNConnection",
        "ServiceTypeIdentifier": "AWS::EC2"
    },
    {
        "ServiceHumanReadableName": "Amazon EC2",
        "ServiceProvider": "AWS",
        "ServiceName": "EC2",
        "DataTypeName": "VPNConnectionRoute",
        "ResourceTypeIdentifier": "AWS::EC2::VPNConnectionRoute",
        "ServiceTypeIdentifier": "AWS::EC2"
    },
    {
        "ServiceHumanReadableName": "Amazon EC2",
        "ServiceProvider": "AWS",
        "ServiceName": "EC2",
        "DataTypeName": "VPNGateway",
        "ResourceTypeIdentifier": "AWS::EC2::VPNGateway",
        "ServiceTypeIdentifier": "AWS::EC2"
    },
    {
        "ServiceHumanReadableName": "Amazon EC2",
        "ServiceProvider": "AWS",
        "ServiceName": "EC2",
        "DataTypeName": "VPNGatewayRoutePropagation",
        "ResourceTypeIdentifier": "AWS::EC2::VPNGatewayRoutePropagation",
        "ServiceTypeIdentifier": "AWS::EC2"
    },
    {
        "ServiceHumanReadableName": "Amazon EC2 Auto Scaling",
        "ServiceProvider": "AWS",
        "ServiceName": "AutoScaling",
        "DataTypeName": "AutoScalingGroup",
        "ResourceTypeIdentifier": "AWS::AutoScaling::AutoScalingGroup",
        "ServiceTypeIdentifier": "AWS::AutoScaling"
    },
    {
        "ServiceHumanReadableName": "Amazon EC2 Auto Scaling",
        "ServiceProvider": "AWS",
        "ServiceName": "AutoScaling",
        "DataTypeName": "LaunchConfiguration",
        "ResourceTypeIdentifier": "AWS::AutoScaling::LaunchConfiguration",
        "ServiceTypeIdentifier": "AWS::AutoScaling"
    },
    {
        "ServiceHumanReadableName": "Amazon EC2 Auto Scaling",
        "ServiceProvider": "AWS",
        "ServiceName": "AutoScaling",
        "DataTypeName": "LifecycleHook",
        "ResourceTypeIdentifier": "AWS::AutoScaling::LifecycleHook",
        "ServiceTypeIdentifier": "AWS::AutoScaling"
    },
    {
        "ServiceHumanReadableName": "Amazon EC2 Auto Scaling",
        "ServiceProvider": "AWS",
        "ServiceName": "AutoScaling",
        "DataTypeName": "ScalingPolicy",
        "ResourceTypeIdentifier": "AWS::AutoScaling::ScalingPolicy",
        "ServiceTypeIdentifier": "AWS::AutoScaling"
    },
    {
        "ServiceHumanReadableName": "Amazon EC2 Auto Scaling",
        "ServiceProvider": "AWS",
        "ServiceName": "AutoScaling",
        "DataTypeName": "ScheduledAction",
        "ResourceTypeIdentifier": "AWS::AutoScaling::ScheduledAction",
        "ServiceTypeIdentifier": "AWS::AutoScaling"
    },
    {
        "ServiceHumanReadableName": "Amazon EC2 Auto Scaling",
        "ServiceProvider": "AWS",
        "ServiceName": "AutoScaling",
        "DataTypeName": "WarmPool",
        "ResourceTypeIdentifier": "AWS::AutoScaling::WarmPool",
        "ServiceTypeIdentifier": "AWS::AutoScaling"
    },
    {
        "ServiceHumanReadableName": "Amazon ECR",
        "ServiceProvider": "AWS",
        "ServiceName": "ECR",
        "DataTypeName": "PublicRepository",
        "ResourceTypeIdentifier": "AWS::ECR::PublicRepository",
        "ServiceTypeIdentifier": "AWS::ECR"
    },
    {
        "ServiceHumanReadableName": "Amazon ECR",
        "ServiceProvider": "AWS",
        "ServiceName": "ECR",
        "DataTypeName": "PullThroughCacheRule",
        "ResourceTypeIdentifier": "AWS::ECR::PullThroughCacheRule",
        "ServiceTypeIdentifier": "AWS::ECR"
    },
    {
        "ServiceHumanReadableName": "Amazon ECR",
        "ServiceProvider": "AWS",
        "ServiceName": "ECR",
        "DataTypeName": "RegistryPolicy",
        "ResourceTypeIdentifier": "AWS::ECR::RegistryPolicy",
        "ServiceTypeIdentifier": "AWS::ECR"
    },
    {
        "ServiceHumanReadableName": "Amazon ECR",
        "ServiceProvider": "AWS",
        "ServiceName": "ECR",
        "DataTypeName": "ReplicationConfiguration",
        "ResourceTypeIdentifier": "AWS::ECR::ReplicationConfiguration",
        "ServiceTypeIdentifier": "AWS::ECR"
    },
    {
        "ServiceHumanReadableName": "Amazon ECR",
        "ServiceProvider": "AWS",
        "ServiceName": "ECR",
        "DataTypeName": "Repository",
        "ResourceTypeIdentifier": "AWS::ECR::Repository",
        "ServiceTypeIdentifier": "AWS::ECR"
    },
    {
        "ServiceHumanReadableName": "Amazon ECR",
        "ServiceProvider": "AWS",
        "ServiceName": "ECR",
        "DataTypeName": "RepositoryCreationTemplate",
        "ResourceTypeIdentifier": "AWS::ECR::RepositoryCreationTemplate",
        "ServiceTypeIdentifier": "AWS::ECR"
    },
    {
        "ServiceHumanReadableName": "Amazon ECS",
        "ServiceProvider": "AWS",
        "ServiceName": "ECS",
        "DataTypeName": "CapacityProvider",
        "ResourceTypeIdentifier": "AWS::ECS::CapacityProvider",
        "ServiceTypeIdentifier": "AWS::ECS"
    },
    {
        "ServiceHumanReadableName": "Amazon ECS",
        "ServiceProvider": "AWS",
        "ServiceName": "ECS",
        "DataTypeName": "Cluster",
        "ResourceTypeIdentifier": "AWS::ECS::Cluster",
        "ServiceTypeIdentifier": "AWS::ECS"
    },
    {
        "ServiceHumanReadableName": "Amazon ECS",
        "ServiceProvider": "AWS",
        "ServiceName": "ECS",
        "DataTypeName": "ClusterCapacityProviderAssociations",
        "ResourceTypeIdentifier": "AWS::ECS::ClusterCapacityProviderAssociations",
        "ServiceTypeIdentifier": "AWS::ECS"
    },
    {
        "ServiceHumanReadableName": "Amazon ECS",
        "ServiceProvider": "AWS",
        "ServiceName": "ECS",
        "DataTypeName": "PrimaryTaskSet",
        "ResourceTypeIdentifier": "AWS::ECS::PrimaryTaskSet",
        "ServiceTypeIdentifier": "AWS::ECS"
    },
    {
        "ServiceHumanReadableName": "Amazon ECS",
        "ServiceProvider": "AWS",
        "ServiceName": "ECS",
        "DataTypeName": "Service",
        "ResourceTypeIdentifier": "AWS::ECS::Service",
        "ServiceTypeIdentifier": "AWS::ECS"
    },
    {
        "ServiceHumanReadableName": "Amazon ECS",
        "ServiceProvider": "AWS",
        "ServiceName": "ECS",
        "DataTypeName": "TaskDefinition",
        "ResourceTypeIdentifier": "AWS::ECS::TaskDefinition",
        "ServiceTypeIdentifier": "AWS::ECS"
    },
    {
        "ServiceHumanReadableName": "Amazon ECS",
        "ServiceProvider": "AWS",
        "ServiceName": "ECS",
        "DataTypeName": "TaskSet",
        "ResourceTypeIdentifier": "AWS::ECS::TaskSet",
        "ServiceTypeIdentifier": "AWS::ECS"
    },
    {
        "ServiceHumanReadableName": "Amazon Elastic File System",
        "ServiceProvider": "AWS",
        "ServiceName": "EFS",
        "DataTypeName": "AccessPoint",
        "ResourceTypeIdentifier": "AWS::EFS::AccessPoint",
        "ServiceTypeIdentifier": "AWS::EFS"
    },
    {
        "ServiceHumanReadableName": "Amazon Elastic File System",
        "ServiceProvider": "AWS",
        "ServiceName": "EFS",
        "DataTypeName": "FileSystem",
        "ResourceTypeIdentifier": "AWS::EFS::FileSystem",
        "ServiceTypeIdentifier": "AWS::EFS"
    },
    {
        "ServiceHumanReadableName": "Amazon Elastic File System",
        "ServiceProvider": "AWS",
        "ServiceName": "EFS",
        "DataTypeName": "MountTarget",
        "ResourceTypeIdentifier": "AWS::EFS::MountTarget",
        "ServiceTypeIdentifier": "AWS::EFS"
    },
    {
        "ServiceHumanReadableName": "Amazon Elastic Kubernetes Service",
        "ServiceProvider": "AWS",
        "ServiceName": "EKS",
        "DataTypeName": "AccessEntry",
        "ResourceTypeIdentifier": "AWS::EKS::AccessEntry",
        "ServiceTypeIdentifier": "AWS::EKS"
    },
    {
        "ServiceHumanReadableName": "Amazon Elastic Kubernetes Service",
        "ServiceProvider": "AWS",
        "ServiceName": "EKS",
        "DataTypeName": "Addon",
        "ResourceTypeIdentifier": "AWS::EKS::Addon",
        "ServiceTypeIdentifier": "AWS::EKS"
    },
    {
        "ServiceHumanReadableName": "Amazon Elastic Kubernetes Service",
        "ServiceProvider": "AWS",
        "ServiceName": "EKS",
        "DataTypeName": "Cluster",
        "ResourceTypeIdentifier": "AWS::EKS::Cluster",
        "ServiceTypeIdentifier": "AWS::EKS"
    },
    {
        "ServiceHumanReadableName": "Amazon Elastic Kubernetes Service",
        "ServiceProvider": "AWS",
        "ServiceName": "EKS",
        "DataTypeName": "FargateProfile",
        "ResourceTypeIdentifier": "AWS::EKS::FargateProfile",
        "ServiceTypeIdentifier": "AWS::EKS"
    },
    {
        "ServiceHumanReadableName": "Amazon Elastic Kubernetes Service",
        "ServiceProvider": "AWS",
        "ServiceName": "EKS",
        "DataTypeName": "IdentityProviderConfig",
        "ResourceTypeIdentifier": "AWS::EKS::IdentityProviderConfig",
        "ServiceTypeIdentifier": "AWS::EKS"
    },
    {
        "ServiceHumanReadableName": "Amazon Elastic Kubernetes Service",
        "ServiceProvider": "AWS",
        "ServiceName": "EKS",
        "DataTypeName": "Nodegroup",
        "ResourceTypeIdentifier": "AWS::EKS::Nodegroup",
        "ServiceTypeIdentifier": "AWS::EKS"
    },
    {
        "ServiceHumanReadableName": "Amazon Elastic Kubernetes Service",
        "ServiceProvider": "AWS",
        "ServiceName": "EKS",
        "DataTypeName": "PodIdentityAssociation",
        "ResourceTypeIdentifier": "AWS::EKS::PodIdentityAssociation",
        "ServiceTypeIdentifier": "AWS::EKS"
    },
    {
        "ServiceHumanReadableName": "AWS Elastic Beanstalk",
        "ServiceProvider": "AWS",
        "ServiceName": "ElasticBeanstalk",
        "DataTypeName": "Application",
        "ResourceTypeIdentifier": "AWS::ElasticBeanstalk::Application",
        "ServiceTypeIdentifier": "AWS::ElasticBeanstalk"
    },
    {
        "ServiceHumanReadableName": "AWS Elastic Beanstalk",
        "ServiceProvider": "AWS",
        "ServiceName": "ElasticBeanstalk",
        "DataTypeName": "ApplicationVersion",
        "ResourceTypeIdentifier": "AWS::ElasticBeanstalk::ApplicationVersion",
        "ServiceTypeIdentifier": "AWS::ElasticBeanstalk"
    },
    {
        "ServiceHumanReadableName": "AWS Elastic Beanstalk",
        "ServiceProvider": "AWS",
        "ServiceName": "ElasticBeanstalk",
        "DataTypeName": "ConfigurationTemplate",
        "ResourceTypeIdentifier": "AWS::ElasticBeanstalk::ConfigurationTemplate",
        "ServiceTypeIdentifier": "AWS::ElasticBeanstalk"
    },
    {
        "ServiceHumanReadableName": "AWS Elastic Beanstalk",
        "ServiceProvider": "AWS",
        "ServiceName": "ElasticBeanstalk",
        "DataTypeName": "Environment",
        "ResourceTypeIdentifier": "AWS::ElasticBeanstalk::Environment",
        "ServiceTypeIdentifier": "AWS::ElasticBeanstalk"
    },
    {
        "ServiceHumanReadableName": "Elastic Load Balancing",
        "ServiceProvider": "AWS",
        "ServiceName": "ElasticLoadBalancing",
        "DataTypeName": "LoadBalancer",
        "ResourceTypeIdentifier": "AWS::ElasticLoadBalancing::LoadBalancer",
        "ServiceTypeIdentifier": "AWS::ElasticLoadBalancing"
    },
    {
        "ServiceHumanReadableName": "Elastic Load Balancing V2",
        "ServiceProvider": "AWS",
        "ServiceName": "ElasticLoadBalancingV2",
        "DataTypeName": "Listener",
        "ResourceTypeIdentifier": "AWS::ElasticLoadBalancingV2::Listener",
        "ServiceTypeIdentifier": "AWS::ElasticLoadBalancingV2"
    },
    {
        "ServiceHumanReadableName": "Elastic Load Balancing V2",
        "ServiceProvider": "AWS",
        "ServiceName": "ElasticLoadBalancingV2",
        "DataTypeName": "ListenerCertificate",
        "ResourceTypeIdentifier": "AWS::ElasticLoadBalancingV2::ListenerCertificate",
        "ServiceTypeIdentifier": "AWS::ElasticLoadBalancingV2"
    },
    {
        "ServiceHumanReadableName": "Elastic Load Balancing V2",
        "ServiceProvider": "AWS",
        "ServiceName": "ElasticLoadBalancingV2",
        "DataTypeName": "ListenerRule",
        "ResourceTypeIdentifier": "AWS::ElasticLoadBalancingV2::ListenerRule",
        "ServiceTypeIdentifier": "AWS::ElasticLoadBalancingV2"
    },
    {
        "ServiceHumanReadableName": "Elastic Load Balancing V2",
        "ServiceProvider": "AWS",
        "ServiceName": "ElasticLoadBalancingV2",
        "DataTypeName": "LoadBalancer",
        "ResourceTypeIdentifier": "AWS::ElasticLoadBalancingV2::LoadBalancer",
        "ServiceTypeIdentifier": "AWS::ElasticLoadBalancingV2"
    },
    {
        "ServiceHumanReadableName": "Elastic Load Balancing V2",
        "ServiceProvider": "AWS",
        "ServiceName": "ElasticLoadBalancingV2",
        "DataTypeName": "TargetGroup",
        "ResourceTypeIdentifier": "AWS::ElasticLoadBalancingV2::TargetGroup",
        "ServiceTypeIdentifier": "AWS::ElasticLoadBalancingV2"
    },
    {
        "ServiceHumanReadableName": "Elastic Load Balancing V2",
        "ServiceProvider": "AWS",
        "ServiceName": "ElasticLoadBalancingV2",
        "DataTypeName": "TrustStore",
        "ResourceTypeIdentifier": "AWS::ElasticLoadBalancingV2::TrustStore",
        "ServiceTypeIdentifier": "AWS::ElasticLoadBalancingV2"
    },
    {
        "ServiceHumanReadableName": "Elastic Load Balancing V2",
        "ServiceProvider": "AWS",
        "ServiceName": "ElasticLoadBalancingV2",
        "DataTypeName": "TrustStoreRevocation",
        "ResourceTypeIdentifier": "AWS::ElasticLoadBalancingV2::TrustStoreRevocation",
        "ServiceTypeIdentifier": "AWS::ElasticLoadBalancingV2"
    },
    {
        "ServiceHumanReadableName": "Amazon EMR",
        "ServiceProvider": "AWS",
        "ServiceName": "EMR",
        "DataTypeName": "Cluster",
        "ResourceTypeIdentifier": "AWS::EMR::Cluster",
        "ServiceTypeIdentifier": "AWS::EMR"
    },
    {
        "ServiceHumanReadableName": "Amazon EMR",
        "ServiceProvider": "AWS",
        "ServiceName": "EMR",
        "DataTypeName": "InstanceFleetConfig",
        "ResourceTypeIdentifier": "AWS::EMR::InstanceFleetConfig",
        "ServiceTypeIdentifier": "AWS::EMR"
    },
    {
        "ServiceHumanReadableName": "Amazon EMR",
        "ServiceProvider": "AWS",
        "ServiceName": "EMR",
        "DataTypeName": "InstanceGroupConfig",
        "ResourceTypeIdentifier": "AWS::EMR::InstanceGroupConfig",
        "ServiceTypeIdentifier": "AWS::EMR"
    },
    {
        "ServiceHumanReadableName": "Amazon EMR",
        "ServiceProvider": "AWS",
        "ServiceName": "EMR",
        "DataTypeName": "SecurityConfiguration",
        "ResourceTypeIdentifier": "AWS::EMR::SecurityConfiguration",
        "ServiceTypeIdentifier": "AWS::EMR"
    },
    {
        "ServiceHumanReadableName": "Amazon EMR",
        "ServiceProvider": "AWS",
        "ServiceName": "EMR",
        "DataTypeName": "Step",
        "ResourceTypeIdentifier": "AWS::EMR::Step",
        "ServiceTypeIdentifier": "AWS::EMR"
    },
    {
        "ServiceHumanReadableName": "Amazon EMR",
        "ServiceProvider": "AWS",
        "ServiceName": "EMR",
        "DataTypeName": "Studio",
        "ResourceTypeIdentifier": "AWS::EMR::Studio",
        "ServiceTypeIdentifier": "AWS::EMR"
    },
    {
        "ServiceHumanReadableName": "Amazon EMR",
        "ServiceProvider": "AWS",
        "ServiceName": "EMR",
        "DataTypeName": "StudioSessionMapping",
        "ResourceTypeIdentifier": "AWS::EMR::StudioSessionMapping",
        "ServiceTypeIdentifier": "AWS::EMR"
    },
    {
        "ServiceHumanReadableName": "Amazon EMR",
        "ServiceProvider": "AWS",
        "ServiceName": "EMR",
        "DataTypeName": "WALWorkspace",
        "ResourceTypeIdentifier": "AWS::EMR::WALWorkspace",
        "ServiceTypeIdentifier": "AWS::EMR"
    },
    {
        "ServiceHumanReadableName": "Amazon EMR Serverless",
        "ServiceProvider": "AWS",
        "ServiceName": "EMRServerless",
        "DataTypeName": "Application",
        "ResourceTypeIdentifier": "AWS::EMRServerless::Application",
        "ServiceTypeIdentifier": "AWS::EMRServerless"
    },
    {
        "ServiceHumanReadableName": "Amazon EMR on EKS",
        "ServiceProvider": "AWS",
        "ServiceName": "EMRContainers",
        "DataTypeName": "VirtualCluster",
        "ResourceTypeIdentifier": "AWS::EMRContainers::VirtualCluster",
        "ServiceTypeIdentifier": "AWS::EMRContainers"
    },
    {
        "ServiceHumanReadableName": "Amazon ElastiCache",
        "ServiceProvider": "AWS",
        "ServiceName": "ElastiCache",
        "DataTypeName": "CacheCluster",
        "ResourceTypeIdentifier": "AWS::ElastiCache::CacheCluster",
        "ServiceTypeIdentifier": "AWS::ElastiCache"
    },
    {
        "ServiceHumanReadableName": "Amazon ElastiCache",
        "ServiceProvider": "AWS",
        "ServiceName": "ElastiCache",
        "DataTypeName": "GlobalReplicationGroup",
        "ResourceTypeIdentifier": "AWS::ElastiCache::GlobalReplicationGroup",
        "ServiceTypeIdentifier": "AWS::ElastiCache"
    },
    {
        "ServiceHumanReadableName": "Amazon ElastiCache",
        "ServiceProvider": "AWS",
        "ServiceName": "ElastiCache",
        "DataTypeName": "ParameterGroup",
        "ResourceTypeIdentifier": "AWS::ElastiCache::ParameterGroup",
        "ServiceTypeIdentifier": "AWS::ElastiCache"
    },
    {
        "ServiceHumanReadableName": "Amazon ElastiCache",
        "ServiceProvider": "AWS",
        "ServiceName": "ElastiCache",
        "DataTypeName": "ReplicationGroup",
        "ResourceTypeIdentifier": "AWS::ElastiCache::ReplicationGroup",
        "ServiceTypeIdentifier": "AWS::ElastiCache"
    },
    {
        "ServiceHumanReadableName": "Amazon ElastiCache",
        "ServiceProvider": "AWS",
        "ServiceName": "ElastiCache",
        "DataTypeName": "SecurityGroup",
        "ResourceTypeIdentifier": "AWS::ElastiCache::SecurityGroup",
        "ServiceTypeIdentifier": "AWS::ElastiCache"
    },
    {
        "ServiceHumanReadableName": "Amazon ElastiCache",
        "ServiceProvider": "AWS",
        "ServiceName": "ElastiCache",
        "DataTypeName": "SecurityGroupIngress",
        "ResourceTypeIdentifier": "AWS::ElastiCache::SecurityGroupIngress",
        "ServiceTypeIdentifier": "AWS::ElastiCache"
    },
    {
        "ServiceHumanReadableName": "Amazon ElastiCache",
        "ServiceProvider": "AWS",
        "ServiceName": "ElastiCache",
        "DataTypeName": "ServerlessCache",
        "ResourceTypeIdentifier": "AWS::ElastiCache::ServerlessCache",
        "ServiceTypeIdentifier": "AWS::ElastiCache"
    },
    {
        "ServiceHumanReadableName": "Amazon ElastiCache",
        "ServiceProvider": "AWS",
        "ServiceName": "ElastiCache",
        "DataTypeName": "SubnetGroup",
        "ResourceTypeIdentifier": "AWS::ElastiCache::SubnetGroup",
        "ServiceTypeIdentifier": "AWS::ElastiCache"
    },
    {
        "ServiceHumanReadableName": "Amazon ElastiCache",
        "ServiceProvider": "AWS",
        "ServiceName": "ElastiCache",
        "DataTypeName": "User",
        "ResourceTypeIdentifier": "AWS::ElastiCache::User",
        "ServiceTypeIdentifier": "AWS::ElastiCache"
    },
    {
        "ServiceHumanReadableName": "Amazon ElastiCache",
        "ServiceProvider": "AWS",
        "ServiceName": "ElastiCache",
        "DataTypeName": "UserGroup",
        "ResourceTypeIdentifier": "AWS::ElastiCache::UserGroup",
        "ServiceTypeIdentifier": "AWS::ElastiCache"
    },
    {
        "ServiceHumanReadableName": "AWS Entity Resolution",
        "ServiceProvider": "AWS",
        "ServiceName": "EntityResolution",
        "DataTypeName": "IdMappingWorkflow",
        "ResourceTypeIdentifier": "AWS::EntityResolution::IdMappingWorkflow",
        "ServiceTypeIdentifier": "AWS::EntityResolution"
    },
    {
        "ServiceHumanReadableName": "AWS Entity Resolution",
        "ServiceProvider": "AWS",
        "ServiceName": "EntityResolution",
        "DataTypeName": "IdNamespace",
        "ResourceTypeIdentifier": "AWS::EntityResolution::IdNamespace",
        "ServiceTypeIdentifier": "AWS::EntityResolution"
    },
    {
        "ServiceHumanReadableName": "AWS Entity Resolution",
        "ServiceProvider": "AWS",
        "ServiceName": "EntityResolution",
        "DataTypeName": "MatchingWorkflow",
        "ResourceTypeIdentifier": "AWS::EntityResolution::MatchingWorkflow",
        "ServiceTypeIdentifier": "AWS::EntityResolution"
    },
    {
        "ServiceHumanReadableName": "AWS Entity Resolution",
        "ServiceProvider": "AWS",
        "ServiceName": "EntityResolution",
        "DataTypeName": "PolicyStatement",
        "ResourceTypeIdentifier": "AWS::EntityResolution::PolicyStatement",
        "ServiceTypeIdentifier": "AWS::EntityResolution"
    },
    {
        "ServiceHumanReadableName": "AWS Entity Resolution",
        "ServiceProvider": "AWS",
        "ServiceName": "EntityResolution",
        "DataTypeName": "SchemaMapping",
        "ResourceTypeIdentifier": "AWS::EntityResolution::SchemaMapping",
        "ServiceTypeIdentifier": "AWS::EntityResolution"
    },
    {
        "ServiceHumanReadableName": "Amazon EventBridge",
        "ServiceProvider": "AWS",
        "ServiceName": "Events",
        "DataTypeName": "ApiDestination",
        "ResourceTypeIdentifier": "AWS::Events::ApiDestination",
        "ServiceTypeIdentifier": "AWS::Events"
    },
    {
        "ServiceHumanReadableName": "Amazon EventBridge",
        "ServiceProvider": "AWS",
        "ServiceName": "Events",
        "DataTypeName": "Archive",
        "ResourceTypeIdentifier": "AWS::Events::Archive",
        "ServiceTypeIdentifier": "AWS::Events"
    },
    {
        "ServiceHumanReadableName": "Amazon EventBridge",
        "ServiceProvider": "AWS",
        "ServiceName": "Events",
        "DataTypeName": "Connection",
        "ResourceTypeIdentifier": "AWS::Events::Connection",
        "ServiceTypeIdentifier": "AWS::Events"
    },
    {
        "ServiceHumanReadableName": "Amazon EventBridge",
        "ServiceProvider": "AWS",
        "ServiceName": "Events",
        "DataTypeName": "Endpoint",
        "ResourceTypeIdentifier": "AWS::Events::Endpoint",
        "ServiceTypeIdentifier": "AWS::Events"
    },
    {
        "ServiceHumanReadableName": "Amazon EventBridge",
        "ServiceProvider": "AWS",
        "ServiceName": "Events",
        "DataTypeName": "EventBus",
        "ResourceTypeIdentifier": "AWS::Events::EventBus",
        "ServiceTypeIdentifier": "AWS::Events"
    },
    {
        "ServiceHumanReadableName": "Amazon EventBridge",
        "ServiceProvider": "AWS",
        "ServiceName": "Events",
        "DataTypeName": "EventBusPolicy",
        "ResourceTypeIdentifier": "AWS::Events::EventBusPolicy",
        "ServiceTypeIdentifier": "AWS::Events"
    },
    {
        "ServiceHumanReadableName": "Amazon EventBridge",
        "ServiceProvider": "AWS",
        "ServiceName": "Events",
        "DataTypeName": "Rule",
        "ResourceTypeIdentifier": "AWS::Events::Rule",
        "ServiceTypeIdentifier": "AWS::Events"
    },
    {
        "ServiceHumanReadableName": "Amazon EventBridge Pipes",
        "ServiceProvider": "AWS",
        "ServiceName": "Pipes",
        "DataTypeName": "Pipe",
        "ResourceTypeIdentifier": "AWS::Pipes::Pipe",
        "ServiceTypeIdentifier": "AWS::Pipes"
    },
    {
        "ServiceHumanReadableName": "Amazon EventBridge Scheduler",
        "ServiceProvider": "AWS",
        "ServiceName": "Scheduler",
        "DataTypeName": "Schedule",
        "ResourceTypeIdentifier": "AWS::Scheduler::Schedule",
        "ServiceTypeIdentifier": "AWS::Scheduler"
    },
    {
        "ServiceHumanReadableName": "Amazon EventBridge Scheduler",
        "ServiceProvider": "AWS",
        "ServiceName": "Scheduler",
        "DataTypeName": "ScheduleGroup",
        "ResourceTypeIdentifier": "AWS::Scheduler::ScheduleGroup",
        "ServiceTypeIdentifier": "AWS::Scheduler"
    },
    {
        "ServiceHumanReadableName": "Amazon EventBridge Schemas",
        "ServiceProvider": "AWS",
        "ServiceName": "EventSchemas",
        "DataTypeName": "Discoverer",
        "ResourceTypeIdentifier": "AWS::EventSchemas::Discoverer",
        "ServiceTypeIdentifier": "AWS::EventSchemas"
    },
    {
        "ServiceHumanReadableName": "Amazon EventBridge Schemas",
        "ServiceProvider": "AWS",
        "ServiceName": "EventSchemas",
        "DataTypeName": "Registry",
        "ResourceTypeIdentifier": "AWS::EventSchemas::Registry",
        "ServiceTypeIdentifier": "AWS::EventSchemas"
    },
    {
        "ServiceHumanReadableName": "Amazon EventBridge Schemas",
        "ServiceProvider": "AWS",
        "ServiceName": "EventSchemas",
        "DataTypeName": "RegistryPolicy",
        "ResourceTypeIdentifier": "AWS::EventSchemas::RegistryPolicy",
        "ServiceTypeIdentifier": "AWS::EventSchemas"
    },
    {
        "ServiceHumanReadableName": "Amazon EventBridge Schemas",
        "ServiceProvider": "AWS",
        "ServiceName": "EventSchemas",
        "DataTypeName": "Schema",
        "ResourceTypeIdentifier": "AWS::EventSchemas::Schema",
        "ServiceTypeIdentifier": "AWS::EventSchemas"
    },
    {
        "ServiceHumanReadableName": "Amazon FinSpace schemas",
        "ServiceProvider": "AWS",
        "ServiceName": "FinSpace",
        "DataTypeName": "Environment",
        "ResourceTypeIdentifier": "AWS::FinSpace::Environment",
        "ServiceTypeIdentifier": "AWS::FinSpace"
    },
    {
        "ServiceHumanReadableName": "AWS Fault Injection Service",
        "ServiceProvider": "AWS",
        "ServiceName": "FIS",
        "DataTypeName": "ExperimentTemplate",
        "ResourceTypeIdentifier": "AWS::FIS::ExperimentTemplate",
        "ServiceTypeIdentifier": "AWS::FIS"
    },
    {
        "ServiceHumanReadableName": "AWS Fault Injection Service",
        "ServiceProvider": "AWS",
        "ServiceName": "FIS",
        "DataTypeName": "TargetAccountConfiguration",
        "ResourceTypeIdentifier": "AWS::FIS::TargetAccountConfiguration",
        "ServiceTypeIdentifier": "AWS::FIS"
    },
    {
        "ServiceHumanReadableName": "AWS Firewall Manager",
        "ServiceProvider": "AWS",
        "ServiceName": "FMS",
        "DataTypeName": "NotificationChannel",
        "ResourceTypeIdentifier": "AWS::FMS::NotificationChannel",
        "ServiceTypeIdentifier": "AWS::FMS"
    },
    {
        "ServiceHumanReadableName": "AWS Firewall Manager",
        "ServiceProvider": "AWS",
        "ServiceName": "FMS",
        "DataTypeName": "Policy",
        "ResourceTypeIdentifier": "AWS::FMS::Policy",
        "ServiceTypeIdentifier": "AWS::FMS"
    },
    {
        "ServiceHumanReadableName": "AWS Firewall Manager",
        "ServiceProvider": "AWS",
        "ServiceName": "FMS",
        "DataTypeName": "ResourceSet",
        "ResourceTypeIdentifier": "AWS::FMS::ResourceSet",
        "ServiceTypeIdentifier": "AWS::FMS"
    },
    {
        "ServiceHumanReadableName": "Amazon Forecast",
        "ServiceProvider": "AWS",
        "ServiceName": "Forecast",
        "DataTypeName": "Dataset",
        "ResourceTypeIdentifier": "AWS::Forecast::Dataset",
        "ServiceTypeIdentifier": "AWS::Forecast"
    },
    {
        "ServiceHumanReadableName": "Amazon Forecast",
        "ServiceProvider": "AWS",
        "ServiceName": "Forecast",
        "DataTypeName": "DatasetGroup",
        "ResourceTypeIdentifier": "AWS::Forecast::DatasetGroup",
        "ServiceTypeIdentifier": "AWS::Forecast"
    },
    {
        "ServiceHumanReadableName": "Amazon Fraud Detector",
        "ServiceProvider": "AWS",
        "ServiceName": "FraudDetector",
        "DataTypeName": "Detector",
        "ResourceTypeIdentifier": "AWS::FraudDetector::Detector",
        "ServiceTypeIdentifier": "AWS::FraudDetector"
    },
    {
        "ServiceHumanReadableName": "Amazon Fraud Detector",
        "ServiceProvider": "AWS",
        "ServiceName": "FraudDetector",
        "DataTypeName": "EntityType",
        "ResourceTypeIdentifier": "AWS::FraudDetector::EntityType",
        "ServiceTypeIdentifier": "AWS::FraudDetector"
    },
    {
        "ServiceHumanReadableName": "Amazon Fraud Detector",
        "ServiceProvider": "AWS",
        "ServiceName": "FraudDetector",
        "DataTypeName": "EventType",
        "ResourceTypeIdentifier": "AWS::FraudDetector::EventType",
        "ServiceTypeIdentifier": "AWS::FraudDetector"
    },
    {
        "ServiceHumanReadableName": "Amazon Fraud Detector",
        "ServiceProvider": "AWS",
        "ServiceName": "FraudDetector",
        "DataTypeName": "Label",
        "ResourceTypeIdentifier": "AWS::FraudDetector::Label",
        "ServiceTypeIdentifier": "AWS::FraudDetector"
    },
    {
        "ServiceHumanReadableName": "Amazon Fraud Detector",
        "ServiceProvider": "AWS",
        "ServiceName": "FraudDetector",
        "DataTypeName": "List",
        "ResourceTypeIdentifier": "AWS::FraudDetector::List",
        "ServiceTypeIdentifier": "AWS::FraudDetector"
    },
    {
        "ServiceHumanReadableName": "Amazon Fraud Detector",
        "ServiceProvider": "AWS",
        "ServiceName": "FraudDetector",
        "DataTypeName": "Outcome",
        "ResourceTypeIdentifier": "AWS::FraudDetector::Outcome",
        "ServiceTypeIdentifier": "AWS::FraudDetector"
    },
    {
        "ServiceHumanReadableName": "Amazon Fraud Detector",
        "ServiceProvider": "AWS",
        "ServiceName": "FraudDetector",
        "DataTypeName": "Variable",
        "ResourceTypeIdentifier": "AWS::FraudDetector::Variable",
        "ServiceTypeIdentifier": "AWS::FraudDetector"
    },
    {
        "ServiceHumanReadableName": "Amazon FSx",
        "ServiceProvider": "AWS",
        "ServiceName": "FSx",
        "DataTypeName": "DataRepositoryAssociation",
        "ResourceTypeIdentifier": "AWS::FSx::DataRepositoryAssociation",
        "ServiceTypeIdentifier": "AWS::FSx"
    },
    {
        "ServiceHumanReadableName": "Amazon FSx",
        "ServiceProvider": "AWS",
        "ServiceName": "FSx",
        "DataTypeName": "FileSystem",
        "ResourceTypeIdentifier": "AWS::FSx::FileSystem",
        "ServiceTypeIdentifier": "AWS::FSx"
    },
    {
        "ServiceHumanReadableName": "Amazon FSx",
        "ServiceProvider": "AWS",
        "ServiceName": "FSx",
        "DataTypeName": "Snapshot",
        "ResourceTypeIdentifier": "AWS::FSx::Snapshot",
        "ServiceTypeIdentifier": "AWS::FSx"
    },
    {
        "ServiceHumanReadableName": "Amazon FSx",
        "ServiceProvider": "AWS",
        "ServiceName": "FSx",
        "DataTypeName": "StorageVirtualMachine",
        "ResourceTypeIdentifier": "AWS::FSx::StorageVirtualMachine",
        "ServiceTypeIdentifier": "AWS::FSx"
    },
    {
        "ServiceHumanReadableName": "Amazon FSx",
        "ServiceProvider": "AWS",
        "ServiceName": "FSx",
        "DataTypeName": "Volume",
        "ResourceTypeIdentifier": "AWS::FSx::Volume",
        "ServiceTypeIdentifier": "AWS::FSx"
    },
    {
        "ServiceHumanReadableName": "Amazon GameLift",
        "ServiceProvider": "AWS",
        "ServiceName": "GameLift",
        "DataTypeName": "Alias",
        "ResourceTypeIdentifier": "AWS::GameLift::Alias",
        "ServiceTypeIdentifier": "AWS::GameLift"
    },
    {
        "ServiceHumanReadableName": "Amazon GameLift",
        "ServiceProvider": "AWS",
        "ServiceName": "GameLift",
        "DataTypeName": "Build",
        "ResourceTypeIdentifier": "AWS::GameLift::Build",
        "ServiceTypeIdentifier": "AWS::GameLift"
    },
    {
        "ServiceHumanReadableName": "Amazon GameLift",
        "ServiceProvider": "AWS",
        "ServiceName": "GameLift",
        "DataTypeName": "ContainerGroupDefinition",
        "ResourceTypeIdentifier": "AWS::GameLift::ContainerGroupDefinition",
        "ServiceTypeIdentifier": "AWS::GameLift"
    },
    {
        "ServiceHumanReadableName": "Amazon GameLift",
        "ServiceProvider": "AWS",
        "ServiceName": "GameLift",
        "DataTypeName": "Fleet",
        "ResourceTypeIdentifier": "AWS::GameLift::Fleet",
        "ServiceTypeIdentifier": "AWS::GameLift"
    },
    {
        "ServiceHumanReadableName": "Amazon GameLift",
        "ServiceProvider": "AWS",
        "ServiceName": "GameLift",
        "DataTypeName": "GameServerGroup",
        "ResourceTypeIdentifier": "AWS::GameLift::GameServerGroup",
        "ServiceTypeIdentifier": "AWS::GameLift"
    },
    {
        "ServiceHumanReadableName": "Amazon GameLift",
        "ServiceProvider": "AWS",
        "ServiceName": "GameLift",
        "DataTypeName": "GameSessionQueue",
        "ResourceTypeIdentifier": "AWS::GameLift::GameSessionQueue",
        "ServiceTypeIdentifier": "AWS::GameLift"
    },
    {
        "ServiceHumanReadableName": "Amazon GameLift",
        "ServiceProvider": "AWS",
        "ServiceName": "GameLift",
        "DataTypeName": "Location",
        "ResourceTypeIdentifier": "AWS::GameLift::Location",
        "ServiceTypeIdentifier": "AWS::GameLift"
    },
    {
        "ServiceHumanReadableName": "Amazon GameLift",
        "ServiceProvider": "AWS",
        "ServiceName": "GameLift",
        "DataTypeName": "MatchmakingConfiguration",
        "ResourceTypeIdentifier": "AWS::GameLift::MatchmakingConfiguration",
        "ServiceTypeIdentifier": "AWS::GameLift"
    },
    {
        "ServiceHumanReadableName": "Amazon GameLift",
        "ServiceProvider": "AWS",
        "ServiceName": "GameLift",
        "DataTypeName": "MatchmakingRuleSet",
        "ResourceTypeIdentifier": "AWS::GameLift::MatchmakingRuleSet",
        "ServiceTypeIdentifier": "AWS::GameLift"
    },
    {
        "ServiceHumanReadableName": "Amazon GameLift",
        "ServiceProvider": "AWS",
        "ServiceName": "GameLift",
        "DataTypeName": "Script",
        "ResourceTypeIdentifier": "AWS::GameLift::Script",
        "ServiceTypeIdentifier": "AWS::GameLift"
    },
    {
        "ServiceHumanReadableName": "AWS Global Accelerator",
        "ServiceProvider": "AWS",
        "ServiceName": "GlobalAccelerator",
        "DataTypeName": "Accelerator",
        "ResourceTypeIdentifier": "AWS::GlobalAccelerator::Accelerator",
        "ServiceTypeIdentifier": "AWS::GlobalAccelerator"
    },
    {
        "ServiceHumanReadableName": "AWS Global Accelerator",
        "ServiceProvider": "AWS",
        "ServiceName": "GlobalAccelerator",
        "DataTypeName": "CrossAccountAttachment",
        "ResourceTypeIdentifier": "AWS::GlobalAccelerator::CrossAccountAttachment",
        "ServiceTypeIdentifier": "AWS::GlobalAccelerator"
    },
    {
        "ServiceHumanReadableName": "AWS Global Accelerator",
        "ServiceProvider": "AWS",
        "ServiceName": "GlobalAccelerator",
        "DataTypeName": "EndpointGroup",
        "ResourceTypeIdentifier": "AWS::GlobalAccelerator::EndpointGroup",
        "ServiceTypeIdentifier": "AWS::GlobalAccelerator"
    },
    {
        "ServiceHumanReadableName": "AWS Global Accelerator",
        "ServiceProvider": "AWS",
        "ServiceName": "GlobalAccelerator",
        "DataTypeName": "Listener",
        "ResourceTypeIdentifier": "AWS::GlobalAccelerator::Listener",
        "ServiceTypeIdentifier": "AWS::GlobalAccelerator"
    },
    {
        "ServiceHumanReadableName": "AWS Glue",
        "ServiceProvider": "AWS",
        "ServiceName": "Glue",
        "DataTypeName": "Classifier",
        "ResourceTypeIdentifier": "AWS::Glue::Classifier",
        "ServiceTypeIdentifier": "AWS::Glue"
    },
    {
        "ServiceHumanReadableName": "AWS Glue",
        "ServiceProvider": "AWS",
        "ServiceName": "Glue",
        "DataTypeName": "Connection",
        "ResourceTypeIdentifier": "AWS::Glue::Connection",
        "ServiceTypeIdentifier": "AWS::Glue"
    },
    {
        "ServiceHumanReadableName": "AWS Glue",
        "ServiceProvider": "AWS",
        "ServiceName": "Glue",
        "DataTypeName": "Crawler",
        "ResourceTypeIdentifier": "AWS::Glue::Crawler",
        "ServiceTypeIdentifier": "AWS::Glue"
    },
    {
        "ServiceHumanReadableName": "AWS Glue",
        "ServiceProvider": "AWS",
        "ServiceName": "Glue",
        "DataTypeName": "CustomEntityType",
        "ResourceTypeIdentifier": "AWS::Glue::CustomEntityType",
        "ServiceTypeIdentifier": "AWS::Glue"
    },
    {
        "ServiceHumanReadableName": "AWS Glue",
        "ServiceProvider": "AWS",
        "ServiceName": "Glue",
        "DataTypeName": "Database",
        "ResourceTypeIdentifier": "AWS::Glue::Database",
        "ServiceTypeIdentifier": "AWS::Glue"
    },
    {
        "ServiceHumanReadableName": "AWS Glue",
        "ServiceProvider": "AWS",
        "ServiceName": "Glue",
        "DataTypeName": "DataCatalogEncryptionSettings",
        "ResourceTypeIdentifier": "AWS::Glue::DataCatalogEncryptionSettings",
        "ServiceTypeIdentifier": "AWS::Glue"
    },
    {
        "ServiceHumanReadableName": "AWS Glue",
        "ServiceProvider": "AWS",
        "ServiceName": "Glue",
        "DataTypeName": "DataQualityRuleset",
        "ResourceTypeIdentifier": "AWS::Glue::DataQualityRuleset",
        "ServiceTypeIdentifier": "AWS::Glue"
    },
    {
        "ServiceHumanReadableName": "AWS Glue",
        "ServiceProvider": "AWS",
        "ServiceName": "Glue",
        "DataTypeName": "DevEndpoint",
        "ResourceTypeIdentifier": "AWS::Glue::DevEndpoint",
        "ServiceTypeIdentifier": "AWS::Glue"
    },
    {
        "ServiceHumanReadableName": "AWS Glue",
        "ServiceProvider": "AWS",
        "ServiceName": "Glue",
        "DataTypeName": "Job",
        "ResourceTypeIdentifier": "AWS::Glue::Job",
        "ServiceTypeIdentifier": "AWS::Glue"
    },
    {
        "ServiceHumanReadableName": "AWS Glue",
        "ServiceProvider": "AWS",
        "ServiceName": "Glue",
        "DataTypeName": "MLTransform",
        "ResourceTypeIdentifier": "AWS::Glue::MLTransform",
        "ServiceTypeIdentifier": "AWS::Glue"
    },
    {
        "ServiceHumanReadableName": "AWS Glue",
        "ServiceProvider": "AWS",
        "ServiceName": "Glue",
        "DataTypeName": "Partition",
        "ResourceTypeIdentifier": "AWS::Glue::Partition",
        "ServiceTypeIdentifier": "AWS::Glue"
    },
    {
        "ServiceHumanReadableName": "AWS Glue",
        "ServiceProvider": "AWS",
        "ServiceName": "Glue",
        "DataTypeName": "Registry",
        "ResourceTypeIdentifier": "AWS::Glue::Registry",
        "ServiceTypeIdentifier": "AWS::Glue"
    },
    {
        "ServiceHumanReadableName": "AWS Glue",
        "ServiceProvider": "AWS",
        "ServiceName": "Glue",
        "DataTypeName": "Schema",
        "ResourceTypeIdentifier": "AWS::Glue::Schema",
        "ServiceTypeIdentifier": "AWS::Glue"
    },
    {
        "ServiceHumanReadableName": "AWS Glue",
        "ServiceProvider": "AWS",
        "ServiceName": "Glue",
        "DataTypeName": "SchemaVersion",
        "ResourceTypeIdentifier": "AWS::Glue::SchemaVersion",
        "ServiceTypeIdentifier": "AWS::Glue"
    },
    {
        "ServiceHumanReadableName": "AWS Glue",
        "ServiceProvider": "AWS",
        "ServiceName": "Glue",
        "DataTypeName": "SchemaVersionMetadata",
        "ResourceTypeIdentifier": "AWS::Glue::SchemaVersionMetadata",
        "ServiceTypeIdentifier": "AWS::Glue"
    },
    {
        "ServiceHumanReadableName": "AWS Glue",
        "ServiceProvider": "AWS",
        "ServiceName": "Glue",
        "DataTypeName": "SecurityConfiguration",
        "ResourceTypeIdentifier": "AWS::Glue::SecurityConfiguration",
        "ServiceTypeIdentifier": "AWS::Glue"
    },
    {
        "ServiceHumanReadableName": "AWS Glue",
        "ServiceProvider": "AWS",
        "ServiceName": "Glue",
        "DataTypeName": "Table",
        "ResourceTypeIdentifier": "AWS::Glue::Table",
        "ServiceTypeIdentifier": "AWS::Glue"
    },
    {
        "ServiceHumanReadableName": "AWS Glue",
        "ServiceProvider": "AWS",
        "ServiceName": "Glue",
        "DataTypeName": "TableOptimizer",
        "ResourceTypeIdentifier": "AWS::Glue::TableOptimizer",
        "ServiceTypeIdentifier": "AWS::Glue"
    },
    {
        "ServiceHumanReadableName": "AWS Glue",
        "ServiceProvider": "AWS",
        "ServiceName": "Glue",
        "DataTypeName": "Trigger",
        "ResourceTypeIdentifier": "AWS::Glue::Trigger",
        "ServiceTypeIdentifier": "AWS::Glue"
    },
    {
        "ServiceHumanReadableName": "AWS Glue",
        "ServiceProvider": "AWS",
        "ServiceName": "Glue",
        "DataTypeName": "UsageProfile",
        "ResourceTypeIdentifier": "AWS::Glue::UsageProfile",
        "ServiceTypeIdentifier": "AWS::Glue"
    },
    {
        "ServiceHumanReadableName": "AWS Glue",
        "ServiceProvider": "AWS",
        "ServiceName": "Glue",
        "DataTypeName": "Workflow",
        "ResourceTypeIdentifier": "AWS::Glue::Workflow",
        "ServiceTypeIdentifier": "AWS::Glue"
    },
    {
        "ServiceHumanReadableName": "AWS Glue DataBrew",
        "ServiceProvider": "AWS",
        "ServiceName": "DataBrew",
        "DataTypeName": "Dataset",
        "ResourceTypeIdentifier": "AWS::DataBrew::Dataset",
        "ServiceTypeIdentifier": "AWS::DataBrew"
    },
    {
        "ServiceHumanReadableName": "AWS Glue DataBrew",
        "ServiceProvider": "AWS",
        "ServiceName": "DataBrew",
        "DataTypeName": "Job",
        "ResourceTypeIdentifier": "AWS::DataBrew::Job",
        "ServiceTypeIdentifier": "AWS::DataBrew"
    },
    {
        "ServiceHumanReadableName": "AWS Glue DataBrew",
        "ServiceProvider": "AWS",
        "ServiceName": "DataBrew",
        "DataTypeName": "Project",
        "ResourceTypeIdentifier": "AWS::DataBrew::Project",
        "ServiceTypeIdentifier": "AWS::DataBrew"
    },
    {
        "ServiceHumanReadableName": "AWS Glue DataBrew",
        "ServiceProvider": "AWS",
        "ServiceName": "DataBrew",
        "DataTypeName": "Recipe",
        "ResourceTypeIdentifier": "AWS::DataBrew::Recipe",
        "ServiceTypeIdentifier": "AWS::DataBrew"
    },
    {
        "ServiceHumanReadableName": "AWS Glue DataBrew",
        "ServiceProvider": "AWS",
        "ServiceName": "DataBrew",
        "DataTypeName": "Ruleset",
        "ResourceTypeIdentifier": "AWS::DataBrew::Ruleset",
        "ServiceTypeIdentifier": "AWS::DataBrew"
    },
    {
        "ServiceHumanReadableName": "AWS Glue DataBrew",
        "ServiceProvider": "AWS",
        "ServiceName": "DataBrew",
        "DataTypeName": "Schedule",
        "ResourceTypeIdentifier": "AWS::DataBrew::Schedule",
        "ServiceTypeIdentifier": "AWS::DataBrew"
    },
    {
        "ServiceHumanReadableName": "Amazon Managed Grafana",
        "ServiceProvider": "AWS",
        "ServiceName": "Grafana",
        "DataTypeName": "Workspace",
        "ResourceTypeIdentifier": "AWS::Grafana::Workspace",
        "ServiceTypeIdentifier": "AWS::Grafana"
    },
    {
        "ServiceHumanReadableName": "AWS Ground Station",
        "ServiceProvider": "AWS",
        "ServiceName": "GroundStation",
        "DataTypeName": "Config",
        "ResourceTypeIdentifier": "AWS::GroundStation::Config",
        "ServiceTypeIdentifier": "AWS::GroundStation"
    },
    {
        "ServiceHumanReadableName": "AWS Ground Station",
        "ServiceProvider": "AWS",
        "ServiceName": "GroundStation",
        "DataTypeName": "DataflowEndpointGroup",
        "ResourceTypeIdentifier": "AWS::GroundStation::DataflowEndpointGroup",
        "ServiceTypeIdentifier": "AWS::GroundStation"
    },
    {
        "ServiceHumanReadableName": "AWS Ground Station",
        "ServiceProvider": "AWS",
        "ServiceName": "GroundStation",
        "DataTypeName": "MissionProfile",
        "ResourceTypeIdentifier": "AWS::GroundStation::MissionProfile",
        "ServiceTypeIdentifier": "AWS::GroundStation"
    },
    {
        "ServiceHumanReadableName": "Amazon GuardDuty",
        "ServiceProvider": "AWS",
        "ServiceName": "GuardDuty",
        "DataTypeName": "Detector",
        "ResourceTypeIdentifier": "AWS::GuardDuty::Detector",
        "ServiceTypeIdentifier": "AWS::GuardDuty"
    },
    {
        "ServiceHumanReadableName": "Amazon GuardDuty",
        "ServiceProvider": "AWS",
        "ServiceName": "GuardDuty",
        "DataTypeName": "Filter",
        "ResourceTypeIdentifier": "AWS::GuardDuty::Filter",
        "ServiceTypeIdentifier": "AWS::GuardDuty"
    },
    {
        "ServiceHumanReadableName": "Amazon GuardDuty",
        "ServiceProvider": "AWS",
        "ServiceName": "GuardDuty",
        "DataTypeName": "IPSet",
        "ResourceTypeIdentifier": "AWS::GuardDuty::IPSet",
        "ServiceTypeIdentifier": "AWS::GuardDuty"
    },
    {
        "ServiceHumanReadableName": "Amazon GuardDuty",
        "ServiceProvider": "AWS",
        "ServiceName": "GuardDuty",
        "DataTypeName": "MalwareProtectionPlan",
        "ResourceTypeIdentifier": "AWS::GuardDuty::MalwareProtectionPlan",
        "ServiceTypeIdentifier": "AWS::GuardDuty"
    },
    {
        "ServiceHumanReadableName": "Amazon GuardDuty",
        "ServiceProvider": "AWS",
        "ServiceName": "GuardDuty",
        "DataTypeName": "Master",
        "ResourceTypeIdentifier": "AWS::GuardDuty::Master",
        "ServiceTypeIdentifier": "AWS::GuardDuty"
    },
    {
        "ServiceHumanReadableName": "Amazon GuardDuty",
        "ServiceProvider": "AWS",
        "ServiceName": "GuardDuty",
        "DataTypeName": "Member",
        "ResourceTypeIdentifier": "AWS::GuardDuty::Member",
        "ServiceTypeIdentifier": "AWS::GuardDuty"
    },
    {
        "ServiceHumanReadableName": "Amazon GuardDuty",
        "ServiceProvider": "AWS",
        "ServiceName": "GuardDuty",
        "DataTypeName": "ThreatIntelSet",
        "ResourceTypeIdentifier": "AWS::GuardDuty::ThreatIntelSet",
        "ServiceTypeIdentifier": "AWS::GuardDuty"
    },
    {
        "ServiceHumanReadableName": "AWS HealthImaging",
        "ServiceProvider": "AWS",
        "ServiceName": "HealthImaging",
        "DataTypeName": "Datastore",
        "ResourceTypeIdentifier": "AWS::HealthImaging::Datastore",
        "ServiceTypeIdentifier": "AWS::HealthImaging"
    },
    {
        "ServiceHumanReadableName": "AWS HealthLake",
        "ServiceProvider": "AWS",
        "ServiceName": "HealthLake",
        "DataTypeName": "FHIRDatastore",
        "ResourceTypeIdentifier": "AWS::HealthLake::FHIRDatastore",
        "ServiceTypeIdentifier": "AWS::HealthLake"
    },
    {
        "ServiceHumanReadableName": "AWS Identity and Access Management",
        "ServiceProvider": "AWS",
        "ServiceName": "IAM",
        "DataTypeName": "AccessKey",
        "ResourceTypeIdentifier": "AWS::IAM::AccessKey",
        "ServiceTypeIdentifier": "AWS::IAM"
    },
    {
        "ServiceHumanReadableName": "AWS Identity and Access Management",
        "ServiceProvider": "AWS",
        "ServiceName": "IAM",
        "DataTypeName": "Group",
        "ResourceTypeIdentifier": "AWS::IAM::Group",
        "ServiceTypeIdentifier": "AWS::IAM"
    },
    {
        "ServiceHumanReadableName": "AWS Identity and Access Management",
        "ServiceProvider": "AWS",
        "ServiceName": "IAM",
        "DataTypeName": "GroupPolicy",
        "ResourceTypeIdentifier": "AWS::IAM::GroupPolicy",
        "ServiceTypeIdentifier": "AWS::IAM"
    },
    {
        "ServiceHumanReadableName": "AWS Identity and Access Management",
        "ServiceProvider": "AWS",
        "ServiceName": "IAM",
        "DataTypeName": "InstanceProfile",
        "ResourceTypeIdentifier": "AWS::IAM::InstanceProfile",
        "ServiceTypeIdentifier": "AWS::IAM"
    },
    {
        "ServiceHumanReadableName": "AWS Identity and Access Management",
        "ServiceProvider": "AWS",
        "ServiceName": "IAM",
        "DataTypeName": "ManagedPolicy",
        "ResourceTypeIdentifier": "AWS::IAM::ManagedPolicy",
        "ServiceTypeIdentifier": "AWS::IAM"
    },
    {
        "ServiceHumanReadableName": "AWS Identity and Access Management",
        "ServiceProvider": "AWS",
        "ServiceName": "IAM",
        "DataTypeName": "OIDCProvider",
        "ResourceTypeIdentifier": "AWS::IAM::OIDCProvider",
        "ServiceTypeIdentifier": "AWS::IAM"
    },
    {
        "ServiceHumanReadableName": "AWS Identity and Access Management",
        "ServiceProvider": "AWS",
        "ServiceName": "IAM",
        "DataTypeName": "Policy",
        "ResourceTypeIdentifier": "AWS::IAM::Policy",
        "ServiceTypeIdentifier": "AWS::IAM"
    },
    {
        "ServiceHumanReadableName": "AWS Identity and Access Management",
        "ServiceProvider": "AWS",
        "ServiceName": "IAM",
        "DataTypeName": "Role",
        "ResourceTypeIdentifier": "AWS::IAM::Role",
        "ServiceTypeIdentifier": "AWS::IAM"
    },
    {
        "ServiceHumanReadableName": "AWS Identity and Access Management",
        "ServiceProvider": "AWS",
        "ServiceName": "IAM",
        "DataTypeName": "RolePolicy",
        "ResourceTypeIdentifier": "AWS::IAM::RolePolicy",
        "ServiceTypeIdentifier": "AWS::IAM"
    },
    {
        "ServiceHumanReadableName": "AWS Identity and Access Management",
        "ServiceProvider": "AWS",
        "ServiceName": "IAM",
        "DataTypeName": "SAMLProvider",
        "ResourceTypeIdentifier": "AWS::IAM::SAMLProvider",
        "ServiceTypeIdentifier": "AWS::IAM"
    },
    {
        "ServiceHumanReadableName": "AWS Identity and Access Management",
        "ServiceProvider": "AWS",
        "ServiceName": "IAM",
        "DataTypeName": "ServerCertificate",
        "ResourceTypeIdentifier": "AWS::IAM::ServerCertificate",
        "ServiceTypeIdentifier": "AWS::IAM"
    },
    {
        "ServiceHumanReadableName": "AWS Identity and Access Management",
        "ServiceProvider": "AWS",
        "ServiceName": "IAM",
        "DataTypeName": "ServiceLinkedRole",
        "ResourceTypeIdentifier": "AWS::IAM::ServiceLinkedRole",
        "ServiceTypeIdentifier": "AWS::IAM"
    },
    {
        "ServiceHumanReadableName": "AWS Identity and Access Management",
        "ServiceProvider": "AWS",
        "ServiceName": "IAM",
        "DataTypeName": "User",
        "ResourceTypeIdentifier": "AWS::IAM::User",
        "ServiceTypeIdentifier": "AWS::IAM"
    },
    {
        "ServiceHumanReadableName": "AWS Identity and Access Management",
        "ServiceProvider": "AWS",
        "ServiceName": "IAM",
        "DataTypeName": "UserPolicy",
        "ResourceTypeIdentifier": "AWS::IAM::UserPolicy",
        "ServiceTypeIdentifier": "AWS::IAM"
    },
    {
        "ServiceHumanReadableName": "AWS Identity and Access Management",
        "ServiceProvider": "AWS",
        "ServiceName": "IAM",
        "DataTypeName": "UserToGroupAddition",
        "ResourceTypeIdentifier": "AWS::IAM::UserToGroupAddition",
        "ServiceTypeIdentifier": "AWS::IAM"
    },
    {
        "ServiceHumanReadableName": "AWS Identity and Access Management",
        "ServiceProvider": "AWS",
        "ServiceName": "IAM",
        "DataTypeName": "VirtualMFADevice",
        "ResourceTypeIdentifier": "AWS::IAM::VirtualMFADevice",
        "ServiceTypeIdentifier": "AWS::IAM"
    },
    {
        "ServiceHumanReadableName": "AWS IAM Identity Center",
        "ServiceProvider": "AWS",
        "ServiceName": "SSO",
        "DataTypeName": "Application",
        "ResourceTypeIdentifier": "AWS::SSO::Application",
        "ServiceTypeIdentifier": "AWS::SSO"
    },
    {
        "ServiceHumanReadableName": "AWS IAM Identity Center",
        "ServiceProvider": "AWS",
        "ServiceName": "SSO",
        "DataTypeName": "ApplicationAssignment",
        "ResourceTypeIdentifier": "AWS::SSO::ApplicationAssignment",
        "ServiceTypeIdentifier": "AWS::SSO"
    },
    {
        "ServiceHumanReadableName": "AWS IAM Identity Center",
        "ServiceProvider": "AWS",
        "ServiceName": "SSO",
        "DataTypeName": "Assignment",
        "ResourceTypeIdentifier": "AWS::SSO::Assignment",
        "ServiceTypeIdentifier": "AWS::SSO"
    },
    {
        "ServiceHumanReadableName": "AWS IAM Identity Center",
        "ServiceProvider": "AWS",
        "ServiceName": "SSO",
        "DataTypeName": "Instance",
        "ResourceTypeIdentifier": "AWS::SSO::Instance",
        "ServiceTypeIdentifier": "AWS::SSO"
    },
    {
        "ServiceHumanReadableName": "AWS IAM Identity Center",
        "ServiceProvider": "AWS",
        "ServiceName": "SSO",
        "DataTypeName": "InstanceAccessControlAttributeConfiguration",
        "ResourceTypeIdentifier": "AWS::SSO::InstanceAccessControlAttributeConfiguration",
        "ServiceTypeIdentifier": "AWS::SSO"
    },
    {
        "ServiceHumanReadableName": "AWS IAM Identity Center",
        "ServiceProvider": "AWS",
        "ServiceName": "SSO",
        "DataTypeName": "PermissionSet",
        "ResourceTypeIdentifier": "AWS::SSO::PermissionSet",
        "ServiceTypeIdentifier": "AWS::SSO"
    },
    {
        "ServiceHumanReadableName": "Identity Store",
        "ServiceProvider": "AWS",
        "ServiceName": "IdentityStore",
        "DataTypeName": "Group",
        "ResourceTypeIdentifier": "AWS::IdentityStore::Group",
        "ServiceTypeIdentifier": "AWS::IdentityStore"
    },
    {
        "ServiceHumanReadableName": "Identity Store",
        "ServiceProvider": "AWS",
        "ServiceName": "IdentityStore",
        "DataTypeName": "GroupMembership",
        "ResourceTypeIdentifier": "AWS::IdentityStore::GroupMembership",
        "ServiceTypeIdentifier": "AWS::IdentityStore"
    },
    {
        "ServiceHumanReadableName": "AWS Identity and Access Management Access Analyzer",
        "ServiceProvider": "AWS",
        "ServiceName": "AccessAnalyzer",
        "DataTypeName": "Analyzer",
        "ResourceTypeIdentifier": "AWS::AccessAnalyzer::Analyzer",
        "ServiceTypeIdentifier": "AWS::AccessAnalyzer"
    },
    {
        "ServiceHumanReadableName": "EC2 Image Builder",
        "ServiceProvider": "AWS",
        "ServiceName": "ImageBuilder",
        "DataTypeName": "Component",
        "ResourceTypeIdentifier": "AWS::ImageBuilder::Component",
        "ServiceTypeIdentifier": "AWS::ImageBuilder"
    },
    {
        "ServiceHumanReadableName": "EC2 Image Builder",
        "ServiceProvider": "AWS",
        "ServiceName": "ImageBuilder",
        "DataTypeName": "ContainerRecipe",
        "ResourceTypeIdentifier": "AWS::ImageBuilder::ContainerRecipe",
        "ServiceTypeIdentifier": "AWS::ImageBuilder"
    },
    {
        "ServiceHumanReadableName": "EC2 Image Builder",
        "ServiceProvider": "AWS",
        "ServiceName": "ImageBuilder",
        "DataTypeName": "DistributionConfiguration",
        "ResourceTypeIdentifier": "AWS::ImageBuilder::DistributionConfiguration",
        "ServiceTypeIdentifier": "AWS::ImageBuilder"
    },
    {
        "ServiceHumanReadableName": "EC2 Image Builder",
        "ServiceProvider": "AWS",
        "ServiceName": "ImageBuilder",
        "DataTypeName": "Image",
        "ResourceTypeIdentifier": "AWS::ImageBuilder::Image",
        "ServiceTypeIdentifier": "AWS::ImageBuilder"
    },
    {
        "ServiceHumanReadableName": "EC2 Image Builder",
        "ServiceProvider": "AWS",
        "ServiceName": "ImageBuilder",
        "DataTypeName": "ImagePipeline",
        "ResourceTypeIdentifier": "AWS::ImageBuilder::ImagePipeline",
        "ServiceTypeIdentifier": "AWS::ImageBuilder"
    },
    {
        "ServiceHumanReadableName": "EC2 Image Builder",
        "ServiceProvider": "AWS",
        "ServiceName": "ImageBuilder",
        "DataTypeName": "ImageRecipe",
        "ResourceTypeIdentifier": "AWS::ImageBuilder::ImageRecipe",
        "ServiceTypeIdentifier": "AWS::ImageBuilder"
    },
    {
        "ServiceHumanReadableName": "EC2 Image Builder",
        "ServiceProvider": "AWS",
        "ServiceName": "ImageBuilder",
        "DataTypeName": "InfrastructureConfiguration",
        "ResourceTypeIdentifier": "AWS::ImageBuilder::InfrastructureConfiguration",
        "ServiceTypeIdentifier": "AWS::ImageBuilder"
    },
    {
        "ServiceHumanReadableName": "EC2 Image Builder",
        "ServiceProvider": "AWS",
        "ServiceName": "ImageBuilder",
        "DataTypeName": "LifecyclePolicy",
        "ResourceTypeIdentifier": "AWS::ImageBuilder::LifecyclePolicy",
        "ServiceTypeIdentifier": "AWS::ImageBuilder"
    },
    {
        "ServiceHumanReadableName": "EC2 Image Builder",
        "ServiceProvider": "AWS",
        "ServiceName": "ImageBuilder",
        "DataTypeName": "Workflow",
        "ResourceTypeIdentifier": "AWS::ImageBuilder::Workflow",
        "ServiceTypeIdentifier": "AWS::ImageBuilder"
    },
    {
        "ServiceHumanReadableName": "AWS Systems Manager Incident Manager",
        "ServiceProvider": "AWS",
        "ServiceName": "SSMIncidents",
        "DataTypeName": "ReplicationSet",
        "ResourceTypeIdentifier": "AWS::SSMIncidents::ReplicationSet",
        "ServiceTypeIdentifier": "AWS::SSMIncidents"
    },
    {
        "ServiceHumanReadableName": "AWS Systems Manager Incident Manager",
        "ServiceProvider": "AWS",
        "ServiceName": "SSMIncidents",
        "DataTypeName": "ResponsePlan",
        "ResourceTypeIdentifier": "AWS::SSMIncidents::ResponsePlan",
        "ServiceTypeIdentifier": "AWS::SSMIncidents"
    },
    {
        "ServiceHumanReadableName": "AWS Systems Manager Incident Manager Contacts",
        "ServiceProvider": "AWS",
        "ServiceName": "SSMContacts",
        "DataTypeName": "Contact",
        "ResourceTypeIdentifier": "AWS::SSMContacts::Contact",
        "ServiceTypeIdentifier": "AWS::SSMContacts"
    },
    {
        "ServiceHumanReadableName": "AWS Systems Manager Incident Manager Contacts",
        "ServiceProvider": "AWS",
        "ServiceName": "SSMContacts",
        "DataTypeName": "ContactChannel",
        "ResourceTypeIdentifier": "AWS::SSMContacts::ContactChannel",
        "ServiceTypeIdentifier": "AWS::SSMContacts"
    },
    {
        "ServiceHumanReadableName": "AWS Systems Manager Incident Manager Contacts",
        "ServiceProvider": "AWS",
        "ServiceName": "SSMContacts",
        "DataTypeName": "Plan",
        "ResourceTypeIdentifier": "AWS::SSMContacts::Plan",
        "ServiceTypeIdentifier": "AWS::SSMContacts"
    },
    {
        "ServiceHumanReadableName": "AWS Systems Manager Incident Manager Contacts",
        "ServiceProvider": "AWS",
        "ServiceName": "SSMContacts",
        "DataTypeName": "Rotation",
        "ResourceTypeIdentifier": "AWS::SSMContacts::Rotation",
        "ServiceTypeIdentifier": "AWS::SSMContacts"
    },
    {
        "ServiceHumanReadableName": "Amazon Inspector classic",
        "ServiceProvider": "AWS",
        "ServiceName": "Inspector",
        "DataTypeName": "AssessmentTarget",
        "ResourceTypeIdentifier": "AWS::Inspector::AssessmentTarget",
        "ServiceTypeIdentifier": "AWS::Inspector"
    },
    {
        "ServiceHumanReadableName": "Amazon Inspector classic",
        "ServiceProvider": "AWS",
        "ServiceName": "Inspector",
        "DataTypeName": "AssessmentTemplate",
        "ResourceTypeIdentifier": "AWS::Inspector::AssessmentTemplate",
        "ServiceTypeIdentifier": "AWS::Inspector"
    },
    {
        "ServiceHumanReadableName": "Amazon Inspector classic",
        "ServiceProvider": "AWS",
        "ServiceName": "Inspector",
        "DataTypeName": "ResourceGroup",
        "ResourceTypeIdentifier": "AWS::Inspector::ResourceGroup",
        "ServiceTypeIdentifier": "AWS::Inspector"
    },
    {
        "ServiceHumanReadableName": "Amazon Inspector",
        "ServiceProvider": "AWS",
        "ServiceName": "InspectorV2",
        "DataTypeName": "CisScanConfiguration",
        "ResourceTypeIdentifier": "AWS::InspectorV2::CisScanConfiguration",
        "ServiceTypeIdentifier": "AWS::InspectorV2"
    },
    {
        "ServiceHumanReadableName": "Amazon Inspector",
        "ServiceProvider": "AWS",
        "ServiceName": "InspectorV2",
        "DataTypeName": "Filter",
        "ResourceTypeIdentifier": "AWS::InspectorV2::Filter",
        "ServiceTypeIdentifier": "AWS::InspectorV2"
    },
    {
        "ServiceHumanReadableName": "AWS IoT",
        "ServiceProvider": "AWS",
        "ServiceName": "IoT",
        "DataTypeName": "AccountAuditConfiguration",
        "ResourceTypeIdentifier": "AWS::IoT::AccountAuditConfiguration",
        "ServiceTypeIdentifier": "AWS::IoT"
    },
    {
        "ServiceHumanReadableName": "AWS IoT",
        "ServiceProvider": "AWS",
        "ServiceName": "IoT",
        "DataTypeName": "Authorizer",
        "ResourceTypeIdentifier": "AWS::IoT::Authorizer",
        "ServiceTypeIdentifier": "AWS::IoT"
    },
    {
        "ServiceHumanReadableName": "AWS IoT",
        "ServiceProvider": "AWS",
        "ServiceName": "IoT",
        "DataTypeName": "BillingGroup",
        "ResourceTypeIdentifier": "AWS::IoT::BillingGroup",
        "ServiceTypeIdentifier": "AWS::IoT"
    },
    {
        "ServiceHumanReadableName": "AWS IoT",
        "ServiceProvider": "AWS",
        "ServiceName": "IoT",
        "DataTypeName": "CACertificate",
        "ResourceTypeIdentifier": "AWS::IoT::CACertificate",
        "ServiceTypeIdentifier": "AWS::IoT"
    },
    {
        "ServiceHumanReadableName": "AWS IoT",
        "ServiceProvider": "AWS",
        "ServiceName": "IoT",
        "DataTypeName": "Certificate",
        "ResourceTypeIdentifier": "AWS::IoT::Certificate",
        "ServiceTypeIdentifier": "AWS::IoT"
    },
    {
        "ServiceHumanReadableName": "AWS IoT",
        "ServiceProvider": "AWS",
        "ServiceName": "IoT",
        "DataTypeName": "CertificateProvider",
        "ResourceTypeIdentifier": "AWS::IoT::CertificateProvider",
        "ServiceTypeIdentifier": "AWS::IoT"
    },
    {
        "ServiceHumanReadableName": "AWS IoT",
        "ServiceProvider": "AWS",
        "ServiceName": "IoT",
        "DataTypeName": "CustomMetric",
        "ResourceTypeIdentifier": "AWS::IoT::CustomMetric",
        "ServiceTypeIdentifier": "AWS::IoT"
    },
    {
        "ServiceHumanReadableName": "AWS IoT",
        "ServiceProvider": "AWS",
        "ServiceName": "IoT",
        "DataTypeName": "Dimension",
        "ResourceTypeIdentifier": "AWS::IoT::Dimension",
        "ServiceTypeIdentifier": "AWS::IoT"
    },
    {
        "ServiceHumanReadableName": "AWS IoT",
        "ServiceProvider": "AWS",
        "ServiceName": "IoT",
        "DataTypeName": "DomainConfiguration",
        "ResourceTypeIdentifier": "AWS::IoT::DomainConfiguration",
        "ServiceTypeIdentifier": "AWS::IoT"
    },
    {
        "ServiceHumanReadableName": "AWS IoT",
        "ServiceProvider": "AWS",
        "ServiceName": "IoT",
        "DataTypeName": "FleetMetric",
        "ResourceTypeIdentifier": "AWS::IoT::FleetMetric",
        "ServiceTypeIdentifier": "AWS::IoT"
    },
    {
        "ServiceHumanReadableName": "AWS IoT",
        "ServiceProvider": "AWS",
        "ServiceName": "IoT",
        "DataTypeName": "JobTemplate",
        "ResourceTypeIdentifier": "AWS::IoT::JobTemplate",
        "ServiceTypeIdentifier": "AWS::IoT"
    },
    {
        "ServiceHumanReadableName": "AWS IoT",
        "ServiceProvider": "AWS",
        "ServiceName": "IoT",
        "DataTypeName": "Logging",
        "ResourceTypeIdentifier": "AWS::IoT::Logging",
        "ServiceTypeIdentifier": "AWS::IoT"
    },
    {
        "ServiceHumanReadableName": "AWS IoT",
        "ServiceProvider": "AWS",
        "ServiceName": "IoT",
        "DataTypeName": "MitigationAction",
        "ResourceTypeIdentifier": "AWS::IoT::MitigationAction",
        "ServiceTypeIdentifier": "AWS::IoT"
    },
    {
        "ServiceHumanReadableName": "AWS IoT",
        "ServiceProvider": "AWS",
        "ServiceName": "IoT",
        "DataTypeName": "Policy",
        "ResourceTypeIdentifier": "AWS::IoT::Policy",
        "ServiceTypeIdentifier": "AWS::IoT"
    },
    {
        "ServiceHumanReadableName": "AWS IoT",
        "ServiceProvider": "AWS",
        "ServiceName": "IoT",
        "DataTypeName": "PolicyPrincipalAttachment",
        "ResourceTypeIdentifier": "AWS::IoT::PolicyPrincipalAttachment",
        "ServiceTypeIdentifier": "AWS::IoT"
    },
    {
        "ServiceHumanReadableName": "AWS IoT",
        "ServiceProvider": "AWS",
        "ServiceName": "IoT",
        "DataTypeName": "ProvisioningTemplate",
        "ResourceTypeIdentifier": "AWS::IoT::ProvisioningTemplate",
        "ServiceTypeIdentifier": "AWS::IoT"
    },
    {
        "ServiceHumanReadableName": "AWS IoT",
        "ServiceProvider": "AWS",
        "ServiceName": "IoT",
        "DataTypeName": "ResourceSpecificLogging",
        "ResourceTypeIdentifier": "AWS::IoT::ResourceSpecificLogging",
        "ServiceTypeIdentifier": "AWS::IoT"
    },
    {
        "ServiceHumanReadableName": "AWS IoT",
        "ServiceProvider": "AWS",
        "ServiceName": "IoT",
        "DataTypeName": "RoleAlias",
        "ResourceTypeIdentifier": "AWS::IoT::RoleAlias",
        "ServiceTypeIdentifier": "AWS::IoT"
    },
    {
        "ServiceHumanReadableName": "AWS IoT",
        "ServiceProvider": "AWS",
        "ServiceName": "IoT",
        "DataTypeName": "ScheduledAudit",
        "ResourceTypeIdentifier": "AWS::IoT::ScheduledAudit",
        "ServiceTypeIdentifier": "AWS::IoT"
    },
    {
        "ServiceHumanReadableName": "AWS IoT",
        "ServiceProvider": "AWS",
        "ServiceName": "IoT",
        "DataTypeName": "SecurityProfile",
        "ResourceTypeIdentifier": "AWS::IoT::SecurityProfile",
        "ServiceTypeIdentifier": "AWS::IoT"
    },
    {
        "ServiceHumanReadableName": "AWS IoT",
        "ServiceProvider": "AWS",
        "ServiceName": "IoT",
        "DataTypeName": "SoftwarePackage",
        "ResourceTypeIdentifier": "AWS::IoT::SoftwarePackage",
        "ServiceTypeIdentifier": "AWS::IoT"
    },
    {
        "ServiceHumanReadableName": "AWS IoT",
        "ServiceProvider": "AWS",
        "ServiceName": "IoT",
        "DataTypeName": "SoftwarePackageVersion",
        "ResourceTypeIdentifier": "AWS::IoT::SoftwarePackageVersion",
        "ServiceTypeIdentifier": "AWS::IoT"
    },
    {
        "ServiceHumanReadableName": "AWS IoT",
        "ServiceProvider": "AWS",
        "ServiceName": "IoT",
        "DataTypeName": "Thing",
        "ResourceTypeIdentifier": "AWS::IoT::Thing",
        "ServiceTypeIdentifier": "AWS::IoT"
    },
    {
        "ServiceHumanReadableName": "AWS IoT",
        "ServiceProvider": "AWS",
        "ServiceName": "IoT",
        "DataTypeName": "ThingGroup",
        "ResourceTypeIdentifier": "AWS::IoT::ThingGroup",
        "ServiceTypeIdentifier": "AWS::IoT"
    },
    {
        "ServiceHumanReadableName": "AWS IoT",
        "ServiceProvider": "AWS",
        "ServiceName": "IoT",
        "DataTypeName": "ThingPrincipalAttachment",
        "ResourceTypeIdentifier": "AWS::IoT::ThingPrincipalAttachment",
        "ServiceTypeIdentifier": "AWS::IoT"
    },
    {
        "ServiceHumanReadableName": "AWS IoT",
        "ServiceProvider": "AWS",
        "ServiceName": "IoT",
        "DataTypeName": "ThingType",
        "ResourceTypeIdentifier": "AWS::IoT::ThingType",
        "ServiceTypeIdentifier": "AWS::IoT"
    },
    {
        "ServiceHumanReadableName": "AWS IoT",
        "ServiceProvider": "AWS",
        "ServiceName": "IoT",
        "DataTypeName": "TopicRule",
        "ResourceTypeIdentifier": "AWS::IoT::TopicRule",
        "ServiceTypeIdentifier": "AWS::IoT"
    },
    {
        "ServiceHumanReadableName": "AWS IoT",
        "ServiceProvider": "AWS",
        "ServiceName": "IoT",
        "DataTypeName": "TopicRuleDestination",
        "ResourceTypeIdentifier": "AWS::IoT::TopicRuleDestination",
        "ServiceTypeIdentifier": "AWS::IoT"
    },
    {
        "ServiceHumanReadableName": "AWS IoT 1-Click",
        "ServiceProvider": "AWS",
        "ServiceName": "IoT1Click",
        "DataTypeName": "Device",
        "ResourceTypeIdentifier": "AWS::IoT1Click::Device",
        "ServiceTypeIdentifier": "AWS::IoT1Click"
    },
    {
        "ServiceHumanReadableName": "AWS IoT 1-Click",
        "ServiceProvider": "AWS",
        "ServiceName": "IoT1Click",
        "DataTypeName": "Placement",
        "ResourceTypeIdentifier": "AWS::IoT1Click::Placement",
        "ServiceTypeIdentifier": "AWS::IoT1Click"
    },
    {
        "ServiceHumanReadableName": "AWS IoT 1-Click",
        "ServiceProvider": "AWS",
        "ServiceName": "IoT1Click",
        "DataTypeName": "Project",
        "ResourceTypeIdentifier": "AWS::IoT1Click::Project",
        "ServiceTypeIdentifier": "AWS::IoT1Click"
    },
    {
        "ServiceHumanReadableName": "AWS IoT Analytics",
        "ServiceProvider": "AWS",
        "ServiceName": "IoTAnalytics",
        "DataTypeName": "Channel",
        "ResourceTypeIdentifier": "AWS::IoTAnalytics::Channel",
        "ServiceTypeIdentifier": "AWS::IoTAnalytics"
    },
    {
        "ServiceHumanReadableName": "AWS IoT Analytics",
        "ServiceProvider": "AWS",
        "ServiceName": "IoTAnalytics",
        "DataTypeName": "Dataset",
        "ResourceTypeIdentifier": "AWS::IoTAnalytics::Dataset",
        "ServiceTypeIdentifier": "AWS::IoTAnalytics"
    },
    {
        "ServiceHumanReadableName": "AWS IoT Analytics",
        "ServiceProvider": "AWS",
        "ServiceName": "IoTAnalytics",
        "DataTypeName": "Datastore",
        "ResourceTypeIdentifier": "AWS::IoTAnalytics::Datastore",
        "ServiceTypeIdentifier": "AWS::IoTAnalytics"
    },
    {
        "ServiceHumanReadableName": "AWS IoT Analytics",
        "ServiceProvider": "AWS",
        "ServiceName": "IoTAnalytics",
        "DataTypeName": "Pipeline",
        "ResourceTypeIdentifier": "AWS::IoTAnalytics::Pipeline",
        "ServiceTypeIdentifier": "AWS::IoTAnalytics"
    },
    {
        "ServiceHumanReadableName": "AWS IoT Core Device Advisor",
        "ServiceProvider": "AWS",
        "ServiceName": "IoTCoreDeviceAdvisor",
        "DataTypeName": "SuiteDefinition",
        "ResourceTypeIdentifier": "AWS::IoTCoreDeviceAdvisor::SuiteDefinition",
        "ServiceTypeIdentifier": "AWS::IoTCoreDeviceAdvisor"
    },
    {
        "ServiceHumanReadableName": "AWS IoT Events",
        "ServiceProvider": "AWS",
        "ServiceName": "IoTEvents",
        "DataTypeName": "AlarmModel",
        "ResourceTypeIdentifier": "AWS::IoTEvents::AlarmModel",
        "ServiceTypeIdentifier": "AWS::IoTEvents"
    },
    {
        "ServiceHumanReadableName": "AWS IoT Events",
        "ServiceProvider": "AWS",
        "ServiceName": "IoTEvents",
        "DataTypeName": "DetectorModel",
        "ResourceTypeIdentifier": "AWS::IoTEvents::DetectorModel",
        "ServiceTypeIdentifier": "AWS::IoTEvents"
    },
    {
        "ServiceHumanReadableName": "AWS IoT Events",
        "ServiceProvider": "AWS",
        "ServiceName": "IoTEvents",
        "DataTypeName": "Input",
        "ResourceTypeIdentifier": "AWS::IoTEvents::Input",
        "ServiceTypeIdentifier": "AWS::IoTEvents"
    },
    {
        "ServiceHumanReadableName": "Fleet Hub for AWS IoT Device Management",
        "ServiceProvider": "AWS",
        "ServiceName": "IoTFleetHub",
        "DataTypeName": "Application",
        "ResourceTypeIdentifier": "AWS::IoTFleetHub::Application",
        "ServiceTypeIdentifier": "AWS::IoTFleetHub"
    },
    {
        "ServiceHumanReadableName": "AWS IoT FleetWise",
        "ServiceProvider": "AWS",
        "ServiceName": "IoTFleetWise",
        "DataTypeName": "Campaign",
        "ResourceTypeIdentifier": "AWS::IoTFleetWise::Campaign",
        "ServiceTypeIdentifier": "AWS::IoTFleetWise"
    },
    {
        "ServiceHumanReadableName": "AWS IoT FleetWise",
        "ServiceProvider": "AWS",
        "ServiceName": "IoTFleetWise",
        "DataTypeName": "DecoderManifest",
        "ResourceTypeIdentifier": "AWS::IoTFleetWise::DecoderManifest",
        "ServiceTypeIdentifier": "AWS::IoTFleetWise"
    },
    {
        "ServiceHumanReadableName": "AWS IoT FleetWise",
        "ServiceProvider": "AWS",
        "ServiceName": "IoTFleetWise",
        "DataTypeName": "Fleet",
        "ResourceTypeIdentifier": "AWS::IoTFleetWise::Fleet",
        "ServiceTypeIdentifier": "AWS::IoTFleetWise"
    },
    {
        "ServiceHumanReadableName": "AWS IoT FleetWise",
        "ServiceProvider": "AWS",
        "ServiceName": "IoTFleetWise",
        "DataTypeName": "ModelManifest",
        "ResourceTypeIdentifier": "AWS::IoTFleetWise::ModelManifest",
        "ServiceTypeIdentifier": "AWS::IoTFleetWise"
    },
    {
        "ServiceHumanReadableName": "AWS IoT FleetWise",
        "ServiceProvider": "AWS",
        "ServiceName": "IoTFleetWise",
        "DataTypeName": "SignalCatalog",
        "ResourceTypeIdentifier": "AWS::IoTFleetWise::SignalCatalog",
        "ServiceTypeIdentifier": "AWS::IoTFleetWise"
    },
    {
        "ServiceHumanReadableName": "AWS IoT FleetWise",
        "ServiceProvider": "AWS",
        "ServiceName": "IoTFleetWise",
        "DataTypeName": "Vehicle",
        "ResourceTypeIdentifier": "AWS::IoTFleetWise::Vehicle",
        "ServiceTypeIdentifier": "AWS::IoTFleetWise"
    },
    {
        "ServiceHumanReadableName": "AWS IoT Greengrass",
        "ServiceProvider": "AWS",
        "ServiceName": "Greengrass",
        "DataTypeName": "ConnectorDefinition",
        "ResourceTypeIdentifier": "AWS::Greengrass::ConnectorDefinition",
        "ServiceTypeIdentifier": "AWS::Greengrass"
    },
    {
        "ServiceHumanReadableName": "AWS IoT Greengrass",
        "ServiceProvider": "AWS",
        "ServiceName": "Greengrass",
        "DataTypeName": "ConnectorDefinitionVersion",
        "ResourceTypeIdentifier": "AWS::Greengrass::ConnectorDefinitionVersion",
        "ServiceTypeIdentifier": "AWS::Greengrass"
    },
    {
        "ServiceHumanReadableName": "AWS IoT Greengrass",
        "ServiceProvider": "AWS",
        "ServiceName": "Greengrass",
        "DataTypeName": "CoreDefinition",
        "ResourceTypeIdentifier": "AWS::Greengrass::CoreDefinition",
        "ServiceTypeIdentifier": "AWS::Greengrass"
    },
    {
        "ServiceHumanReadableName": "AWS IoT Greengrass",
        "ServiceProvider": "AWS",
        "ServiceName": "Greengrass",
        "DataTypeName": "CoreDefinitionVersion",
        "ResourceTypeIdentifier": "AWS::Greengrass::CoreDefinitionVersion",
        "ServiceTypeIdentifier": "AWS::Greengrass"
    },
    {
        "ServiceHumanReadableName": "AWS IoT Greengrass",
        "ServiceProvider": "AWS",
        "ServiceName": "Greengrass",
        "DataTypeName": "DeviceDefinition",
        "ResourceTypeIdentifier": "AWS::Greengrass::DeviceDefinition",
        "ServiceTypeIdentifier": "AWS::Greengrass"
    },
    {
        "ServiceHumanReadableName": "AWS IoT Greengrass",
        "ServiceProvider": "AWS",
        "ServiceName": "Greengrass",
        "DataTypeName": "DeviceDefinitionVersion",
        "ResourceTypeIdentifier": "AWS::Greengrass::DeviceDefinitionVersion",
        "ServiceTypeIdentifier": "AWS::Greengrass"
    },
    {
        "ServiceHumanReadableName": "AWS IoT Greengrass",
        "ServiceProvider": "AWS",
        "ServiceName": "Greengrass",
        "DataTypeName": "FunctionDefinition",
        "ResourceTypeIdentifier": "AWS::Greengrass::FunctionDefinition",
        "ServiceTypeIdentifier": "AWS::Greengrass"
    },
    {
        "ServiceHumanReadableName": "AWS IoT Greengrass",
        "ServiceProvider": "AWS",
        "ServiceName": "Greengrass",
        "DataTypeName": "FunctionDefinitionVersion",
        "ResourceTypeIdentifier": "AWS::Greengrass::FunctionDefinitionVersion",
        "ServiceTypeIdentifier": "AWS::Greengrass"
    },
    {
        "ServiceHumanReadableName": "AWS IoT Greengrass",
        "ServiceProvider": "AWS",
        "ServiceName": "Greengrass",
        "DataTypeName": "Group",
        "ResourceTypeIdentifier": "AWS::Greengrass::Group",
        "ServiceTypeIdentifier": "AWS::Greengrass"
    },
    {
        "ServiceHumanReadableName": "AWS IoT Greengrass",
        "ServiceProvider": "AWS",
        "ServiceName": "Greengrass",
        "DataTypeName": "GroupVersion",
        "ResourceTypeIdentifier": "AWS::Greengrass::GroupVersion",
        "ServiceTypeIdentifier": "AWS::Greengrass"
    },
    {
        "ServiceHumanReadableName": "AWS IoT Greengrass",
        "ServiceProvider": "AWS",
        "ServiceName": "Greengrass",
        "DataTypeName": "LoggerDefinition",
        "ResourceTypeIdentifier": "AWS::Greengrass::LoggerDefinition",
        "ServiceTypeIdentifier": "AWS::Greengrass"
    },
    {
        "ServiceHumanReadableName": "AWS IoT Greengrass",
        "ServiceProvider": "AWS",
        "ServiceName": "Greengrass",
        "DataTypeName": "LoggerDefinitionVersion",
        "ResourceTypeIdentifier": "AWS::Greengrass::LoggerDefinitionVersion",
        "ServiceTypeIdentifier": "AWS::Greengrass"
    },
    {
        "ServiceHumanReadableName": "AWS IoT Greengrass",
        "ServiceProvider": "AWS",
        "ServiceName": "Greengrass",
        "DataTypeName": "ResourceDefinition",
        "ResourceTypeIdentifier": "AWS::Greengrass::ResourceDefinition",
        "ServiceTypeIdentifier": "AWS::Greengrass"
    },
    {
        "ServiceHumanReadableName": "AWS IoT Greengrass",
        "ServiceProvider": "AWS",
        "ServiceName": "Greengrass",
        "DataTypeName": "ResourceDefinitionVersion",
        "ResourceTypeIdentifier": "AWS::Greengrass::ResourceDefinitionVersion",
        "ServiceTypeIdentifier": "AWS::Greengrass"
    },
    {
        "ServiceHumanReadableName": "AWS IoT Greengrass",
        "ServiceProvider": "AWS",
        "ServiceName": "Greengrass",
        "DataTypeName": "SubscriptionDefinition",
        "ResourceTypeIdentifier": "AWS::Greengrass::SubscriptionDefinition",
        "ServiceTypeIdentifier": "AWS::Greengrass"
    },
    {
        "ServiceHumanReadableName": "AWS IoT Greengrass",
        "ServiceProvider": "AWS",
        "ServiceName": "Greengrass",
        "DataTypeName": "SubscriptionDefinitionVersion",
        "ResourceTypeIdentifier": "AWS::Greengrass::SubscriptionDefinitionVersion",
        "ServiceTypeIdentifier": "AWS::Greengrass"
    },
    {
        "ServiceHumanReadableName": "AWS IoT Greengrass Version 2",
        "ServiceProvider": "AWS",
        "ServiceName": "GreengrassV2",
        "DataTypeName": "ComponentVersion",
        "ResourceTypeIdentifier": "AWS::GreengrassV2::ComponentVersion",
        "ServiceTypeIdentifier": "AWS::GreengrassV2"
    },
    {
        "ServiceHumanReadableName": "AWS IoT Greengrass Version 2",
        "ServiceProvider": "AWS",
        "ServiceName": "GreengrassV2",
        "DataTypeName": "Deployment",
        "ResourceTypeIdentifier": "AWS::GreengrassV2::Deployment",
        "ServiceTypeIdentifier": "AWS::GreengrassV2"
    },
    {
        "ServiceHumanReadableName": "AWS IoT SiteWise",
        "ServiceProvider": "AWS",
        "ServiceName": "IoTSiteWise",
        "DataTypeName": "AccessPolicy",
        "ResourceTypeIdentifier": "AWS::IoTSiteWise::AccessPolicy",
        "ServiceTypeIdentifier": "AWS::IoTSiteWise"
    },
    {
        "ServiceHumanReadableName": "AWS IoT SiteWise",
        "ServiceProvider": "AWS",
        "ServiceName": "IoTSiteWise",
        "DataTypeName": "Asset",
        "ResourceTypeIdentifier": "AWS::IoTSiteWise::Asset",
        "ServiceTypeIdentifier": "AWS::IoTSiteWise"
    },
    {
        "ServiceHumanReadableName": "AWS IoT SiteWise",
        "ServiceProvider": "AWS",
        "ServiceName": "IoTSiteWise",
        "DataTypeName": "AssetModel",
        "ResourceTypeIdentifier": "AWS::IoTSiteWise::AssetModel",
        "ServiceTypeIdentifier": "AWS::IoTSiteWise"
    },
    {
        "ServiceHumanReadableName": "AWS IoT SiteWise",
        "ServiceProvider": "AWS",
        "ServiceName": "IoTSiteWise",
        "DataTypeName": "Dashboard",
        "ResourceTypeIdentifier": "AWS::IoTSiteWise::Dashboard",
        "ServiceTypeIdentifier": "AWS::IoTSiteWise"
    },
    {
        "ServiceHumanReadableName": "AWS IoT SiteWise",
        "ServiceProvider": "AWS",
        "ServiceName": "IoTSiteWise",
        "DataTypeName": "Gateway",
        "ResourceTypeIdentifier": "AWS::IoTSiteWise::Gateway",
        "ServiceTypeIdentifier": "AWS::IoTSiteWise"
    },
    {
        "ServiceHumanReadableName": "AWS IoT SiteWise",
        "ServiceProvider": "AWS",
        "ServiceName": "IoTSiteWise",
        "DataTypeName": "Portal",
        "ResourceTypeIdentifier": "AWS::IoTSiteWise::Portal",
        "ServiceTypeIdentifier": "AWS::IoTSiteWise"
    },
    {
        "ServiceHumanReadableName": "AWS IoT SiteWise",
        "ServiceProvider": "AWS",
        "ServiceName": "IoTSiteWise",
        "DataTypeName": "Project",
        "ResourceTypeIdentifier": "AWS::IoTSiteWise::Project",
        "ServiceTypeIdentifier": "AWS::IoTSiteWise"
    },
    {
        "ServiceHumanReadableName": "AWS IoT TwinMaker",
        "ServiceProvider": "AWS",
        "ServiceName": "IoTTwinMaker",
        "DataTypeName": "ComponentType",
        "ResourceTypeIdentifier": "AWS::IoTTwinMaker::ComponentType",
        "ServiceTypeIdentifier": "AWS::IoTTwinMaker"
    },
    {
        "ServiceHumanReadableName": "AWS IoT TwinMaker",
        "ServiceProvider": "AWS",
        "ServiceName": "IoTTwinMaker",
        "DataTypeName": "Entity",
        "ResourceTypeIdentifier": "AWS::IoTTwinMaker::Entity",
        "ServiceTypeIdentifier": "AWS::IoTTwinMaker"
    },
    {
        "ServiceHumanReadableName": "AWS IoT TwinMaker",
        "ServiceProvider": "AWS",
        "ServiceName": "IoTTwinMaker",
        "DataTypeName": "Scene",
        "ResourceTypeIdentifier": "AWS::IoTTwinMaker::Scene",
        "ServiceTypeIdentifier": "AWS::IoTTwinMaker"
    },
    {
        "ServiceHumanReadableName": "AWS IoT TwinMaker",
        "ServiceProvider": "AWS",
        "ServiceName": "IoTTwinMaker",
        "DataTypeName": "SyncJob",
        "ResourceTypeIdentifier": "AWS::IoTTwinMaker::SyncJob",
        "ServiceTypeIdentifier": "AWS::IoTTwinMaker"
    },
    {
        "ServiceHumanReadableName": "AWS IoT TwinMaker",
        "ServiceProvider": "AWS",
        "ServiceName": "IoTTwinMaker",
        "DataTypeName": "Workspace",
        "ResourceTypeIdentifier": "AWS::IoTTwinMaker::Workspace",
        "ServiceTypeIdentifier": "AWS::IoTTwinMaker"
    },
    {
        "ServiceHumanReadableName": "AWS IoT Wireless",
        "ServiceProvider": "AWS",
        "ServiceName": "IoTWireless",
        "DataTypeName": "Destination",
        "ResourceTypeIdentifier": "AWS::IoTWireless::Destination",
        "ServiceTypeIdentifier": "AWS::IoTWireless"
    },
    {
        "ServiceHumanReadableName": "AWS IoT Wireless",
        "ServiceProvider": "AWS",
        "ServiceName": "IoTWireless",
        "DataTypeName": "DeviceProfile",
        "ResourceTypeIdentifier": "AWS::IoTWireless::DeviceProfile",
        "ServiceTypeIdentifier": "AWS::IoTWireless"
    },
    {
        "ServiceHumanReadableName": "AWS IoT Wireless",
        "ServiceProvider": "AWS",
        "ServiceName": "IoTWireless",
        "DataTypeName": "FuotaTask",
        "ResourceTypeIdentifier": "AWS::IoTWireless::FuotaTask",
        "ServiceTypeIdentifier": "AWS::IoTWireless"
    },
    {
        "ServiceHumanReadableName": "AWS IoT Wireless",
        "ServiceProvider": "AWS",
        "ServiceName": "IoTWireless",
        "DataTypeName": "MulticastGroup",
        "ResourceTypeIdentifier": "AWS::IoTWireless::MulticastGroup",
        "ServiceTypeIdentifier": "AWS::IoTWireless"
    },
    {
        "ServiceHumanReadableName": "AWS IoT Wireless",
        "ServiceProvider": "AWS",
        "ServiceName": "IoTWireless",
        "DataTypeName": "NetworkAnalyzerConfiguration",
        "ResourceTypeIdentifier": "AWS::IoTWireless::NetworkAnalyzerConfiguration",
        "ServiceTypeIdentifier": "AWS::IoTWireless"
    },
    {
        "ServiceHumanReadableName": "AWS IoT Wireless",
        "ServiceProvider": "AWS",
        "ServiceName": "IoTWireless",
        "DataTypeName": "PartnerAccount",
        "ResourceTypeIdentifier": "AWS::IoTWireless::PartnerAccount",
        "ServiceTypeIdentifier": "AWS::IoTWireless"
    },
    {
        "ServiceHumanReadableName": "AWS IoT Wireless",
        "ServiceProvider": "AWS",
        "ServiceName": "IoTWireless",
        "DataTypeName": "ServiceProfile",
        "ResourceTypeIdentifier": "AWS::IoTWireless::ServiceProfile",
        "ServiceTypeIdentifier": "AWS::IoTWireless"
    },
    {
        "ServiceHumanReadableName": "AWS IoT Wireless",
        "ServiceProvider": "AWS",
        "ServiceName": "IoTWireless",
        "DataTypeName": "TaskDefinition",
        "ResourceTypeIdentifier": "AWS::IoTWireless::TaskDefinition",
        "ServiceTypeIdentifier": "AWS::IoTWireless"
    },
    {
        "ServiceHumanReadableName": "AWS IoT Wireless",
        "ServiceProvider": "AWS",
        "ServiceName": "IoTWireless",
        "DataTypeName": "WirelessDevice",
        "ResourceTypeIdentifier": "AWS::IoTWireless::WirelessDevice",
        "ServiceTypeIdentifier": "AWS::IoTWireless"
    },
    {
        "ServiceHumanReadableName": "AWS IoT Wireless",
        "ServiceProvider": "AWS",
        "ServiceName": "IoTWireless",
        "DataTypeName": "WirelessDeviceImportTask",
        "ResourceTypeIdentifier": "AWS::IoTWireless::WirelessDeviceImportTask",
        "ServiceTypeIdentifier": "AWS::IoTWireless"
    },
    {
        "ServiceHumanReadableName": "AWS IoT Wireless",
        "ServiceProvider": "AWS",
        "ServiceName": "IoTWireless",
        "DataTypeName": "WirelessGateway",
        "ResourceTypeIdentifier": "AWS::IoTWireless::WirelessGateway",
        "ServiceTypeIdentifier": "AWS::IoTWireless"
    },
    {
        "ServiceHumanReadableName": "Amazon IVS",
        "ServiceProvider": "AWS",
        "ServiceName": "IVS",
        "DataTypeName": "Channel",
        "ResourceTypeIdentifier": "AWS::IVS::Channel",
        "ServiceTypeIdentifier": "AWS::IVS"
    },
    {
        "ServiceHumanReadableName": "Amazon IVS",
        "ServiceProvider": "AWS",
        "ServiceName": "IVS",
        "DataTypeName": "EncoderConfiguration",
        "ResourceTypeIdentifier": "AWS::IVS::EncoderConfiguration",
        "ServiceTypeIdentifier": "AWS::IVS"
    },
    {
        "ServiceHumanReadableName": "Amazon IVS",
        "ServiceProvider": "AWS",
        "ServiceName": "IVS",
        "DataTypeName": "PlaybackKeyPair",
        "ResourceTypeIdentifier": "AWS::IVS::PlaybackKeyPair",
        "ServiceTypeIdentifier": "AWS::IVS"
    },
    {
        "ServiceHumanReadableName": "Amazon IVS",
        "ServiceProvider": "AWS",
        "ServiceName": "IVS",
        "DataTypeName": "PlaybackRestrictionPolicy",
        "ResourceTypeIdentifier": "AWS::IVS::PlaybackRestrictionPolicy",
        "ServiceTypeIdentifier": "AWS::IVS"
    },
    {
        "ServiceHumanReadableName": "Amazon IVS",
        "ServiceProvider": "AWS",
        "ServiceName": "IVS",
        "DataTypeName": "PublicKey",
        "ResourceTypeIdentifier": "AWS::IVS::PublicKey",
        "ServiceTypeIdentifier": "AWS::IVS"
    },
    {
        "ServiceHumanReadableName": "Amazon IVS",
        "ServiceProvider": "AWS",
        "ServiceName": "IVS",
        "DataTypeName": "RecordingConfiguration",
        "ResourceTypeIdentifier": "AWS::IVS::RecordingConfiguration",
        "ServiceTypeIdentifier": "AWS::IVS"
    },
    {
        "ServiceHumanReadableName": "Amazon IVS",
        "ServiceProvider": "AWS",
        "ServiceName": "IVS",
        "DataTypeName": "Stage",
        "ResourceTypeIdentifier": "AWS::IVS::Stage",
        "ServiceTypeIdentifier": "AWS::IVS"
    },
    {
        "ServiceHumanReadableName": "Amazon IVS",
        "ServiceProvider": "AWS",
        "ServiceName": "IVS",
        "DataTypeName": "StorageConfiguration",
        "ResourceTypeIdentifier": "AWS::IVS::StorageConfiguration",
        "ServiceTypeIdentifier": "AWS::IVS"
    },
    {
        "ServiceHumanReadableName": "Amazon IVS",
        "ServiceProvider": "AWS",
        "ServiceName": "IVS",
        "DataTypeName": "StreamKey",
        "ResourceTypeIdentifier": "AWS::IVS::StreamKey",
        "ServiceTypeIdentifier": "AWS::IVS"
    },
    {
        "ServiceHumanReadableName": "Amazon IVS Chat",
        "ServiceProvider": "AWS",
        "ServiceName": "IVSChat",
        "DataTypeName": "LoggingConfiguration",
        "ResourceTypeIdentifier": "AWS::IVSChat::LoggingConfiguration",
        "ServiceTypeIdentifier": "AWS::IVSChat"
    },
    {
        "ServiceHumanReadableName": "Amazon IVS Chat",
        "ServiceProvider": "AWS",
        "ServiceName": "IVSChat",
        "DataTypeName": "Room",
        "ResourceTypeIdentifier": "AWS::IVSChat::Room",
        "ServiceTypeIdentifier": "AWS::IVSChat"
    },
    {
        "ServiceHumanReadableName": "Amazon Kendra",
        "ServiceProvider": "AWS",
        "ServiceName": "Kendra",
        "DataTypeName": "DataSource",
        "ResourceTypeIdentifier": "AWS::Kendra::DataSource",
        "ServiceTypeIdentifier": "AWS::Kendra"
    },
    {
        "ServiceHumanReadableName": "Amazon Kendra",
        "ServiceProvider": "AWS",
        "ServiceName": "Kendra",
        "DataTypeName": "Faq",
        "ResourceTypeIdentifier": "AWS::Kendra::Faq",
        "ServiceTypeIdentifier": "AWS::Kendra"
    },
    {
        "ServiceHumanReadableName": "Amazon Kendra",
        "ServiceProvider": "AWS",
        "ServiceName": "Kendra",
        "DataTypeName": "Index",
        "ResourceTypeIdentifier": "AWS::Kendra::Index",
        "ServiceTypeIdentifier": "AWS::Kendra"
    },
    {
        "ServiceHumanReadableName": "Amazon Kendra Intelligent Ranking",
        "ServiceProvider": "AWS",
        "ServiceName": "KendraRanking",
        "DataTypeName": "ExecutionPlan",
        "ResourceTypeIdentifier": "AWS::KendraRanking::ExecutionPlan",
        "ServiceTypeIdentifier": "AWS::KendraRanking"
    },
    {
        "ServiceHumanReadableName": "Amazon Keyspaces (for Apache Cassandra)",
        "ServiceProvider": "AWS",
        "ServiceName": "Cassandra",
        "DataTypeName": "Keyspace",
        "ResourceTypeIdentifier": "AWS::Cassandra::Keyspace",
        "ServiceTypeIdentifier": "AWS::Cassandra"
    },
    {
        "ServiceHumanReadableName": "Amazon Keyspaces (for Apache Cassandra)",
        "ServiceProvider": "AWS",
        "ServiceName": "Cassandra",
        "DataTypeName": "Table",
        "ResourceTypeIdentifier": "AWS::Cassandra::Table",
        "ServiceTypeIdentifier": "AWS::Cassandra"
    },
    {
        "ServiceHumanReadableName": "Amazon Kinesis",
        "ServiceProvider": "AWS",
        "ServiceName": "Kinesis",
        "DataTypeName": "ResourcePolicy",
        "ResourceTypeIdentifier": "AWS::Kinesis::ResourcePolicy",
        "ServiceTypeIdentifier": "AWS::Kinesis"
    },
    {
        "ServiceHumanReadableName": "Amazon Kinesis",
        "ServiceProvider": "AWS",
        "ServiceName": "Kinesis",
        "DataTypeName": "Stream",
        "ResourceTypeIdentifier": "AWS::Kinesis::Stream",
        "ServiceTypeIdentifier": "AWS::Kinesis"
    },
    {
        "ServiceHumanReadableName": "Amazon Kinesis",
        "ServiceProvider": "AWS",
        "ServiceName": "Kinesis",
        "DataTypeName": "StreamConsumer",
        "ResourceTypeIdentifier": "AWS::Kinesis::StreamConsumer",
        "ServiceTypeIdentifier": "AWS::Kinesis"
    },
    {
        "ServiceHumanReadableName": "Amazon Managed Service for Apache Flink",
        "ServiceProvider": "AWS",
        "ServiceName": "KinesisAnalytics",
        "DataTypeName": "Application",
        "ResourceTypeIdentifier": "AWS::KinesisAnalytics::Application",
        "ServiceTypeIdentifier": "AWS::KinesisAnalytics"
    },
    {
        "ServiceHumanReadableName": "Amazon Managed Service for Apache Flink",
        "ServiceProvider": "AWS",
        "ServiceName": "KinesisAnalytics",
        "DataTypeName": "ApplicationOutput",
        "ResourceTypeIdentifier": "AWS::KinesisAnalytics::ApplicationOutput",
        "ServiceTypeIdentifier": "AWS::KinesisAnalytics"
    },
    {
        "ServiceHumanReadableName": "Amazon Managed Service for Apache Flink",
        "ServiceProvider": "AWS",
        "ServiceName": "KinesisAnalytics",
        "DataTypeName": "ApplicationReferenceDataSource",
        "ResourceTypeIdentifier": "AWS::KinesisAnalytics::ApplicationReferenceDataSource",
        "ServiceTypeIdentifier": "AWS::KinesisAnalytics"
    },
    {
        "ServiceHumanReadableName": "Amazon Managed Service for Apache Flink V2",
        "ServiceProvider": "AWS",
        "ServiceName": "KinesisAnalyticsV2",
        "DataTypeName": "Application",
        "ResourceTypeIdentifier": "AWS::KinesisAnalyticsV2::Application",
        "ServiceTypeIdentifier": "AWS::KinesisAnalyticsV2"
    },
    {
        "ServiceHumanReadableName": "Amazon Managed Service for Apache Flink V2",
        "ServiceProvider": "AWS",
        "ServiceName": "KinesisAnalyticsV2",
        "DataTypeName": "ApplicationCloudWatchLoggingOption",
        "ResourceTypeIdentifier": "AWS::KinesisAnalyticsV2::ApplicationCloudWatchLoggingOption",
        "ServiceTypeIdentifier": "AWS::KinesisAnalyticsV2"
    },
    {
        "ServiceHumanReadableName": "Amazon Managed Service for Apache Flink V2",
        "ServiceProvider": "AWS",
        "ServiceName": "KinesisAnalyticsV2",
        "DataTypeName": "ApplicationOutput",
        "ResourceTypeIdentifier": "AWS::KinesisAnalyticsV2::ApplicationOutput",
        "ServiceTypeIdentifier": "AWS::KinesisAnalyticsV2"
    },
    {
        "ServiceHumanReadableName": "Amazon Managed Service for Apache Flink V2",
        "ServiceProvider": "AWS",
        "ServiceName": "KinesisAnalyticsV2",
        "DataTypeName": "ApplicationReferenceDataSource",
        "ResourceTypeIdentifier": "AWS::KinesisAnalyticsV2::ApplicationReferenceDataSource",
        "ServiceTypeIdentifier": "AWS::KinesisAnalyticsV2"
    },
    {
        "ServiceHumanReadableName": "Amazon Data Firehose",
        "ServiceProvider": "AWS",
        "ServiceName": "KinesisFirehose",
        "DataTypeName": "DeliveryStream",
        "ResourceTypeIdentifier": "AWS::KinesisFirehose::DeliveryStream",
        "ServiceTypeIdentifier": "AWS::KinesisFirehose"
    },
    {
        "ServiceHumanReadableName": "Amazon Kinesis Video Streams",
        "ServiceProvider": "AWS",
        "ServiceName": "KinesisVideo",
        "DataTypeName": "SignalingChannel",
        "ResourceTypeIdentifier": "AWS::KinesisVideo::SignalingChannel",
        "ServiceTypeIdentifier": "AWS::KinesisVideo"
    },
    {
        "ServiceHumanReadableName": "Amazon Kinesis Video Streams",
        "ServiceProvider": "AWS",
        "ServiceName": "KinesisVideo",
        "DataTypeName": "Stream",
        "ResourceTypeIdentifier": "AWS::KinesisVideo::Stream",
        "ServiceTypeIdentifier": "AWS::KinesisVideo"
    },
    {
        "ServiceHumanReadableName": "AWS Key Management Service",
        "ServiceProvider": "AWS",
        "ServiceName": "KMS",
        "DataTypeName": "Alias",
        "ResourceTypeIdentifier": "AWS::KMS::Alias",
        "ServiceTypeIdentifier": "AWS::KMS"
    },
    {
        "ServiceHumanReadableName": "AWS Key Management Service",
        "ServiceProvider": "AWS",
        "ServiceName": "KMS",
        "DataTypeName": "Key",
        "ResourceTypeIdentifier": "AWS::KMS::Key",
        "ServiceTypeIdentifier": "AWS::KMS"
    },
    {
        "ServiceHumanReadableName": "AWS Key Management Service",
        "ServiceProvider": "AWS",
        "ServiceName": "KMS",
        "DataTypeName": "ReplicaKey",
        "ResourceTypeIdentifier": "AWS::KMS::ReplicaKey",
        "ServiceTypeIdentifier": "AWS::KMS"
    },
    {
        "ServiceHumanReadableName": "AWS Lake Formation",
        "ServiceProvider": "AWS",
        "ServiceName": "LakeFormation",
        "DataTypeName": "DataCellsFilter",
        "ResourceTypeIdentifier": "AWS::LakeFormation::DataCellsFilter",
        "ServiceTypeIdentifier": "AWS::LakeFormation"
    },
    {
        "ServiceHumanReadableName": "AWS Lake Formation",
        "ServiceProvider": "AWS",
        "ServiceName": "LakeFormation",
        "DataTypeName": "DataLakeSettings",
        "ResourceTypeIdentifier": "AWS::LakeFormation::DataLakeSettings",
        "ServiceTypeIdentifier": "AWS::LakeFormation"
    },
    {
        "ServiceHumanReadableName": "AWS Lake Formation",
        "ServiceProvider": "AWS",
        "ServiceName": "LakeFormation",
        "DataTypeName": "Permissions",
        "ResourceTypeIdentifier": "AWS::LakeFormation::Permissions",
        "ServiceTypeIdentifier": "AWS::LakeFormation"
    },
    {
        "ServiceHumanReadableName": "AWS Lake Formation",
        "ServiceProvider": "AWS",
        "ServiceName": "LakeFormation",
        "DataTypeName": "PrincipalPermissions",
        "ResourceTypeIdentifier": "AWS::LakeFormation::PrincipalPermissions",
        "ServiceTypeIdentifier": "AWS::LakeFormation"
    },
    {
        "ServiceHumanReadableName": "AWS Lake Formation",
        "ServiceProvider": "AWS",
        "ServiceName": "LakeFormation",
        "DataTypeName": "Resource",
        "ResourceTypeIdentifier": "AWS::LakeFormation::Resource",
        "ServiceTypeIdentifier": "AWS::LakeFormation"
    },
    {
        "ServiceHumanReadableName": "AWS Lake Formation",
        "ServiceProvider": "AWS",
        "ServiceName": "LakeFormation",
        "DataTypeName": "Tag",
        "ResourceTypeIdentifier": "AWS::LakeFormation::Tag",
        "ServiceTypeIdentifier": "AWS::LakeFormation"
    },
    {
        "ServiceHumanReadableName": "AWS Lake Formation",
        "ServiceProvider": "AWS",
        "ServiceName": "LakeFormation",
        "DataTypeName": "TagAssociation",
        "ResourceTypeIdentifier": "AWS::LakeFormation::TagAssociation",
        "ServiceTypeIdentifier": "AWS::LakeFormation"
    },
    {
        "ServiceHumanReadableName": "AWS Lambda",
        "ServiceProvider": "AWS",
        "ServiceName": "Lambda",
        "DataTypeName": "Alias",
        "ResourceTypeIdentifier": "AWS::Lambda::Alias",
        "ServiceTypeIdentifier": "AWS::Lambda"
    },
    {
        "ServiceHumanReadableName": "AWS Lambda",
        "ServiceProvider": "AWS",
        "ServiceName": "Lambda",
        "DataTypeName": "CodeSigningConfig",
        "ResourceTypeIdentifier": "AWS::Lambda::CodeSigningConfig",
        "ServiceTypeIdentifier": "AWS::Lambda"
    },
    {
        "ServiceHumanReadableName": "AWS Lambda",
        "ServiceProvider": "AWS",
        "ServiceName": "Lambda",
        "DataTypeName": "EventInvokeConfig",
        "ResourceTypeIdentifier": "AWS::Lambda::EventInvokeConfig",
        "ServiceTypeIdentifier": "AWS::Lambda"
    },
    {
        "ServiceHumanReadableName": "AWS Lambda",
        "ServiceProvider": "AWS",
        "ServiceName": "Lambda",
        "DataTypeName": "EventSourceMapping",
        "ResourceTypeIdentifier": "AWS::Lambda::EventSourceMapping",
        "ServiceTypeIdentifier": "AWS::Lambda"
    },
    {
        "ServiceHumanReadableName": "AWS Lambda",
        "ServiceProvider": "AWS",
        "ServiceName": "Lambda",
        "DataTypeName": "Function",
        "ResourceTypeIdentifier": "AWS::Lambda::Function",
        "ServiceTypeIdentifier": "AWS::Lambda"
    },
    {
        "ServiceHumanReadableName": "AWS Lambda",
        "ServiceProvider": "AWS",
        "ServiceName": "Lambda",
        "DataTypeName": "LayerVersion",
        "ResourceTypeIdentifier": "AWS::Lambda::LayerVersion",
        "ServiceTypeIdentifier": "AWS::Lambda"
    },
    {
        "ServiceHumanReadableName": "AWS Lambda",
        "ServiceProvider": "AWS",
        "ServiceName": "Lambda",
        "DataTypeName": "LayerVersionPermission",
        "ResourceTypeIdentifier": "AWS::Lambda::LayerVersionPermission",
        "ServiceTypeIdentifier": "AWS::Lambda"
    },
    {
        "ServiceHumanReadableName": "AWS Lambda",
        "ServiceProvider": "AWS",
        "ServiceName": "Lambda",
        "DataTypeName": "Permission",
        "ResourceTypeIdentifier": "AWS::Lambda::Permission",
        "ServiceTypeIdentifier": "AWS::Lambda"
    },
    {
        "ServiceHumanReadableName": "AWS Lambda",
        "ServiceProvider": "AWS",
        "ServiceName": "Lambda",
        "DataTypeName": "Url",
        "ResourceTypeIdentifier": "AWS::Lambda::Url",
        "ServiceTypeIdentifier": "AWS::Lambda"
    },
    {
        "ServiceHumanReadableName": "AWS Lambda",
        "ServiceProvider": "AWS",
        "ServiceName": "Lambda",
        "DataTypeName": "Version",
        "ResourceTypeIdentifier": "AWS::Lambda::Version",
        "ServiceTypeIdentifier": "AWS::Lambda"
    },
    {
        "ServiceHumanReadableName": "AWS Launch Wizard",
        "ServiceProvider": "AWS",
        "ServiceName": "LaunchWizard",
        "DataTypeName": "Deployment",
        "ResourceTypeIdentifier": "AWS::LaunchWizard::Deployment",
        "ServiceTypeIdentifier": "AWS::LaunchWizard"
    },
    {
        "ServiceHumanReadableName": "Amazon Lex",
        "ServiceProvider": "AWS",
        "ServiceName": "Lex",
        "DataTypeName": "Bot",
        "ResourceTypeIdentifier": "AWS::Lex::Bot",
        "ServiceTypeIdentifier": "AWS::Lex"
    },
    {
        "ServiceHumanReadableName": "Amazon Lex",
        "ServiceProvider": "AWS",
        "ServiceName": "Lex",
        "DataTypeName": "BotAlias",
        "ResourceTypeIdentifier": "AWS::Lex::BotAlias",
        "ServiceTypeIdentifier": "AWS::Lex"
    },
    {
        "ServiceHumanReadableName": "Amazon Lex",
        "ServiceProvider": "AWS",
        "ServiceName": "Lex",
        "DataTypeName": "BotVersion",
        "ResourceTypeIdentifier": "AWS::Lex::BotVersion",
        "ServiceTypeIdentifier": "AWS::Lex"
    },
    {
        "ServiceHumanReadableName": "Amazon Lex",
        "ServiceProvider": "AWS",
        "ServiceName": "Lex",
        "DataTypeName": "ResourcePolicy",
        "ResourceTypeIdentifier": "AWS::Lex::ResourcePolicy",
        "ServiceTypeIdentifier": "AWS::Lex"
    },
    {
        "ServiceHumanReadableName": "AWS License Manager",
        "ServiceProvider": "AWS",
        "ServiceName": "LicenseManager",
        "DataTypeName": "Grant",
        "ResourceTypeIdentifier": "AWS::LicenseManager::Grant",
        "ServiceTypeIdentifier": "AWS::LicenseManager"
    },
    {
        "ServiceHumanReadableName": "AWS License Manager",
        "ServiceProvider": "AWS",
        "ServiceName": "LicenseManager",
        "DataTypeName": "License",
        "ResourceTypeIdentifier": "AWS::LicenseManager::License",
        "ServiceTypeIdentifier": "AWS::LicenseManager"
    },
    {
        "ServiceHumanReadableName": "Amazon Lightsail",
        "ServiceProvider": "AWS",
        "ServiceName": "Lightsail",
        "DataTypeName": "Alarm",
        "ResourceTypeIdentifier": "AWS::Lightsail::Alarm",
        "ServiceTypeIdentifier": "AWS::Lightsail"
    },
    {
        "ServiceHumanReadableName": "Amazon Lightsail",
        "ServiceProvider": "AWS",
        "ServiceName": "Lightsail",
        "DataTypeName": "Bucket",
        "ResourceTypeIdentifier": "AWS::Lightsail::Bucket",
        "ServiceTypeIdentifier": "AWS::Lightsail"
    },
    {
        "ServiceHumanReadableName": "Amazon Lightsail",
        "ServiceProvider": "AWS",
        "ServiceName": "Lightsail",
        "DataTypeName": "Certificate",
        "ResourceTypeIdentifier": "AWS::Lightsail::Certificate",
        "ServiceTypeIdentifier": "AWS::Lightsail"
    },
    {
        "ServiceHumanReadableName": "Amazon Lightsail",
        "ServiceProvider": "AWS",
        "ServiceName": "Lightsail",
        "DataTypeName": "Container",
        "ResourceTypeIdentifier": "AWS::Lightsail::Container",
        "ServiceTypeIdentifier": "AWS::Lightsail"
    },
    {
        "ServiceHumanReadableName": "Amazon Lightsail",
        "ServiceProvider": "AWS",
        "ServiceName": "Lightsail",
        "DataTypeName": "Database",
        "ResourceTypeIdentifier": "AWS::Lightsail::Database",
        "ServiceTypeIdentifier": "AWS::Lightsail"
    },
    {
        "ServiceHumanReadableName": "Amazon Lightsail",
        "ServiceProvider": "AWS",
        "ServiceName": "Lightsail",
        "DataTypeName": "Disk",
        "ResourceTypeIdentifier": "AWS::Lightsail::Disk",
        "ServiceTypeIdentifier": "AWS::Lightsail"
    },
    {
        "ServiceHumanReadableName": "Amazon Lightsail",
        "ServiceProvider": "AWS",
        "ServiceName": "Lightsail",
        "DataTypeName": "Distribution",
        "ResourceTypeIdentifier": "AWS::Lightsail::Distribution",
        "ServiceTypeIdentifier": "AWS::Lightsail"
    },
    {
        "ServiceHumanReadableName": "Amazon Lightsail",
        "ServiceProvider": "AWS",
        "ServiceName": "Lightsail",
        "DataTypeName": "Instance",
        "ResourceTypeIdentifier": "AWS::Lightsail::Instance",
        "ServiceTypeIdentifier": "AWS::Lightsail"
    },
    {
        "ServiceHumanReadableName": "Amazon Lightsail",
        "ServiceProvider": "AWS",
        "ServiceName": "Lightsail",
        "DataTypeName": "LoadBalancer",
        "ResourceTypeIdentifier": "AWS::Lightsail::LoadBalancer",
        "ServiceTypeIdentifier": "AWS::Lightsail"
    },
    {
        "ServiceHumanReadableName": "Amazon Lightsail",
        "ServiceProvider": "AWS",
        "ServiceName": "Lightsail",
        "DataTypeName": "LoadBalancerTlsCertificate",
        "ResourceTypeIdentifier": "AWS::Lightsail::LoadBalancerTlsCertificate",
        "ServiceTypeIdentifier": "AWS::Lightsail"
    },
    {
        "ServiceHumanReadableName": "Amazon Lightsail",
        "ServiceProvider": "AWS",
        "ServiceName": "Lightsail",
        "DataTypeName": "StaticIp",
        "ResourceTypeIdentifier": "AWS::Lightsail::StaticIp",
        "ServiceTypeIdentifier": "AWS::Lightsail"
    },
    {
        "ServiceHumanReadableName": "Amazon Location Service",
        "ServiceProvider": "AWS",
        "ServiceName": "Location",
        "DataTypeName": "APIKey",
        "ResourceTypeIdentifier": "AWS::Location::APIKey",
        "ServiceTypeIdentifier": "AWS::Location"
    },
    {
        "ServiceHumanReadableName": "Amazon Location Service",
        "ServiceProvider": "AWS",
        "ServiceName": "Location",
        "DataTypeName": "GeofenceCollection",
        "ResourceTypeIdentifier": "AWS::Location::GeofenceCollection",
        "ServiceTypeIdentifier": "AWS::Location"
    },
    {
        "ServiceHumanReadableName": "Amazon Location Service",
        "ServiceProvider": "AWS",
        "ServiceName": "Location",
        "DataTypeName": "Map",
        "ResourceTypeIdentifier": "AWS::Location::Map",
        "ServiceTypeIdentifier": "AWS::Location"
    },
    {
        "ServiceHumanReadableName": "Amazon Location Service",
        "ServiceProvider": "AWS",
        "ServiceName": "Location",
        "DataTypeName": "PlaceIndex",
        "ResourceTypeIdentifier": "AWS::Location::PlaceIndex",
        "ServiceTypeIdentifier": "AWS::Location"
    },
    {
        "ServiceHumanReadableName": "Amazon Location Service",
        "ServiceProvider": "AWS",
        "ServiceName": "Location",
        "DataTypeName": "RouteCalculator",
        "ResourceTypeIdentifier": "AWS::Location::RouteCalculator",
        "ServiceTypeIdentifier": "AWS::Location"
    },
    {
        "ServiceHumanReadableName": "Amazon Location Service",
        "ServiceProvider": "AWS",
        "ServiceName": "Location",
        "DataTypeName": "Tracker",
        "ResourceTypeIdentifier": "AWS::Location::Tracker",
        "ServiceTypeIdentifier": "AWS::Location"
    },
    {
        "ServiceHumanReadableName": "Amazon Location Service",
        "ServiceProvider": "AWS",
        "ServiceName": "Location",
        "DataTypeName": "TrackerConsumer",
        "ResourceTypeIdentifier": "AWS::Location::TrackerConsumer",
        "ServiceTypeIdentifier": "AWS::Location"
    },
    {
        "ServiceHumanReadableName": "Amazon Lookout for Equipment",
        "ServiceProvider": "AWS",
        "ServiceName": "LookoutEquipment",
        "DataTypeName": "InferenceScheduler",
        "ResourceTypeIdentifier": "AWS::LookoutEquipment::InferenceScheduler",
        "ServiceTypeIdentifier": "AWS::LookoutEquipment"
    },
    {
        "ServiceHumanReadableName": "Amazon Lookout for Metrics",
        "ServiceProvider": "AWS",
        "ServiceName": "LookoutMetrics",
        "DataTypeName": "Alert",
        "ResourceTypeIdentifier": "AWS::LookoutMetrics::Alert",
        "ServiceTypeIdentifier": "AWS::LookoutMetrics"
    },
    {
        "ServiceHumanReadableName": "Amazon Lookout for Metrics",
        "ServiceProvider": "AWS",
        "ServiceName": "LookoutMetrics",
        "DataTypeName": "AnomalyDetector",
        "ResourceTypeIdentifier": "AWS::LookoutMetrics::AnomalyDetector",
        "ServiceTypeIdentifier": "AWS::LookoutMetrics"
    },
    {
        "ServiceHumanReadableName": "Amazon Lookout for Vision",
        "ServiceProvider": "AWS",
        "ServiceName": "LookoutVision",
        "DataTypeName": "Project",
        "ResourceTypeIdentifier": "AWS::LookoutVision::Project",
        "ServiceTypeIdentifier": "AWS::LookoutVision"
    },
    {
        "ServiceHumanReadableName": "AWS Mainframe Modernization",
        "ServiceProvider": "AWS",
        "ServiceName": "M2",
        "DataTypeName": "Application",
        "ResourceTypeIdentifier": "AWS::M2::Application",
        "ServiceTypeIdentifier": "AWS::M2"
    },
    {
        "ServiceHumanReadableName": "AWS Mainframe Modernization",
        "ServiceProvider": "AWS",
        "ServiceName": "M2",
        "DataTypeName": "Environment",
        "ResourceTypeIdentifier": "AWS::M2::Environment",
        "ServiceTypeIdentifier": "AWS::M2"
    },
    {
        "ServiceHumanReadableName": "AWS Mainframe Modernization Application Testing",
        "ServiceProvider": "AWS",
        "ServiceName": "AppTest",
        "DataTypeName": "TestCase",
        "ResourceTypeIdentifier": "AWS::AppTest::TestCase",
        "ServiceTypeIdentifier": "AWS::AppTest"
    },
    {
        "ServiceHumanReadableName": "Amazon Macie",
        "ServiceProvider": "AWS",
        "ServiceName": "Macie",
        "DataTypeName": "AllowList",
        "ResourceTypeIdentifier": "AWS::Macie::AllowList",
        "ServiceTypeIdentifier": "AWS::Macie"
    },
    {
        "ServiceHumanReadableName": "Amazon Macie",
        "ServiceProvider": "AWS",
        "ServiceName": "Macie",
        "DataTypeName": "CustomDataIdentifier",
        "ResourceTypeIdentifier": "AWS::Macie::CustomDataIdentifier",
        "ServiceTypeIdentifier": "AWS::Macie"
    },
    {
        "ServiceHumanReadableName": "Amazon Macie",
        "ServiceProvider": "AWS",
        "ServiceName": "Macie",
        "DataTypeName": "FindingsFilter",
        "ResourceTypeIdentifier": "AWS::Macie::FindingsFilter",
        "ServiceTypeIdentifier": "AWS::Macie"
    },
    {
        "ServiceHumanReadableName": "Amazon Macie",
        "ServiceProvider": "AWS",
        "ServiceName": "Macie",
        "DataTypeName": "Session",
        "ResourceTypeIdentifier": "AWS::Macie::Session",
        "ServiceTypeIdentifier": "AWS::Macie"
    },
    {
        "ServiceHumanReadableName": "Amazon Managed Blockchain",
        "ServiceProvider": "AWS",
        "ServiceName": "ManagedBlockchain",
        "DataTypeName": "Accessor",
        "ResourceTypeIdentifier": "AWS::ManagedBlockchain::Accessor",
        "ServiceTypeIdentifier": "AWS::ManagedBlockchain"
    },
    {
        "ServiceHumanReadableName": "Amazon Managed Blockchain",
        "ServiceProvider": "AWS",
        "ServiceName": "ManagedBlockchain",
        "DataTypeName": "Member",
        "ResourceTypeIdentifier": "AWS::ManagedBlockchain::Member",
        "ServiceTypeIdentifier": "AWS::ManagedBlockchain"
    },
    {
        "ServiceHumanReadableName": "Amazon Managed Blockchain",
        "ServiceProvider": "AWS",
        "ServiceName": "ManagedBlockchain",
        "DataTypeName": "Node",
        "ResourceTypeIdentifier": "AWS::ManagedBlockchain::Node",
        "ServiceTypeIdentifier": "AWS::ManagedBlockchain"
    },
    {
        "ServiceHumanReadableName": "AWS Elemental MediaConnect",
        "ServiceProvider": "AWS",
        "ServiceName": "MediaConnect",
        "DataTypeName": "Bridge",
        "ResourceTypeIdentifier": "AWS::MediaConnect::Bridge",
        "ServiceTypeIdentifier": "AWS::MediaConnect"
    },
    {
        "ServiceHumanReadableName": "AWS Elemental MediaConnect",
        "ServiceProvider": "AWS",
        "ServiceName": "MediaConnect",
        "DataTypeName": "BridgeOutput",
        "ResourceTypeIdentifier": "AWS::MediaConnect::BridgeOutput",
        "ServiceTypeIdentifier": "AWS::MediaConnect"
    },
    {
        "ServiceHumanReadableName": "AWS Elemental MediaConnect",
        "ServiceProvider": "AWS",
        "ServiceName": "MediaConnect",
        "DataTypeName": "BridgeSource",
        "ResourceTypeIdentifier": "AWS::MediaConnect::BridgeSource",
        "ServiceTypeIdentifier": "AWS::MediaConnect"
    },
    {
        "ServiceHumanReadableName": "AWS Elemental MediaConnect",
        "ServiceProvider": "AWS",
        "ServiceName": "MediaConnect",
        "DataTypeName": "Flow",
        "ResourceTypeIdentifier": "AWS::MediaConnect::Flow",
        "ServiceTypeIdentifier": "AWS::MediaConnect"
    },
    {
        "ServiceHumanReadableName": "AWS Elemental MediaConnect",
        "ServiceProvider": "AWS",
        "ServiceName": "MediaConnect",
        "DataTypeName": "FlowEntitlement",
        "ResourceTypeIdentifier": "AWS::MediaConnect::FlowEntitlement",
        "ServiceTypeIdentifier": "AWS::MediaConnect"
    },
    {
        "ServiceHumanReadableName": "AWS Elemental MediaConnect",
        "ServiceProvider": "AWS",
        "ServiceName": "MediaConnect",
        "DataTypeName": "FlowOutput",
        "ResourceTypeIdentifier": "AWS::MediaConnect::FlowOutput",
        "ServiceTypeIdentifier": "AWS::MediaConnect"
    },
    {
        "ServiceHumanReadableName": "AWS Elemental MediaConnect",
        "ServiceProvider": "AWS",
        "ServiceName": "MediaConnect",
        "DataTypeName": "FlowSource",
        "ResourceTypeIdentifier": "AWS::MediaConnect::FlowSource",
        "ServiceTypeIdentifier": "AWS::MediaConnect"
    },
    {
        "ServiceHumanReadableName": "AWS Elemental MediaConnect",
        "ServiceProvider": "AWS",
        "ServiceName": "MediaConnect",
        "DataTypeName": "FlowVpcInterface",
        "ResourceTypeIdentifier": "AWS::MediaConnect::FlowVpcInterface",
        "ServiceTypeIdentifier": "AWS::MediaConnect"
    },
    {
        "ServiceHumanReadableName": "AWS Elemental MediaConnect",
        "ServiceProvider": "AWS",
        "ServiceName": "MediaConnect",
        "DataTypeName": "Gateway",
        "ResourceTypeIdentifier": "AWS::MediaConnect::Gateway",
        "ServiceTypeIdentifier": "AWS::MediaConnect"
    },
    {
        "ServiceHumanReadableName": "AWS Elemental MediaConvert",
        "ServiceProvider": "AWS",
        "ServiceName": "MediaConvert",
        "DataTypeName": "JobTemplate",
        "ResourceTypeIdentifier": "AWS::MediaConvert::JobTemplate",
        "ServiceTypeIdentifier": "AWS::MediaConvert"
    },
    {
        "ServiceHumanReadableName": "AWS Elemental MediaConvert",
        "ServiceProvider": "AWS",
        "ServiceName": "MediaConvert",
        "DataTypeName": "Preset",
        "ResourceTypeIdentifier": "AWS::MediaConvert::Preset",
        "ServiceTypeIdentifier": "AWS::MediaConvert"
    },
    {
        "ServiceHumanReadableName": "AWS Elemental MediaConvert",
        "ServiceProvider": "AWS",
        "ServiceName": "MediaConvert",
        "DataTypeName": "Queue",
        "ResourceTypeIdentifier": "AWS::MediaConvert::Queue",
        "ServiceTypeIdentifier": "AWS::MediaConvert"
    },
    {
        "ServiceHumanReadableName": "AWS Elemental MediaLive",
        "ServiceProvider": "AWS",
        "ServiceName": "MediaLive",
        "DataTypeName": "Channel",
        "ResourceTypeIdentifier": "AWS::MediaLive::Channel",
        "ServiceTypeIdentifier": "AWS::MediaLive"
    },
    {
        "ServiceHumanReadableName": "AWS Elemental MediaLive",
        "ServiceProvider": "AWS",
        "ServiceName": "MediaLive",
        "DataTypeName": "ChannelPlacementGroup",
        "ResourceTypeIdentifier": "AWS::MediaLive::ChannelPlacementGroup",
        "ServiceTypeIdentifier": "AWS::MediaLive"
    },
    {
        "ServiceHumanReadableName": "AWS Elemental MediaLive",
        "ServiceProvider": "AWS",
        "ServiceName": "MediaLive",
        "DataTypeName": "CloudWatchAlarmTemplate",
        "ResourceTypeIdentifier": "AWS::MediaLive::CloudWatchAlarmTemplate",
        "ServiceTypeIdentifier": "AWS::MediaLive"
    },
    {
        "ServiceHumanReadableName": "AWS Elemental MediaLive",
        "ServiceProvider": "AWS",
        "ServiceName": "MediaLive",
        "DataTypeName": "CloudWatchAlarmTemplateGroup",
        "ResourceTypeIdentifier": "AWS::MediaLive::CloudWatchAlarmTemplateGroup",
        "ServiceTypeIdentifier": "AWS::MediaLive"
    },
    {
        "ServiceHumanReadableName": "AWS Elemental MediaLive",
        "ServiceProvider": "AWS",
        "ServiceName": "MediaLive",
        "DataTypeName": "Cluster",
        "ResourceTypeIdentifier": "AWS::MediaLive::Cluster",
        "ServiceTypeIdentifier": "AWS::MediaLive"
    },
    {
        "ServiceHumanReadableName": "AWS Elemental MediaLive",
        "ServiceProvider": "AWS",
        "ServiceName": "MediaLive",
        "DataTypeName": "EventBridgeRuleTemplate",
        "ResourceTypeIdentifier": "AWS::MediaLive::EventBridgeRuleTemplate",
        "ServiceTypeIdentifier": "AWS::MediaLive"
    },
    {
        "ServiceHumanReadableName": "AWS Elemental MediaLive",
        "ServiceProvider": "AWS",
        "ServiceName": "MediaLive",
        "DataTypeName": "EventBridgeRuleTemplateGroup",
        "ResourceTypeIdentifier": "AWS::MediaLive::EventBridgeRuleTemplateGroup",
        "ServiceTypeIdentifier": "AWS::MediaLive"
    },
    {
        "ServiceHumanReadableName": "AWS Elemental MediaLive",
        "ServiceProvider": "AWS",
        "ServiceName": "MediaLive",
        "DataTypeName": "Input",
        "ResourceTypeIdentifier": "AWS::MediaLive::Input",
        "ServiceTypeIdentifier": "AWS::MediaLive"
    },
    {
        "ServiceHumanReadableName": "AWS Elemental MediaLive",
        "ServiceProvider": "AWS",
        "ServiceName": "MediaLive",
        "DataTypeName": "InputSecurityGroup",
        "ResourceTypeIdentifier": "AWS::MediaLive::InputSecurityGroup",
        "ServiceTypeIdentifier": "AWS::MediaLive"
    },
    {
        "ServiceHumanReadableName": "AWS Elemental MediaLive",
        "ServiceProvider": "AWS",
        "ServiceName": "MediaLive",
        "DataTypeName": "Multiplex",
        "ResourceTypeIdentifier": "AWS::MediaLive::Multiplex",
        "ServiceTypeIdentifier": "AWS::MediaLive"
    },
    {
        "ServiceHumanReadableName": "AWS Elemental MediaLive",
        "ServiceProvider": "AWS",
        "ServiceName": "MediaLive",
        "DataTypeName": "Multiplexprogram",
        "ResourceTypeIdentifier": "AWS::MediaLive::Multiplexprogram",
        "ServiceTypeIdentifier": "AWS::MediaLive"
    },
    {
        "ServiceHumanReadableName": "AWS Elemental MediaLive",
        "ServiceProvider": "AWS",
        "ServiceName": "MediaLive",
        "DataTypeName": "Network",
        "ResourceTypeIdentifier": "AWS::MediaLive::Network",
        "ServiceTypeIdentifier": "AWS::MediaLive"
    },
    {
        "ServiceHumanReadableName": "AWS Elemental MediaLive",
        "ServiceProvider": "AWS",
        "ServiceName": "MediaLive",
        "DataTypeName": "SdiSource",
        "ResourceTypeIdentifier": "AWS::MediaLive::SdiSource",
        "ServiceTypeIdentifier": "AWS::MediaLive"
    },
    {
        "ServiceHumanReadableName": "AWS Elemental MediaLive",
        "ServiceProvider": "AWS",
        "ServiceName": "MediaLive",
        "DataTypeName": "SignalMap",
        "ResourceTypeIdentifier": "AWS::MediaLive::SignalMap",
        "ServiceTypeIdentifier": "AWS::MediaLive"
    },
    {
        "ServiceHumanReadableName": "AWS Elemental MediaPackage",
        "ServiceProvider": "AWS",
        "ServiceName": "MediaPackage",
        "DataTypeName": "Asset",
        "ResourceTypeIdentifier": "AWS::MediaPackage::Asset",
        "ServiceTypeIdentifier": "AWS::MediaPackage"
    },
    {
        "ServiceHumanReadableName": "AWS Elemental MediaPackage",
        "ServiceProvider": "AWS",
        "ServiceName": "MediaPackage",
        "DataTypeName": "Channel",
        "ResourceTypeIdentifier": "AWS::MediaPackage::Channel",
        "ServiceTypeIdentifier": "AWS::MediaPackage"
    },
    {
        "ServiceHumanReadableName": "AWS Elemental MediaPackage",
        "ServiceProvider": "AWS",
        "ServiceName": "MediaPackage",
        "DataTypeName": "OriginEndpoint",
        "ResourceTypeIdentifier": "AWS::MediaPackage::OriginEndpoint",
        "ServiceTypeIdentifier": "AWS::MediaPackage"
    },
    {
        "ServiceHumanReadableName": "AWS Elemental MediaPackage",
        "ServiceProvider": "AWS",
        "ServiceName": "MediaPackage",
        "DataTypeName": "PackagingConfiguration",
        "ResourceTypeIdentifier": "AWS::MediaPackage::PackagingConfiguration",
        "ServiceTypeIdentifier": "AWS::MediaPackage"
    },
    {
        "ServiceHumanReadableName": "AWS Elemental MediaPackage",
        "ServiceProvider": "AWS",
        "ServiceName": "MediaPackage",
        "DataTypeName": "PackagingGroup",
        "ResourceTypeIdentifier": "AWS::MediaPackage::PackagingGroup",
        "ServiceTypeIdentifier": "AWS::MediaPackage"
    },
    {
        "ServiceHumanReadableName": "AWS Elemental MediaPackage V2",
        "ServiceProvider": "AWS",
        "ServiceName": "MediaPackageV2",
        "DataTypeName": "Channel",
        "ResourceTypeIdentifier": "AWS::MediaPackageV2::Channel",
        "ServiceTypeIdentifier": "AWS::MediaPackageV2"
    },
    {
        "ServiceHumanReadableName": "AWS Elemental MediaPackage V2",
        "ServiceProvider": "AWS",
        "ServiceName": "MediaPackageV2",
        "DataTypeName": "ChannelGroup",
        "ResourceTypeIdentifier": "AWS::MediaPackageV2::ChannelGroup",
        "ServiceTypeIdentifier": "AWS::MediaPackageV2"
    },
    {
        "ServiceHumanReadableName": "AWS Elemental MediaPackage V2",
        "ServiceProvider": "AWS",
        "ServiceName": "MediaPackageV2",
        "DataTypeName": "ChannelPolicy",
        "ResourceTypeIdentifier": "AWS::MediaPackageV2::ChannelPolicy",
        "ServiceTypeIdentifier": "AWS::MediaPackageV2"
    },
    {
        "ServiceHumanReadableName": "AWS Elemental MediaPackage V2",
        "ServiceProvider": "AWS",
        "ServiceName": "MediaPackageV2",
        "DataTypeName": "OriginEndpoint",
        "ResourceTypeIdentifier": "AWS::MediaPackageV2::OriginEndpoint",
        "ServiceTypeIdentifier": "AWS::MediaPackageV2"
    },
    {
        "ServiceHumanReadableName": "AWS Elemental MediaPackage V2",
        "ServiceProvider": "AWS",
        "ServiceName": "MediaPackageV2",
        "DataTypeName": "OriginEndpointPolicy",
        "ResourceTypeIdentifier": "AWS::MediaPackageV2::OriginEndpointPolicy",
        "ServiceTypeIdentifier": "AWS::MediaPackageV2"
    },
    {
        "ServiceHumanReadableName": "AWS Elemental MediaTailor",
        "ServiceProvider": "AWS",
        "ServiceName": "MediaTailor",
        "DataTypeName": "Channel",
        "ResourceTypeIdentifier": "AWS::MediaTailor::Channel",
        "ServiceTypeIdentifier": "AWS::MediaTailor"
    },
    {
        "ServiceHumanReadableName": "AWS Elemental MediaTailor",
        "ServiceProvider": "AWS",
        "ServiceName": "MediaTailor",
        "DataTypeName": "ChannelPolicy",
        "ResourceTypeIdentifier": "AWS::MediaTailor::ChannelPolicy",
        "ServiceTypeIdentifier": "AWS::MediaTailor"
    },
    {
        "ServiceHumanReadableName": "AWS Elemental MediaTailor",
        "ServiceProvider": "AWS",
        "ServiceName": "MediaTailor",
        "DataTypeName": "LiveSource",
        "ResourceTypeIdentifier": "AWS::MediaTailor::LiveSource",
        "ServiceTypeIdentifier": "AWS::MediaTailor"
    },
    {
        "ServiceHumanReadableName": "AWS Elemental MediaTailor",
        "ServiceProvider": "AWS",
        "ServiceName": "MediaTailor",
        "DataTypeName": "PlaybackConfiguration",
        "ResourceTypeIdentifier": "AWS::MediaTailor::PlaybackConfiguration",
        "ServiceTypeIdentifier": "AWS::MediaTailor"
    },
    {
        "ServiceHumanReadableName": "AWS Elemental MediaTailor",
        "ServiceProvider": "AWS",
        "ServiceName": "MediaTailor",
        "DataTypeName": "SourceLocation",
        "ResourceTypeIdentifier": "AWS::MediaTailor::SourceLocation",
        "ServiceTypeIdentifier": "AWS::MediaTailor"
    },
    {
        "ServiceHumanReadableName": "AWS Elemental MediaTailor",
        "ServiceProvider": "AWS",
        "ServiceName": "MediaTailor",
        "DataTypeName": "VodSource",
        "ResourceTypeIdentifier": "AWS::MediaTailor::VodSource",
        "ServiceTypeIdentifier": "AWS::MediaTailor"
    },
    {
        "ServiceHumanReadableName": "AWS Elemental MediaStore",
        "ServiceProvider": "AWS",
        "ServiceName": "MediaStore",
        "DataTypeName": "Container",
        "ResourceTypeIdentifier": "AWS::MediaStore::Container",
        "ServiceTypeIdentifier": "AWS::MediaStore"
    },
    {
        "ServiceHumanReadableName": "Amazon MQ",
        "ServiceProvider": "AWS",
        "ServiceName": "AmazonMQ",
        "DataTypeName": "Broker",
        "ResourceTypeIdentifier": "AWS::AmazonMQ::Broker",
        "ServiceTypeIdentifier": "AWS::AmazonMQ"
    },
    {
        "ServiceHumanReadableName": "Amazon MQ",
        "ServiceProvider": "AWS",
        "ServiceName": "AmazonMQ",
        "DataTypeName": "Configuration",
        "ResourceTypeIdentifier": "AWS::AmazonMQ::Configuration",
        "ServiceTypeIdentifier": "AWS::AmazonMQ"
    },
    {
        "ServiceHumanReadableName": "Amazon MQ",
        "ServiceProvider": "AWS",
        "ServiceName": "AmazonMQ",
        "DataTypeName": "ConfigurationAssociation",
        "ResourceTypeIdentifier": "AWS::AmazonMQ::ConfigurationAssociation",
        "ServiceTypeIdentifier": "AWS::AmazonMQ"
    },
    {
        "ServiceHumanReadableName": "Amazon MemoryDB",
        "ServiceProvider": "AWS",
        "ServiceName": "MemoryDB",
        "DataTypeName": "ACL",
        "ResourceTypeIdentifier": "AWS::MemoryDB::ACL",
        "ServiceTypeIdentifier": "AWS::MemoryDB"
    },
    {
        "ServiceHumanReadableName": "Amazon MemoryDB",
        "ServiceProvider": "AWS",
        "ServiceName": "MemoryDB",
        "DataTypeName": "Cluster",
        "ResourceTypeIdentifier": "AWS::MemoryDB::Cluster",
        "ServiceTypeIdentifier": "AWS::MemoryDB"
    },
    {
        "ServiceHumanReadableName": "Amazon MemoryDB",
        "ServiceProvider": "AWS",
        "ServiceName": "MemoryDB",
        "DataTypeName": "ParameterGroup",
        "ResourceTypeIdentifier": "AWS::MemoryDB::ParameterGroup",
        "ServiceTypeIdentifier": "AWS::MemoryDB"
    },
    {
        "ServiceHumanReadableName": "Amazon MemoryDB",
        "ServiceProvider": "AWS",
        "ServiceName": "MemoryDB",
        "DataTypeName": "SubnetGroup",
        "ResourceTypeIdentifier": "AWS::MemoryDB::SubnetGroup",
        "ServiceTypeIdentifier": "AWS::MemoryDB"
    },
    {
        "ServiceHumanReadableName": "Amazon MemoryDB",
        "ServiceProvider": "AWS",
        "ServiceName": "MemoryDB",
        "DataTypeName": "User",
        "ResourceTypeIdentifier": "AWS::MemoryDB::User",
        "ServiceTypeIdentifier": "AWS::MemoryDB"
    },
    {
        "ServiceHumanReadableName": "Amazon Managed Streaming for Apache Kafka",
        "ServiceProvider": "AWS",
        "ServiceName": "MSK",
        "DataTypeName": "BatchScramSecret",
        "ResourceTypeIdentifier": "AWS::MSK::BatchScramSecret",
        "ServiceTypeIdentifier": "AWS::MSK"
    },
    {
        "ServiceHumanReadableName": "Amazon Managed Streaming for Apache Kafka",
        "ServiceProvider": "AWS",
        "ServiceName": "MSK",
        "DataTypeName": "Cluster",
        "ResourceTypeIdentifier": "AWS::MSK::Cluster",
        "ServiceTypeIdentifier": "AWS::MSK"
    },
    {
        "ServiceHumanReadableName": "Amazon Managed Streaming for Apache Kafka",
        "ServiceProvider": "AWS",
        "ServiceName": "MSK",
        "DataTypeName": "ClusterPolicy",
        "ResourceTypeIdentifier": "AWS::MSK::ClusterPolicy",
        "ServiceTypeIdentifier": "AWS::MSK"
    },
    {
        "ServiceHumanReadableName": "Amazon Managed Streaming for Apache Kafka",
        "ServiceProvider": "AWS",
        "ServiceName": "MSK",
        "DataTypeName": "Configuration",
        "ResourceTypeIdentifier": "AWS::MSK::Configuration",
        "ServiceTypeIdentifier": "AWS::MSK"
    },
    {
        "ServiceHumanReadableName": "Amazon Managed Streaming for Apache Kafka",
        "ServiceProvider": "AWS",
        "ServiceName": "MSK",
        "DataTypeName": "Replicator",
        "ResourceTypeIdentifier": "AWS::MSK::Replicator",
        "ServiceTypeIdentifier": "AWS::MSK"
    },
    {
        "ServiceHumanReadableName": "Amazon Managed Streaming for Apache Kafka",
        "ServiceProvider": "AWS",
        "ServiceName": "MSK",
        "DataTypeName": "ServerlessCluster",
        "ResourceTypeIdentifier": "AWS::MSK::ServerlessCluster",
        "ServiceTypeIdentifier": "AWS::MSK"
    },
    {
        "ServiceHumanReadableName": "Amazon Managed Streaming for Apache Kafka",
        "ServiceProvider": "AWS",
        "ServiceName": "MSK",
        "DataTypeName": "VpcConnection",
        "ResourceTypeIdentifier": "AWS::MSK::VpcConnection",
        "ServiceTypeIdentifier": "AWS::MSK"
    },
    {
        "ServiceHumanReadableName": "Amazon Managed Streaming for Apache Kafka Connect",
        "ServiceProvider": "AWS",
        "ServiceName": "KafkaConnect",
        "DataTypeName": "Connector",
        "ResourceTypeIdentifier": "AWS::KafkaConnect::Connector",
        "ServiceTypeIdentifier": "AWS::KafkaConnect"
    },
    {
        "ServiceHumanReadableName": "Amazon Managed Streaming for Apache Kafka Connect",
        "ServiceProvider": "AWS",
        "ServiceName": "KafkaConnect",
        "DataTypeName": "CustomPlugin",
        "ResourceTypeIdentifier": "AWS::KafkaConnect::CustomPlugin",
        "ServiceTypeIdentifier": "AWS::KafkaConnect"
    },
    {
        "ServiceHumanReadableName": "Amazon Managed Streaming for Apache Kafka Connect",
        "ServiceProvider": "AWS",
        "ServiceName": "KafkaConnect",
        "DataTypeName": "WorkerConfiguration",
        "ResourceTypeIdentifier": "AWS::KafkaConnect::WorkerConfiguration",
        "ServiceTypeIdentifier": "AWS::KafkaConnect"
    },
    {
        "ServiceHumanReadableName": "Amazon Managed Workflows for Apache Airflow",
        "ServiceProvider": "AWS",
        "ServiceName": "MWAA",
        "DataTypeName": "Environment",
        "ResourceTypeIdentifier": "AWS::MWAA::Environment",
        "ServiceTypeIdentifier": "AWS::MWAA"
    },
    {
        "ServiceHumanReadableName": "Amazon Neptune",
        "ServiceProvider": "AWS",
        "ServiceName": "Neptune",
        "DataTypeName": "DBCluster",
        "ResourceTypeIdentifier": "AWS::Neptune::DBCluster",
        "ServiceTypeIdentifier": "AWS::Neptune"
    },
    {
        "ServiceHumanReadableName": "Amazon Neptune",
        "ServiceProvider": "AWS",
        "ServiceName": "Neptune",
        "DataTypeName": "DBClusterParameterGroup",
        "ResourceTypeIdentifier": "AWS::Neptune::DBClusterParameterGroup",
        "ServiceTypeIdentifier": "AWS::Neptune"
    },
    {
        "ServiceHumanReadableName": "Amazon Neptune",
        "ServiceProvider": "AWS",
        "ServiceName": "Neptune",
        "DataTypeName": "DBInstance",
        "ResourceTypeIdentifier": "AWS::Neptune::DBInstance",
        "ServiceTypeIdentifier": "AWS::Neptune"
    },
    {
        "ServiceHumanReadableName": "Amazon Neptune",
        "ServiceProvider": "AWS",
        "ServiceName": "Neptune",
        "DataTypeName": "DBParameterGroup",
        "ResourceTypeIdentifier": "AWS::Neptune::DBParameterGroup",
        "ServiceTypeIdentifier": "AWS::Neptune"
    },
    {
        "ServiceHumanReadableName": "Amazon Neptune",
        "ServiceProvider": "AWS",
        "ServiceName": "Neptune",
        "DataTypeName": "DBSubnetGroup",
        "ResourceTypeIdentifier": "AWS::Neptune::DBSubnetGroup",
        "ServiceTypeIdentifier": "AWS::Neptune"
    },
    {
        "ServiceHumanReadableName": "Amazon Neptune",
        "ServiceProvider": "AWS",
        "ServiceName": "Neptune",
        "DataTypeName": "EventSubscription",
        "ResourceTypeIdentifier": "AWS::Neptune::EventSubscription",
        "ServiceTypeIdentifier": "AWS::Neptune"
    },
    {
        "ServiceHumanReadableName": "Amazon Neptune Analytics",
        "ServiceProvider": "AWS",
        "ServiceName": "NeptuneGraph",
        "DataTypeName": "Graph",
        "ResourceTypeIdentifier": "AWS::NeptuneGraph::Graph",
        "ServiceTypeIdentifier": "AWS::NeptuneGraph"
    },
    {
        "ServiceHumanReadableName": "Amazon Neptune Analytics",
        "ServiceProvider": "AWS",
        "ServiceName": "NeptuneGraph",
        "DataTypeName": "PrivateGraphEndpoint",
        "ResourceTypeIdentifier": "AWS::NeptuneGraph::PrivateGraphEndpoint",
        "ServiceTypeIdentifier": "AWS::NeptuneGraph"
    },
    {
        "ServiceHumanReadableName": "AWS Network Firewall",
        "ServiceProvider": "AWS",
        "ServiceName": "NetworkFirewall",
        "DataTypeName": "Firewall",
        "ResourceTypeIdentifier": "AWS::NetworkFirewall::Firewall",
        "ServiceTypeIdentifier": "AWS::NetworkFirewall"
    },
    {
        "ServiceHumanReadableName": "AWS Network Firewall",
        "ServiceProvider": "AWS",
        "ServiceName": "NetworkFirewall",
        "DataTypeName": "FirewallPolicy",
        "ResourceTypeIdentifier": "AWS::NetworkFirewall::FirewallPolicy",
        "ServiceTypeIdentifier": "AWS::NetworkFirewall"
    },
    {
        "ServiceHumanReadableName": "AWS Network Firewall",
        "ServiceProvider": "AWS",
        "ServiceName": "NetworkFirewall",
        "DataTypeName": "LoggingConfiguration",
        "ResourceTypeIdentifier": "AWS::NetworkFirewall::LoggingConfiguration",
        "ServiceTypeIdentifier": "AWS::NetworkFirewall"
    },
    {
        "ServiceHumanReadableName": "AWS Network Firewall",
        "ServiceProvider": "AWS",
        "ServiceName": "NetworkFirewall",
        "DataTypeName": "RuleGroup",
        "ResourceTypeIdentifier": "AWS::NetworkFirewall::RuleGroup",
        "ServiceTypeIdentifier": "AWS::NetworkFirewall"
    },
    {
        "ServiceHumanReadableName": "AWS Network Firewall",
        "ServiceProvider": "AWS",
        "ServiceName": "NetworkFirewall",
        "DataTypeName": "TLSInspectionConfiguration",
        "ResourceTypeIdentifier": "AWS::NetworkFirewall::TLSInspectionConfiguration",
        "ServiceTypeIdentifier": "AWS::NetworkFirewall"
    },
    {
        "ServiceHumanReadableName": "AWS Network Manager",
        "ServiceProvider": "AWS",
        "ServiceName": "NetworkManager",
        "DataTypeName": "ConnectAttachment",
        "ResourceTypeIdentifier": "AWS::NetworkManager::ConnectAttachment",
        "ServiceTypeIdentifier": "AWS::NetworkManager"
    },
    {
        "ServiceHumanReadableName": "AWS Network Manager",
        "ServiceProvider": "AWS",
        "ServiceName": "NetworkManager",
        "DataTypeName": "ConnectPeer",
        "ResourceTypeIdentifier": "AWS::NetworkManager::ConnectPeer",
        "ServiceTypeIdentifier": "AWS::NetworkManager"
    },
    {
        "ServiceHumanReadableName": "AWS Network Manager",
        "ServiceProvider": "AWS",
        "ServiceName": "NetworkManager",
        "DataTypeName": "CoreNetwork",
        "ResourceTypeIdentifier": "AWS::NetworkManager::CoreNetwork",
        "ServiceTypeIdentifier": "AWS::NetworkManager"
    },
    {
        "ServiceHumanReadableName": "AWS Network Manager",
        "ServiceProvider": "AWS",
        "ServiceName": "NetworkManager",
        "DataTypeName": "CustomerGatewayAssociation",
        "ResourceTypeIdentifier": "AWS::NetworkManager::CustomerGatewayAssociation",
        "ServiceTypeIdentifier": "AWS::NetworkManager"
    },
    {
        "ServiceHumanReadableName": "AWS Network Manager",
        "ServiceProvider": "AWS",
        "ServiceName": "NetworkManager",
        "DataTypeName": "Device",
        "ResourceTypeIdentifier": "AWS::NetworkManager::Device",
        "ServiceTypeIdentifier": "AWS::NetworkManager"
    },
    {
        "ServiceHumanReadableName": "AWS Network Manager",
        "ServiceProvider": "AWS",
        "ServiceName": "NetworkManager",
        "DataTypeName": "GlobalNetwork",
        "ResourceTypeIdentifier": "AWS::NetworkManager::GlobalNetwork",
        "ServiceTypeIdentifier": "AWS::NetworkManager"
    },
    {
        "ServiceHumanReadableName": "AWS Network Manager",
        "ServiceProvider": "AWS",
        "ServiceName": "NetworkManager",
        "DataTypeName": "Link",
        "ResourceTypeIdentifier": "AWS::NetworkManager::Link",
        "ServiceTypeIdentifier": "AWS::NetworkManager"
    },
    {
        "ServiceHumanReadableName": "AWS Network Manager",
        "ServiceProvider": "AWS",
        "ServiceName": "NetworkManager",
        "DataTypeName": "LinkAssociation",
        "ResourceTypeIdentifier": "AWS::NetworkManager::LinkAssociation",
        "ServiceTypeIdentifier": "AWS::NetworkManager"
    },
    {
        "ServiceHumanReadableName": "AWS Network Manager",
        "ServiceProvider": "AWS",
        "ServiceName": "NetworkManager",
        "DataTypeName": "Site",
        "ResourceTypeIdentifier": "AWS::NetworkManager::Site",
        "ServiceTypeIdentifier": "AWS::NetworkManager"
    },
    {
        "ServiceHumanReadableName": "AWS Network Manager",
        "ServiceProvider": "AWS",
        "ServiceName": "NetworkManager",
        "DataTypeName": "SiteToSiteVpnAttachment",
        "ResourceTypeIdentifier": "AWS::NetworkManager::SiteToSiteVpnAttachment",
        "ServiceTypeIdentifier": "AWS::NetworkManager"
    },
    {
        "ServiceHumanReadableName": "AWS Network Manager",
        "ServiceProvider": "AWS",
        "ServiceName": "NetworkManager",
        "DataTypeName": "TransitGatewayPeering",
        "ResourceTypeIdentifier": "AWS::NetworkManager::TransitGatewayPeering",
        "ServiceTypeIdentifier": "AWS::NetworkManager"
    },
    {
        "ServiceHumanReadableName": "AWS Network Manager",
        "ServiceProvider": "AWS",
        "ServiceName": "NetworkManager",
        "DataTypeName": "TransitGatewayRegistration",
        "ResourceTypeIdentifier": "AWS::NetworkManager::TransitGatewayRegistration",
        "ServiceTypeIdentifier": "AWS::NetworkManager"
    },
    {
        "ServiceHumanReadableName": "AWS Network Manager",
        "ServiceProvider": "AWS",
        "ServiceName": "NetworkManager",
        "DataTypeName": "TransitGatewayRouteTableAttachment",
        "ResourceTypeIdentifier": "AWS::NetworkManager::TransitGatewayRouteTableAttachment",
        "ServiceTypeIdentifier": "AWS::NetworkManager"
    },
    {
        "ServiceHumanReadableName": "AWS Network Manager",
        "ServiceProvider": "AWS",
        "ServiceName": "NetworkManager",
        "DataTypeName": "VpcAttachment",
        "ResourceTypeIdentifier": "AWS::NetworkManager::VpcAttachment",
        "ServiceTypeIdentifier": "AWS::NetworkManager"
    },
    {
        "ServiceHumanReadableName": "Amazon Nimble Studio",
        "ServiceProvider": "AWS",
        "ServiceName": "NimbleStudio",
        "DataTypeName": "LaunchProfile",
        "ResourceTypeIdentifier": "AWS::NimbleStudio::LaunchProfile",
        "ServiceTypeIdentifier": "AWS::NimbleStudio"
    },
    {
        "ServiceHumanReadableName": "Amazon Nimble Studio",
        "ServiceProvider": "AWS",
        "ServiceName": "NimbleStudio",
        "DataTypeName": "StreamingImage",
        "ResourceTypeIdentifier": "AWS::NimbleStudio::StreamingImage",
        "ServiceTypeIdentifier": "AWS::NimbleStudio"
    },
    {
        "ServiceHumanReadableName": "Amazon Nimble Studio",
        "ServiceProvider": "AWS",
        "ServiceName": "NimbleStudio",
        "DataTypeName": "Studio",
        "ResourceTypeIdentifier": "AWS::NimbleStudio::Studio",
        "ServiceTypeIdentifier": "AWS::NimbleStudio"
    },
    {
        "ServiceHumanReadableName": "Amazon Nimble Studio",
        "ServiceProvider": "AWS",
        "ServiceName": "NimbleStudio",
        "DataTypeName": "StudioComponent",
        "ResourceTypeIdentifier": "AWS::NimbleStudio::StudioComponent",
        "ServiceTypeIdentifier": "AWS::NimbleStudio"
    },
    {
        "ServiceHumanReadableName": "Observability Access Manager (OAM)",
        "ServiceProvider": "AWS",
        "ServiceName": "Oam",
        "DataTypeName": "Link",
        "ResourceTypeIdentifier": "AWS::Oam::Link",
        "ServiceTypeIdentifier": "AWS::Oam"
    },
    {
        "ServiceHumanReadableName": "Observability Access Manager (OAM)",
        "ServiceProvider": "AWS",
        "ServiceName": "Oam",
        "DataTypeName": "Sink",
        "ResourceTypeIdentifier": "AWS::Oam::Sink",
        "ServiceTypeIdentifier": "AWS::Oam"
    },
    {
        "ServiceHumanReadableName": "AWS HealthOmics",
        "ServiceProvider": "AWS",
        "ServiceName": "Omics",
        "DataTypeName": "AnnotationStore",
        "ResourceTypeIdentifier": "AWS::Omics::AnnotationStore",
        "ServiceTypeIdentifier": "AWS::Omics"
    },
    {
        "ServiceHumanReadableName": "AWS HealthOmics",
        "ServiceProvider": "AWS",
        "ServiceName": "Omics",
        "DataTypeName": "ReferenceStore",
        "ResourceTypeIdentifier": "AWS::Omics::ReferenceStore",
        "ServiceTypeIdentifier": "AWS::Omics"
    },
    {
        "ServiceHumanReadableName": "AWS HealthOmics",
        "ServiceProvider": "AWS",
        "ServiceName": "Omics",
        "DataTypeName": "RunGroup",
        "ResourceTypeIdentifier": "AWS::Omics::RunGroup",
        "ServiceTypeIdentifier": "AWS::Omics"
    },
    {
        "ServiceHumanReadableName": "AWS HealthOmics",
        "ServiceProvider": "AWS",
        "ServiceName": "Omics",
        "DataTypeName": "SequenceStore",
        "ResourceTypeIdentifier": "AWS::Omics::SequenceStore",
        "ServiceTypeIdentifier": "AWS::Omics"
    },
    {
        "ServiceHumanReadableName": "AWS HealthOmics",
        "ServiceProvider": "AWS",
        "ServiceName": "Omics",
        "DataTypeName": "VariantStore",
        "ResourceTypeIdentifier": "AWS::Omics::VariantStore",
        "ServiceTypeIdentifier": "AWS::Omics"
    },
    {
        "ServiceHumanReadableName": "AWS HealthOmics",
        "ServiceProvider": "AWS",
        "ServiceName": "Omics",
        "DataTypeName": "Workflow",
        "ResourceTypeIdentifier": "AWS::Omics::Workflow",
        "ServiceTypeIdentifier": "AWS::Omics"
    },
    {
        "ServiceHumanReadableName": "Amazon OpenSearch Ingestion",
        "ServiceProvider": "AWS",
        "ServiceName": "OSIS",
        "DataTypeName": "Pipeline",
        "ResourceTypeIdentifier": "AWS::OSIS::Pipeline",
        "ServiceTypeIdentifier": "AWS::OSIS"
    },
    {
        "ServiceHumanReadableName": "Amazon OpenSearch Service",
        "ServiceProvider": "AWS",
        "ServiceName": "OpenSearchService",
        "DataTypeName": "Application",
        "ResourceTypeIdentifier": "AWS::OpenSearchService::Application",
        "ServiceTypeIdentifier": "AWS::OpenSearchService"
    },
    {
        "ServiceHumanReadableName": "Amazon OpenSearch Service",
        "ServiceProvider": "AWS",
        "ServiceName": "OpenSearchService",
        "DataTypeName": "Domain",
        "ResourceTypeIdentifier": "AWS::OpenSearchService::Domain",
        "ServiceTypeIdentifier": "AWS::OpenSearchService"
    },
    {
        "ServiceHumanReadableName": "Amazon OpenSearch Service (legacy Elasticsearch resource)",
        "ServiceProvider": "AWS",
        "ServiceName": "Elasticsearch",
        "DataTypeName": "Domain",
        "ResourceTypeIdentifier": "AWS::Elasticsearch::Domain",
        "ServiceTypeIdentifier": "AWS::Elasticsearch"
    },
    {
        "ServiceHumanReadableName": "Amazon OpenSearch Serverless",
        "ServiceProvider": "AWS",
        "ServiceName": "OpenSearchServerless",
        "DataTypeName": "AccessPolicy",
        "ResourceTypeIdentifier": "AWS::OpenSearchServerless::AccessPolicy",
        "ServiceTypeIdentifier": "AWS::OpenSearchServerless"
    },
    {
        "ServiceHumanReadableName": "Amazon OpenSearch Serverless",
        "ServiceProvider": "AWS",
        "ServiceName": "OpenSearchServerless",
        "DataTypeName": "Collection",
        "ResourceTypeIdentifier": "AWS::OpenSearchServerless::Collection",
        "ServiceTypeIdentifier": "AWS::OpenSearchServerless"
    },
    {
        "ServiceHumanReadableName": "Amazon OpenSearch Serverless",
        "ServiceProvider": "AWS",
        "ServiceName": "OpenSearchServerless",
        "DataTypeName": "LifecyclePolicy",
        "ResourceTypeIdentifier": "AWS::OpenSearchServerless::LifecyclePolicy",
        "ServiceTypeIdentifier": "AWS::OpenSearchServerless"
    },
    {
        "ServiceHumanReadableName": "Amazon OpenSearch Serverless",
        "ServiceProvider": "AWS",
        "ServiceName": "OpenSearchServerless",
        "DataTypeName": "SecurityConfig",
        "ResourceTypeIdentifier": "AWS::OpenSearchServerless::SecurityConfig",
        "ServiceTypeIdentifier": "AWS::OpenSearchServerless"
    },
    {
        "ServiceHumanReadableName": "Amazon OpenSearch Serverless",
        "ServiceProvider": "AWS",
        "ServiceName": "OpenSearchServerless",
        "DataTypeName": "SecurityPolicy",
        "ResourceTypeIdentifier": "AWS::OpenSearchServerless::SecurityPolicy",
        "ServiceTypeIdentifier": "AWS::OpenSearchServerless"
    },
    {
        "ServiceHumanReadableName": "Amazon OpenSearch Serverless",
        "ServiceProvider": "AWS",
        "ServiceName": "OpenSearchServerless",
        "DataTypeName": "VpcEndpoint",
        "ResourceTypeIdentifier": "AWS::OpenSearchServerless::VpcEndpoint",
        "ServiceTypeIdentifier": "AWS::OpenSearchServerless"
    },
    {
        "ServiceHumanReadableName": "AWS OpsWorks",
        "ServiceProvider": "AWS",
        "ServiceName": "OpsWorks",
        "DataTypeName": "App",
        "ResourceTypeIdentifier": "AWS::OpsWorks::App",
        "ServiceTypeIdentifier": "AWS::OpsWorks"
    },
    {
        "ServiceHumanReadableName": "AWS OpsWorks",
        "ServiceProvider": "AWS",
        "ServiceName": "OpsWorks",
        "DataTypeName": "ElasticLoadBalancerAttachment",
        "ResourceTypeIdentifier": "AWS::OpsWorks::ElasticLoadBalancerAttachment",
        "ServiceTypeIdentifier": "AWS::OpsWorks"
    },
    {
        "ServiceHumanReadableName": "AWS OpsWorks",
        "ServiceProvider": "AWS",
        "ServiceName": "OpsWorks",
        "DataTypeName": "Instance",
        "ResourceTypeIdentifier": "AWS::OpsWorks::Instance",
        "ServiceTypeIdentifier": "AWS::OpsWorks"
    },
    {
        "ServiceHumanReadableName": "AWS OpsWorks",
        "ServiceProvider": "AWS",
        "ServiceName": "OpsWorks",
        "DataTypeName": "Layer",
        "ResourceTypeIdentifier": "AWS::OpsWorks::Layer",
        "ServiceTypeIdentifier": "AWS::OpsWorks"
    },
    {
        "ServiceHumanReadableName": "AWS OpsWorks",
        "ServiceProvider": "AWS",
        "ServiceName": "OpsWorks",
        "DataTypeName": "Stack",
        "ResourceTypeIdentifier": "AWS::OpsWorks::Stack",
        "ServiceTypeIdentifier": "AWS::OpsWorks"
    },
    {
        "ServiceHumanReadableName": "AWS OpsWorks",
        "ServiceProvider": "AWS",
        "ServiceName": "OpsWorks",
        "DataTypeName": "UserProfile",
        "ResourceTypeIdentifier": "AWS::OpsWorks::UserProfile",
        "ServiceTypeIdentifier": "AWS::OpsWorks"
    },
    {
        "ServiceHumanReadableName": "AWS OpsWorks",
        "ServiceProvider": "AWS",
        "ServiceName": "OpsWorks",
        "DataTypeName": "Volume",
        "ResourceTypeIdentifier": "AWS::OpsWorks::Volume",
        "ServiceTypeIdentifier": "AWS::OpsWorks"
    },
    {
        "ServiceHumanReadableName": "AWS OpsWorks CM",
        "ServiceProvider": "AWS",
        "ServiceName": "OpsWorksCM",
        "DataTypeName": "Server",
        "ResourceTypeIdentifier": "AWS::OpsWorksCM::Server",
        "ServiceTypeIdentifier": "AWS::OpsWorksCM"
    },
    {
        "ServiceHumanReadableName": "AWS Organizations",
        "ServiceProvider": "AWS",
        "ServiceName": "Organizations",
        "DataTypeName": "Account",
        "ResourceTypeIdentifier": "AWS::Organizations::Account",
        "ServiceTypeIdentifier": "AWS::Organizations"
    },
    {
        "ServiceHumanReadableName": "AWS Organizations",
        "ServiceProvider": "AWS",
        "ServiceName": "Organizations",
        "DataTypeName": "Organization",
        "ResourceTypeIdentifier": "AWS::Organizations::Organization",
        "ServiceTypeIdentifier": "AWS::Organizations"
    },
    {
        "ServiceHumanReadableName": "AWS Organizations",
        "ServiceProvider": "AWS",
        "ServiceName": "Organizations",
        "DataTypeName": "OrganizationalUnit",
        "ResourceTypeIdentifier": "AWS::Organizations::OrganizationalUnit",
        "ServiceTypeIdentifier": "AWS::Organizations"
    },
    {
        "ServiceHumanReadableName": "AWS Organizations",
        "ServiceProvider": "AWS",
        "ServiceName": "Organizations",
        "DataTypeName": "Policy",
        "ResourceTypeIdentifier": "AWS::Organizations::Policy",
        "ServiceTypeIdentifier": "AWS::Organizations"
    },
    {
        "ServiceHumanReadableName": "AWS Organizations",
        "ServiceProvider": "AWS",
        "ServiceName": "Organizations",
        "DataTypeName": "ResourcePolicy",
        "ResourceTypeIdentifier": "AWS::Organizations::ResourcePolicy",
        "ServiceTypeIdentifier": "AWS::Organizations"
    },
    {
        "ServiceHumanReadableName": "AWS Panorama",
        "ServiceProvider": "AWS",
        "ServiceName": "Panorama",
        "DataTypeName": "ApplicationInstance",
        "ResourceTypeIdentifier": "AWS::Panorama::ApplicationInstance",
        "ServiceTypeIdentifier": "AWS::Panorama"
    },
    {
        "ServiceHumanReadableName": "AWS Panorama",
        "ServiceProvider": "AWS",
        "ServiceName": "Panorama",
        "DataTypeName": "Package",
        "ResourceTypeIdentifier": "AWS::Panorama::Package",
        "ServiceTypeIdentifier": "AWS::Panorama"
    },
    {
        "ServiceHumanReadableName": "AWS Panorama",
        "ServiceProvider": "AWS",
        "ServiceName": "Panorama",
        "DataTypeName": "PackageVersion",
        "ResourceTypeIdentifier": "AWS::Panorama::PackageVersion",
        "ServiceTypeIdentifier": "AWS::Panorama"
    },
    {
        "ServiceHumanReadableName": "AWS Payment Cryptography",
        "ServiceProvider": "AWS",
        "ServiceName": "PaymentCryptography",
        "DataTypeName": "Alias",
        "ResourceTypeIdentifier": "AWS::PaymentCryptography::Alias",
        "ServiceTypeIdentifier": "AWS::PaymentCryptography"
    },
    {
        "ServiceHumanReadableName": "AWS Payment Cryptography",
        "ServiceProvider": "AWS",
        "ServiceName": "PaymentCryptography",
        "DataTypeName": "Key",
        "ResourceTypeIdentifier": "AWS::PaymentCryptography::Key",
        "ServiceTypeIdentifier": "AWS::PaymentCryptography"
    },
    {
        "ServiceHumanReadableName": "Amazon Personalize",
        "ServiceProvider": "AWS",
        "ServiceName": "Personalize",
        "DataTypeName": "Dataset",
        "ResourceTypeIdentifier": "AWS::Personalize::Dataset",
        "ServiceTypeIdentifier": "AWS::Personalize"
    },
    {
        "ServiceHumanReadableName": "Amazon Personalize",
        "ServiceProvider": "AWS",
        "ServiceName": "Personalize",
        "DataTypeName": "DatasetGroup",
        "ResourceTypeIdentifier": "AWS::Personalize::DatasetGroup",
        "ServiceTypeIdentifier": "AWS::Personalize"
    },
    {
        "ServiceHumanReadableName": "Amazon Personalize",
        "ServiceProvider": "AWS",
        "ServiceName": "Personalize",
        "DataTypeName": "Schema",
        "ResourceTypeIdentifier": "AWS::Personalize::Schema",
        "ServiceTypeIdentifier": "AWS::Personalize"
    },
    {
        "ServiceHumanReadableName": "Amazon Personalize",
        "ServiceProvider": "AWS",
        "ServiceName": "Personalize",
        "DataTypeName": "Solution",
        "ResourceTypeIdentifier": "AWS::Personalize::Solution",
        "ServiceTypeIdentifier": "AWS::Personalize"
    },
    {
        "ServiceHumanReadableName": "Amazon Pinpoint",
        "ServiceProvider": "AWS",
        "ServiceName": "Pinpoint",
        "DataTypeName": "ADMChannel",
        "ResourceTypeIdentifier": "AWS::Pinpoint::ADMChannel",
        "ServiceTypeIdentifier": "AWS::Pinpoint"
    },
    {
        "ServiceHumanReadableName": "Amazon Pinpoint",
        "ServiceProvider": "AWS",
        "ServiceName": "Pinpoint",
        "DataTypeName": "APNSChannel",
        "ResourceTypeIdentifier": "AWS::Pinpoint::APNSChannel",
        "ServiceTypeIdentifier": "AWS::Pinpoint"
    },
    {
        "ServiceHumanReadableName": "Amazon Pinpoint",
        "ServiceProvider": "AWS",
        "ServiceName": "Pinpoint",
        "DataTypeName": "APNSSandboxChannel",
        "ResourceTypeIdentifier": "AWS::Pinpoint::APNSSandboxChannel",
        "ServiceTypeIdentifier": "AWS::Pinpoint"
    },
    {
        "ServiceHumanReadableName": "Amazon Pinpoint",
        "ServiceProvider": "AWS",
        "ServiceName": "Pinpoint",
        "DataTypeName": "APNSVoipChannel",
        "ResourceTypeIdentifier": "AWS::Pinpoint::APNSVoipChannel",
        "ServiceTypeIdentifier": "AWS::Pinpoint"
    },
    {
        "ServiceHumanReadableName": "Amazon Pinpoint",
        "ServiceProvider": "AWS",
        "ServiceName": "Pinpoint",
        "DataTypeName": "APNSVoipSandboxChannel",
        "ResourceTypeIdentifier": "AWS::Pinpoint::APNSVoipSandboxChannel",
        "ServiceTypeIdentifier": "AWS::Pinpoint"
    },
    {
        "ServiceHumanReadableName": "Amazon Pinpoint",
        "ServiceProvider": "AWS",
        "ServiceName": "Pinpoint",
        "DataTypeName": "App",
        "ResourceTypeIdentifier": "AWS::Pinpoint::App",
        "ServiceTypeIdentifier": "AWS::Pinpoint"
    },
    {
        "ServiceHumanReadableName": "Amazon Pinpoint",
        "ServiceProvider": "AWS",
        "ServiceName": "Pinpoint",
        "DataTypeName": "ApplicationSettings",
        "ResourceTypeIdentifier": "AWS::Pinpoint::ApplicationSettings",
        "ServiceTypeIdentifier": "AWS::Pinpoint"
    },
    {
        "ServiceHumanReadableName": "Amazon Pinpoint",
        "ServiceProvider": "AWS",
        "ServiceName": "Pinpoint",
        "DataTypeName": "BaiduChannel",
        "ResourceTypeIdentifier": "AWS::Pinpoint::BaiduChannel",
        "ServiceTypeIdentifier": "AWS::Pinpoint"
    },
    {
        "ServiceHumanReadableName": "Amazon Pinpoint",
        "ServiceProvider": "AWS",
        "ServiceName": "Pinpoint",
        "DataTypeName": "Campaign",
        "ResourceTypeIdentifier": "AWS::Pinpoint::Campaign",
        "ServiceTypeIdentifier": "AWS::Pinpoint"
    },
    {
        "ServiceHumanReadableName": "Amazon Pinpoint",
        "ServiceProvider": "AWS",
        "ServiceName": "Pinpoint",
        "DataTypeName": "EmailChannel",
        "ResourceTypeIdentifier": "AWS::Pinpoint::EmailChannel",
        "ServiceTypeIdentifier": "AWS::Pinpoint"
    },
    {
        "ServiceHumanReadableName": "Amazon Pinpoint",
        "ServiceProvider": "AWS",
        "ServiceName": "Pinpoint",
        "DataTypeName": "EmailTemplate",
        "ResourceTypeIdentifier": "AWS::Pinpoint::EmailTemplate",
        "ServiceTypeIdentifier": "AWS::Pinpoint"
    },
    {
        "ServiceHumanReadableName": "Amazon Pinpoint",
        "ServiceProvider": "AWS",
        "ServiceName": "Pinpoint",
        "DataTypeName": "EventStream",
        "ResourceTypeIdentifier": "AWS::Pinpoint::EventStream",
        "ServiceTypeIdentifier": "AWS::Pinpoint"
    },
    {
        "ServiceHumanReadableName": "Amazon Pinpoint",
        "ServiceProvider": "AWS",
        "ServiceName": "Pinpoint",
        "DataTypeName": "GCMChannel",
        "ResourceTypeIdentifier": "AWS::Pinpoint::GCMChannel",
        "ServiceTypeIdentifier": "AWS::Pinpoint"
    },
    {
        "ServiceHumanReadableName": "Amazon Pinpoint",
        "ServiceProvider": "AWS",
        "ServiceName": "Pinpoint",
        "DataTypeName": "InAppTemplate",
        "ResourceTypeIdentifier": "AWS::Pinpoint::InAppTemplate",
        "ServiceTypeIdentifier": "AWS::Pinpoint"
    },
    {
        "ServiceHumanReadableName": "Amazon Pinpoint",
        "ServiceProvider": "AWS",
        "ServiceName": "Pinpoint",
        "DataTypeName": "PushTemplate",
        "ResourceTypeIdentifier": "AWS::Pinpoint::PushTemplate",
        "ServiceTypeIdentifier": "AWS::Pinpoint"
    },
    {
        "ServiceHumanReadableName": "Amazon Pinpoint",
        "ServiceProvider": "AWS",
        "ServiceName": "Pinpoint",
        "DataTypeName": "Segment",
        "ResourceTypeIdentifier": "AWS::Pinpoint::Segment",
        "ServiceTypeIdentifier": "AWS::Pinpoint"
    },
    {
        "ServiceHumanReadableName": "Amazon Pinpoint",
        "ServiceProvider": "AWS",
        "ServiceName": "Pinpoint",
        "DataTypeName": "SMSChannel",
        "ResourceTypeIdentifier": "AWS::Pinpoint::SMSChannel",
        "ServiceTypeIdentifier": "AWS::Pinpoint"
    },
    {
        "ServiceHumanReadableName": "Amazon Pinpoint",
        "ServiceProvider": "AWS",
        "ServiceName": "Pinpoint",
        "DataTypeName": "SmsTemplate",
        "ResourceTypeIdentifier": "AWS::Pinpoint::SmsTemplate",
        "ServiceTypeIdentifier": "AWS::Pinpoint"
    },
    {
        "ServiceHumanReadableName": "Amazon Pinpoint",
        "ServiceProvider": "AWS",
        "ServiceName": "Pinpoint",
        "DataTypeName": "VoiceChannel",
        "ResourceTypeIdentifier": "AWS::Pinpoint::VoiceChannel",
        "ServiceTypeIdentifier": "AWS::Pinpoint"
    },
    {
        "ServiceHumanReadableName": "Amazon Pinpoint Email",
        "ServiceProvider": "AWS",
        "ServiceName": "PinpointEmail",
        "DataTypeName": "ConfigurationSet",
        "ResourceTypeIdentifier": "AWS::PinpointEmail::ConfigurationSet",
        "ServiceTypeIdentifier": "AWS::PinpointEmail"
    },
    {
        "ServiceHumanReadableName": "Amazon Pinpoint Email",
        "ServiceProvider": "AWS",
        "ServiceName": "PinpointEmail",
        "DataTypeName": "ConfigurationSetEventDestination",
        "ResourceTypeIdentifier": "AWS::PinpointEmail::ConfigurationSetEventDestination",
        "ServiceTypeIdentifier": "AWS::PinpointEmail"
    },
    {
        "ServiceHumanReadableName": "Amazon Pinpoint Email",
        "ServiceProvider": "AWS",
        "ServiceName": "PinpointEmail",
        "DataTypeName": "DedicatedIpPool",
        "ResourceTypeIdentifier": "AWS::PinpointEmail::DedicatedIpPool",
        "ServiceTypeIdentifier": "AWS::PinpointEmail"
    },
    {
        "ServiceHumanReadableName": "Amazon Pinpoint Email",
        "ServiceProvider": "AWS",
        "ServiceName": "PinpointEmail",
        "DataTypeName": "Identity",
        "ResourceTypeIdentifier": "AWS::PinpointEmail::Identity",
        "ServiceTypeIdentifier": "AWS::PinpointEmail"
    },
    {
        "ServiceHumanReadableName": "AWS Private Certificate Authority",
        "ServiceProvider": "AWS",
        "ServiceName": "ACMPCA",
        "DataTypeName": "Certificate",
        "ResourceTypeIdentifier": "AWS::ACMPCA::Certificate",
        "ServiceTypeIdentifier": "AWS::ACMPCA"
    },
    {
        "ServiceHumanReadableName": "AWS Private Certificate Authority",
        "ServiceProvider": "AWS",
        "ServiceName": "ACMPCA",
        "DataTypeName": "CertificateAuthority",
        "ResourceTypeIdentifier": "AWS::ACMPCA::CertificateAuthority",
        "ServiceTypeIdentifier": "AWS::ACMPCA"
    },
    {
        "ServiceHumanReadableName": "AWS Private Certificate Authority",
        "ServiceProvider": "AWS",
        "ServiceName": "ACMPCA",
        "DataTypeName": "CertificateAuthorityActivation",
        "ResourceTypeIdentifier": "AWS::ACMPCA::CertificateAuthorityActivation",
        "ServiceTypeIdentifier": "AWS::ACMPCA"
    },
    {
        "ServiceHumanReadableName": "AWS Private Certificate Authority",
        "ServiceProvider": "AWS",
        "ServiceName": "ACMPCA",
        "DataTypeName": "Permission",
        "ResourceTypeIdentifier": "AWS::ACMPCA::Permission",
        "ServiceTypeIdentifier": "AWS::ACMPCA"
    },
    {
        "ServiceHumanReadableName": "AWS Private Certificate Authority for Active Directory",
        "ServiceProvider": "AWS",
        "ServiceName": "PCAConnectorAD",
        "DataTypeName": "Connector",
        "ResourceTypeIdentifier": "AWS::PCAConnectorAD::Connector",
        "ServiceTypeIdentifier": "AWS::PCAConnectorAD"
    },
    {
        "ServiceHumanReadableName": "AWS Private Certificate Authority for Active Directory",
        "ServiceProvider": "AWS",
        "ServiceName": "PCAConnectorAD",
        "DataTypeName": "DirectoryRegistration",
        "ResourceTypeIdentifier": "AWS::PCAConnectorAD::DirectoryRegistration",
        "ServiceTypeIdentifier": "AWS::PCAConnectorAD"
    },
    {
        "ServiceHumanReadableName": "AWS Private Certificate Authority for Active Directory",
        "ServiceProvider": "AWS",
        "ServiceName": "PCAConnectorAD",
        "DataTypeName": "ServicePrincipalName",
        "ResourceTypeIdentifier": "AWS::PCAConnectorAD::ServicePrincipalName",
        "ServiceTypeIdentifier": "AWS::PCAConnectorAD"
    },
    {
        "ServiceHumanReadableName": "AWS Private Certificate Authority for Active Directory",
        "ServiceProvider": "AWS",
        "ServiceName": "PCAConnectorAD",
        "DataTypeName": "Template",
        "ResourceTypeIdentifier": "AWS::PCAConnectorAD::Template",
        "ServiceTypeIdentifier": "AWS::PCAConnectorAD"
    },
    {
        "ServiceHumanReadableName": "AWS Private Certificate Authority for Active Directory",
        "ServiceProvider": "AWS",
        "ServiceName": "PCAConnectorAD",
        "DataTypeName": "TemplateGroupAccessControlEntry",
        "ResourceTypeIdentifier": "AWS::PCAConnectorAD::TemplateGroupAccessControlEntry",
        "ServiceTypeIdentifier": "AWS::PCAConnectorAD"
    },
    {
        "ServiceHumanReadableName": "AWS Private Certificate Authority Connector for SCEP",
        "ServiceProvider": "AWS",
        "ServiceName": "PCAConnectorSCEP",
        "DataTypeName": "Challenge",
        "ResourceTypeIdentifier": "AWS::PCAConnectorSCEP::Challenge",
        "ServiceTypeIdentifier": "AWS::PCAConnectorSCEP"
    },
    {
        "ServiceHumanReadableName": "AWS Private Certificate Authority Connector for SCEP",
        "ServiceProvider": "AWS",
        "ServiceName": "PCAConnectorSCEP",
        "DataTypeName": "Connector",
        "ResourceTypeIdentifier": "AWS::PCAConnectorSCEP::Connector",
        "ServiceTypeIdentifier": "AWS::PCAConnectorSCEP"
    },
    {
        "ServiceHumanReadableName": "AWS Proton",
        "ServiceProvider": "AWS",
        "ServiceName": "Proton",
        "DataTypeName": "EnvironmentAccountConnection",
        "ResourceTypeIdentifier": "AWS::Proton::EnvironmentAccountConnection",
        "ServiceTypeIdentifier": "AWS::Proton"
    },
    {
        "ServiceHumanReadableName": "AWS Proton",
        "ServiceProvider": "AWS",
        "ServiceName": "Proton",
        "DataTypeName": "EnvironmentTemplate",
        "ResourceTypeIdentifier": "AWS::Proton::EnvironmentTemplate",
        "ServiceTypeIdentifier": "AWS::Proton"
    },
    {
        "ServiceHumanReadableName": "AWS Proton",
        "ServiceProvider": "AWS",
        "ServiceName": "Proton",
        "DataTypeName": "ServiceTemplate",
        "ResourceTypeIdentifier": "AWS::Proton::ServiceTemplate",
        "ServiceTypeIdentifier": "AWS::Proton"
    },
    {
        "ServiceHumanReadableName": "Amazon Managed Service for Prometheus",
        "ServiceProvider": "AWS",
        "ServiceName": "APS",
        "DataTypeName": "RuleGroupsNamespace",
        "ResourceTypeIdentifier": "AWS::APS::RuleGroupsNamespace",
        "ServiceTypeIdentifier": "AWS::APS"
    },
    {
        "ServiceHumanReadableName": "Amazon Managed Service for Prometheus",
        "ServiceProvider": "AWS",
        "ServiceName": "APS",
        "DataTypeName": "Scraper",
        "ResourceTypeIdentifier": "AWS::APS::Scraper",
        "ServiceTypeIdentifier": "AWS::APS"
    },
    {
        "ServiceHumanReadableName": "Amazon Managed Service for Prometheus",
        "ServiceProvider": "AWS",
        "ServiceName": "APS",
        "DataTypeName": "Workspace",
        "ResourceTypeIdentifier": "AWS::APS::Workspace",
        "ServiceTypeIdentifier": "AWS::APS"
    },
    {
        "ServiceHumanReadableName": "Amazon Q Business",
        "ServiceProvider": "AWS",
        "ServiceName": "QBusiness",
        "DataTypeName": "Application",
        "ResourceTypeIdentifier": "AWS::QBusiness::Application",
        "ServiceTypeIdentifier": "AWS::QBusiness"
    },
    {
        "ServiceHumanReadableName": "Amazon Q Business",
        "ServiceProvider": "AWS",
        "ServiceName": "QBusiness",
        "DataTypeName": "DataSource",
        "ResourceTypeIdentifier": "AWS::QBusiness::DataSource",
        "ServiceTypeIdentifier": "AWS::QBusiness"
    },
    {
        "ServiceHumanReadableName": "Amazon Q Business",
        "ServiceProvider": "AWS",
        "ServiceName": "QBusiness",
        "DataTypeName": "Index",
        "ResourceTypeIdentifier": "AWS::QBusiness::Index",
        "ServiceTypeIdentifier": "AWS::QBusiness"
    },
    {
        "ServiceHumanReadableName": "Amazon Q Business",
        "ServiceProvider": "AWS",
        "ServiceName": "QBusiness",
        "DataTypeName": "Plugin",
        "ResourceTypeIdentifier": "AWS::QBusiness::Plugin",
        "ServiceTypeIdentifier": "AWS::QBusiness"
    },
    {
        "ServiceHumanReadableName": "Amazon Q Business",
        "ServiceProvider": "AWS",
        "ServiceName": "QBusiness",
        "DataTypeName": "Retriever",
        "ResourceTypeIdentifier": "AWS::QBusiness::Retriever",
        "ServiceTypeIdentifier": "AWS::QBusiness"
    },
    {
        "ServiceHumanReadableName": "Amazon Q Business",
        "ServiceProvider": "AWS",
        "ServiceName": "QBusiness",
        "DataTypeName": "WebExperience",
        "ResourceTypeIdentifier": "AWS::QBusiness::WebExperience",
        "ServiceTypeIdentifier": "AWS::QBusiness"
    },
    {
        "ServiceHumanReadableName": "Amazon QLDB",
        "ServiceProvider": "AWS",
        "ServiceName": "QLDB",
        "DataTypeName": "Ledger",
        "ResourceTypeIdentifier": "AWS::QLDB::Ledger",
        "ServiceTypeIdentifier": "AWS::QLDB"
    },
    {
        "ServiceHumanReadableName": "Amazon QLDB",
        "ServiceProvider": "AWS",
        "ServiceName": "QLDB",
        "DataTypeName": "Stream",
        "ResourceTypeIdentifier": "AWS::QLDB::Stream",
        "ServiceTypeIdentifier": "AWS::QLDB"
    },
    {
        "ServiceHumanReadableName": "Amazon QuickSight",
        "ServiceProvider": "AWS",
        "ServiceName": "QuickSight",
        "DataTypeName": "Analysis",
        "ResourceTypeIdentifier": "AWS::QuickSight::Analysis",
        "ServiceTypeIdentifier": "AWS::QuickSight"
    },
    {
        "ServiceHumanReadableName": "Amazon QuickSight",
        "ServiceProvider": "AWS",
        "ServiceName": "QuickSight",
        "DataTypeName": "Dashboard",
        "ResourceTypeIdentifier": "AWS::QuickSight::Dashboard",
        "ServiceTypeIdentifier": "AWS::QuickSight"
    },
    {
        "ServiceHumanReadableName": "Amazon QuickSight",
        "ServiceProvider": "AWS",
        "ServiceName": "QuickSight",
        "DataTypeName": "DataSet",
        "ResourceTypeIdentifier": "AWS::QuickSight::DataSet",
        "ServiceTypeIdentifier": "AWS::QuickSight"
    },
    {
        "ServiceHumanReadableName": "Amazon QuickSight",
        "ServiceProvider": "AWS",
        "ServiceName": "QuickSight",
        "DataTypeName": "DataSource",
        "ResourceTypeIdentifier": "AWS::QuickSight::DataSource",
        "ServiceTypeIdentifier": "AWS::QuickSight"
    },
    {
        "ServiceHumanReadableName": "Amazon QuickSight",
        "ServiceProvider": "AWS",
        "ServiceName": "QuickSight",
        "DataTypeName": "Folder",
        "ResourceTypeIdentifier": "AWS::QuickSight::Folder",
        "ServiceTypeIdentifier": "AWS::QuickSight"
    },
    {
        "ServiceHumanReadableName": "Amazon QuickSight",
        "ServiceProvider": "AWS",
        "ServiceName": "QuickSight",
        "DataTypeName": "RefreshSchedule",
        "ResourceTypeIdentifier": "AWS::QuickSight::RefreshSchedule",
        "ServiceTypeIdentifier": "AWS::QuickSight"
    },
    {
        "ServiceHumanReadableName": "Amazon QuickSight",
        "ServiceProvider": "AWS",
        "ServiceName": "QuickSight",
        "DataTypeName": "Template",
        "ResourceTypeIdentifier": "AWS::QuickSight::Template",
        "ServiceTypeIdentifier": "AWS::QuickSight"
    },
    {
        "ServiceHumanReadableName": "Amazon QuickSight",
        "ServiceProvider": "AWS",
        "ServiceName": "QuickSight",
        "DataTypeName": "Theme",
        "ResourceTypeIdentifier": "AWS::QuickSight::Theme",
        "ServiceTypeIdentifier": "AWS::QuickSight"
    },
    {
        "ServiceHumanReadableName": "Amazon QuickSight",
        "ServiceProvider": "AWS",
        "ServiceName": "QuickSight",
        "DataTypeName": "Topic",
        "ResourceTypeIdentifier": "AWS::QuickSight::Topic",
        "ServiceTypeIdentifier": "AWS::QuickSight"
    },
    {
        "ServiceHumanReadableName": "Amazon QuickSight",
        "ServiceProvider": "AWS",
        "ServiceName": "QuickSight",
        "DataTypeName": "VPCConnection",
        "ResourceTypeIdentifier": "AWS::QuickSight::VPCConnection",
        "ServiceTypeIdentifier": "AWS::QuickSight"
    },
    {
        "ServiceHumanReadableName": "AWS Resource Access Manager",
        "ServiceProvider": "AWS",
        "ServiceName": "RAM",
        "DataTypeName": "Permission",
        "ResourceTypeIdentifier": "AWS::RAM::Permission",
        "ServiceTypeIdentifier": "AWS::RAM"
    },
    {
        "ServiceHumanReadableName": "AWS Resource Access Manager",
        "ServiceProvider": "AWS",
        "ServiceName": "RAM",
        "DataTypeName": "ResourceShare",
        "ResourceTypeIdentifier": "AWS::RAM::ResourceShare",
        "ServiceTypeIdentifier": "AWS::RAM"
    },
    {
        "ServiceHumanReadableName": "Amazon Relational Database Service",
        "ServiceProvider": "AWS",
        "ServiceName": "RDS",
        "DataTypeName": "CustomDBEngineVersion",
        "ResourceTypeIdentifier": "AWS::RDS::CustomDBEngineVersion",
        "ServiceTypeIdentifier": "AWS::RDS"
    },
    {
        "ServiceHumanReadableName": "Amazon Relational Database Service",
        "ServiceProvider": "AWS",
        "ServiceName": "RDS",
        "DataTypeName": "DBCluster",
        "ResourceTypeIdentifier": "AWS::RDS::DBCluster",
        "ServiceTypeIdentifier": "AWS::RDS"
    },
    {
        "ServiceHumanReadableName": "Amazon Relational Database Service",
        "ServiceProvider": "AWS",
        "ServiceName": "RDS",
        "DataTypeName": "DBClusterParameterGroup",
        "ResourceTypeIdentifier": "AWS::RDS::DBClusterParameterGroup",
        "ServiceTypeIdentifier": "AWS::RDS"
    },
    {
        "ServiceHumanReadableName": "Amazon Relational Database Service",
        "ServiceProvider": "AWS",
        "ServiceName": "RDS",
        "DataTypeName": "DBInstance",
        "ResourceTypeIdentifier": "AWS::RDS::DBInstance",
        "ServiceTypeIdentifier": "AWS::RDS"
    },
    {
        "ServiceHumanReadableName": "Amazon Relational Database Service",
        "ServiceProvider": "AWS",
        "ServiceName": "RDS",
        "DataTypeName": "DBParameterGroup",
        "ResourceTypeIdentifier": "AWS::RDS::DBParameterGroup",
        "ServiceTypeIdentifier": "AWS::RDS"
    },
    {
        "ServiceHumanReadableName": "Amazon Relational Database Service",
        "ServiceProvider": "AWS",
        "ServiceName": "RDS",
        "DataTypeName": "DBProxy",
        "ResourceTypeIdentifier": "AWS::RDS::DBProxy",
        "ServiceTypeIdentifier": "AWS::RDS"
    },
    {
        "ServiceHumanReadableName": "Amazon Relational Database Service",
        "ServiceProvider": "AWS",
        "ServiceName": "RDS",
        "DataTypeName": "DBProxyEndpoint",
        "ResourceTypeIdentifier": "AWS::RDS::DBProxyEndpoint",
        "ServiceTypeIdentifier": "AWS::RDS"
    },
    {
        "ServiceHumanReadableName": "Amazon Relational Database Service",
        "ServiceProvider": "AWS",
        "ServiceName": "RDS",
        "DataTypeName": "DBProxyTargetGroup",
        "ResourceTypeIdentifier": "AWS::RDS::DBProxyTargetGroup",
        "ServiceTypeIdentifier": "AWS::RDS"
    },
    {
        "ServiceHumanReadableName": "Amazon Relational Database Service",
        "ServiceProvider": "AWS",
        "ServiceName": "RDS",
        "DataTypeName": "DBSecurityGroup",
        "ResourceTypeIdentifier": "AWS::RDS::DBSecurityGroup",
        "ServiceTypeIdentifier": "AWS::RDS"
    },
    {
        "ServiceHumanReadableName": "Amazon Relational Database Service",
        "ServiceProvider": "AWS",
        "ServiceName": "RDS",
        "DataTypeName": "DBSecurityGroupIngress",
        "ResourceTypeIdentifier": "AWS::RDS::DBSecurityGroupIngress",
        "ServiceTypeIdentifier": "AWS::RDS"
    },
    {
        "ServiceHumanReadableName": "Amazon Relational Database Service",
        "ServiceProvider": "AWS",
        "ServiceName": "RDS",
        "DataTypeName": "DBShardGroup",
        "ResourceTypeIdentifier": "AWS::RDS::DBShardGroup",
        "ServiceTypeIdentifier": "AWS::RDS"
    },
    {
        "ServiceHumanReadableName": "Amazon Relational Database Service",
        "ServiceProvider": "AWS",
        "ServiceName": "RDS",
        "DataTypeName": "DBSubnetGroup",
        "ResourceTypeIdentifier": "AWS::RDS::DBSubnetGroup",
        "ServiceTypeIdentifier": "AWS::RDS"
    },
    {
        "ServiceHumanReadableName": "Amazon Relational Database Service",
        "ServiceProvider": "AWS",
        "ServiceName": "RDS",
        "DataTypeName": "EventSubscription",
        "ResourceTypeIdentifier": "AWS::RDS::EventSubscription",
        "ServiceTypeIdentifier": "AWS::RDS"
    },
    {
        "ServiceHumanReadableName": "Amazon Relational Database Service",
        "ServiceProvider": "AWS",
        "ServiceName": "RDS",
        "DataTypeName": "GlobalCluster",
        "ResourceTypeIdentifier": "AWS::RDS::GlobalCluster",
        "ServiceTypeIdentifier": "AWS::RDS"
    },
    {
        "ServiceHumanReadableName": "Amazon Relational Database Service",
        "ServiceProvider": "AWS",
        "ServiceName": "RDS",
        "DataTypeName": "Integration",
        "ResourceTypeIdentifier": "AWS::RDS::Integration",
        "ServiceTypeIdentifier": "AWS::RDS"
    },
    {
        "ServiceHumanReadableName": "Amazon Relational Database Service",
        "ServiceProvider": "AWS",
        "ServiceName": "RDS",
        "DataTypeName": "OptionGroup",
        "ResourceTypeIdentifier": "AWS::RDS::OptionGroup",
        "ServiceTypeIdentifier": "AWS::RDS"
    },
    {
        "ServiceHumanReadableName": "Amazon Redshift",
        "ServiceProvider": "AWS",
        "ServiceName": "Redshift",
        "DataTypeName": "Cluster",
        "ResourceTypeIdentifier": "AWS::Redshift::Cluster",
        "ServiceTypeIdentifier": "AWS::Redshift"
    },
    {
        "ServiceHumanReadableName": "Amazon Redshift",
        "ServiceProvider": "AWS",
        "ServiceName": "Redshift",
        "DataTypeName": "ClusterParameterGroup",
        "ResourceTypeIdentifier": "AWS::Redshift::ClusterParameterGroup",
        "ServiceTypeIdentifier": "AWS::Redshift"
    },
    {
        "ServiceHumanReadableName": "Amazon Redshift",
        "ServiceProvider": "AWS",
        "ServiceName": "Redshift",
        "DataTypeName": "ClusterSecurityGroup",
        "ResourceTypeIdentifier": "AWS::Redshift::ClusterSecurityGroup",
        "ServiceTypeIdentifier": "AWS::Redshift"
    },
    {
        "ServiceHumanReadableName": "Amazon Redshift",
        "ServiceProvider": "AWS",
        "ServiceName": "Redshift",
        "DataTypeName": "ClusterSecurityGroupIngress",
        "ResourceTypeIdentifier": "AWS::Redshift::ClusterSecurityGroupIngress",
        "ServiceTypeIdentifier": "AWS::Redshift"
    },
    {
        "ServiceHumanReadableName": "Amazon Redshift",
        "ServiceProvider": "AWS",
        "ServiceName": "Redshift",
        "DataTypeName": "ClusterSubnetGroup",
        "ResourceTypeIdentifier": "AWS::Redshift::ClusterSubnetGroup",
        "ServiceTypeIdentifier": "AWS::Redshift"
    },
    {
        "ServiceHumanReadableName": "Amazon Redshift",
        "ServiceProvider": "AWS",
        "ServiceName": "Redshift",
        "DataTypeName": "EndpointAccess",
        "ResourceTypeIdentifier": "AWS::Redshift::EndpointAccess",
        "ServiceTypeIdentifier": "AWS::Redshift"
    },
    {
        "ServiceHumanReadableName": "Amazon Redshift",
        "ServiceProvider": "AWS",
        "ServiceName": "Redshift",
        "DataTypeName": "EndpointAuthorization",
        "ResourceTypeIdentifier": "AWS::Redshift::EndpointAuthorization",
        "ServiceTypeIdentifier": "AWS::Redshift"
    },
    {
        "ServiceHumanReadableName": "Amazon Redshift",
        "ServiceProvider": "AWS",
        "ServiceName": "Redshift",
        "DataTypeName": "EventSubscription",
        "ResourceTypeIdentifier": "AWS::Redshift::EventSubscription",
        "ServiceTypeIdentifier": "AWS::Redshift"
    },
    {
        "ServiceHumanReadableName": "Amazon Redshift",
        "ServiceProvider": "AWS",
        "ServiceName": "Redshift",
        "DataTypeName": "Integration",
        "ResourceTypeIdentifier": "AWS::Redshift::Integration",
        "ServiceTypeIdentifier": "AWS::Redshift"
    },
    {
        "ServiceHumanReadableName": "Amazon Redshift",
        "ServiceProvider": "AWS",
        "ServiceName": "Redshift",
        "DataTypeName": "ScheduledAction",
        "ResourceTypeIdentifier": "AWS::Redshift::ScheduledAction",
        "ServiceTypeIdentifier": "AWS::Redshift"
    },
    {
        "ServiceHumanReadableName": "Amazon Redshift Serverless",
        "ServiceProvider": "AWS",
        "ServiceName": "RedshiftServerless",
        "DataTypeName": "Namespace",
        "ResourceTypeIdentifier": "AWS::RedshiftServerless::Namespace",
        "ServiceTypeIdentifier": "AWS::RedshiftServerless"
    },
    {
        "ServiceHumanReadableName": "Amazon Redshift Serverless",
        "ServiceProvider": "AWS",
        "ServiceName": "RedshiftServerless",
        "DataTypeName": "Workgroup",
        "ResourceTypeIdentifier": "AWS::RedshiftServerless::Workgroup",
        "ServiceTypeIdentifier": "AWS::RedshiftServerless"
    },
    {
        "ServiceHumanReadableName": "AWS Migration Hub Refactor Spaces",
        "ServiceProvider": "AWS",
        "ServiceName": "RefactorSpaces",
        "DataTypeName": "Application",
        "ResourceTypeIdentifier": "AWS::RefactorSpaces::Application",
        "ServiceTypeIdentifier": "AWS::RefactorSpaces"
    },
    {
        "ServiceHumanReadableName": "AWS Migration Hub Refactor Spaces",
        "ServiceProvider": "AWS",
        "ServiceName": "RefactorSpaces",
        "DataTypeName": "Environment",
        "ResourceTypeIdentifier": "AWS::RefactorSpaces::Environment",
        "ServiceTypeIdentifier": "AWS::RefactorSpaces"
    },
    {
        "ServiceHumanReadableName": "AWS Migration Hub Refactor Spaces",
        "ServiceProvider": "AWS",
        "ServiceName": "RefactorSpaces",
        "DataTypeName": "Route",
        "ResourceTypeIdentifier": "AWS::RefactorSpaces::Route",
        "ServiceTypeIdentifier": "AWS::RefactorSpaces"
    },
    {
        "ServiceHumanReadableName": "AWS Migration Hub Refactor Spaces",
        "ServiceProvider": "AWS",
        "ServiceName": "RefactorSpaces",
        "DataTypeName": "Service",
        "ResourceTypeIdentifier": "AWS::RefactorSpaces::Service",
        "ServiceTypeIdentifier": "AWS::RefactorSpaces"
    },
    {
        "ServiceHumanReadableName": "Amazon Rekognition",
        "ServiceProvider": "AWS",
        "ServiceName": "Rekognition",
        "DataTypeName": "Collection",
        "ResourceTypeIdentifier": "AWS::Rekognition::Collection",
        "ServiceTypeIdentifier": "AWS::Rekognition"
    },
    {
        "ServiceHumanReadableName": "Amazon Rekognition",
        "ServiceProvider": "AWS",
        "ServiceName": "Rekognition",
        "DataTypeName": "Project",
        "ResourceTypeIdentifier": "AWS::Rekognition::Project",
        "ServiceTypeIdentifier": "AWS::Rekognition"
    },
    {
        "ServiceHumanReadableName": "Amazon Rekognition",
        "ServiceProvider": "AWS",
        "ServiceName": "Rekognition",
        "DataTypeName": "StreamProcessor",
        "ResourceTypeIdentifier": "AWS::Rekognition::StreamProcessor",
        "ServiceTypeIdentifier": "AWS::Rekognition"
    },
    {
        "ServiceHumanReadableName": "AWS Resilience Hub",
        "ServiceProvider": "AWS",
        "ServiceName": "ResilienceHub",
        "DataTypeName": "App",
        "ResourceTypeIdentifier": "AWS::ResilienceHub::App",
        "ServiceTypeIdentifier": "AWS::ResilienceHub"
    },
    {
        "ServiceHumanReadableName": "AWS Resilience Hub",
        "ServiceProvider": "AWS",
        "ServiceName": "ResilienceHub",
        "DataTypeName": "ResiliencyPolicy",
        "ResourceTypeIdentifier": "AWS::ResilienceHub::ResiliencyPolicy",
        "ServiceTypeIdentifier": "AWS::ResilienceHub"
    },
    {
        "ServiceHumanReadableName": "AWS Resource Explorer",
        "ServiceProvider": "AWS",
        "ServiceName": "ResourceExplorer2",
        "DataTypeName": "DefaultViewAssociation",
        "ResourceTypeIdentifier": "AWS::ResourceExplorer2::DefaultViewAssociation",
        "ServiceTypeIdentifier": "AWS::ResourceExplorer2"
    },
    {
        "ServiceHumanReadableName": "AWS Resource Explorer",
        "ServiceProvider": "AWS",
        "ServiceName": "ResourceExplorer2",
        "DataTypeName": "Index",
        "ResourceTypeIdentifier": "AWS::ResourceExplorer2::Index",
        "ServiceTypeIdentifier": "AWS::ResourceExplorer2"
    },
    {
        "ServiceHumanReadableName": "AWS Resource Explorer",
        "ServiceProvider": "AWS",
        "ServiceName": "ResourceExplorer2",
        "DataTypeName": "View",
        "ResourceTypeIdentifier": "AWS::ResourceExplorer2::View",
        "ServiceTypeIdentifier": "AWS::ResourceExplorer2"
    },
    {
        "ServiceHumanReadableName": "AWS Resource Groups",
        "ServiceProvider": "AWS",
        "ServiceName": "ResourceGroups",
        "DataTypeName": "Group",
        "ResourceTypeIdentifier": "AWS::ResourceGroups::Group",
        "ServiceTypeIdentifier": "AWS::ResourceGroups"
    },
    {
        "ServiceHumanReadableName": "AWS RoboMaker",
        "ServiceProvider": "AWS",
        "ServiceName": "RoboMaker",
        "DataTypeName": "Fleet",
        "ResourceTypeIdentifier": "AWS::RoboMaker::Fleet",
        "ServiceTypeIdentifier": "AWS::RoboMaker"
    },
    {
        "ServiceHumanReadableName": "AWS RoboMaker",
        "ServiceProvider": "AWS",
        "ServiceName": "RoboMaker",
        "DataTypeName": "Robot",
        "ResourceTypeIdentifier": "AWS::RoboMaker::Robot",
        "ServiceTypeIdentifier": "AWS::RoboMaker"
    },
    {
        "ServiceHumanReadableName": "AWS RoboMaker",
        "ServiceProvider": "AWS",
        "ServiceName": "RoboMaker",
        "DataTypeName": "RobotApplication",
        "ResourceTypeIdentifier": "AWS::RoboMaker::RobotApplication",
        "ServiceTypeIdentifier": "AWS::RoboMaker"
    },
    {
        "ServiceHumanReadableName": "AWS RoboMaker",
        "ServiceProvider": "AWS",
        "ServiceName": "RoboMaker",
        "DataTypeName": "RobotApplicationVersion",
        "ResourceTypeIdentifier": "AWS::RoboMaker::RobotApplicationVersion",
        "ServiceTypeIdentifier": "AWS::RoboMaker"
    },
    {
        "ServiceHumanReadableName": "AWS RoboMaker",
        "ServiceProvider": "AWS",
        "ServiceName": "RoboMaker",
        "DataTypeName": "SimulationApplication",
        "ResourceTypeIdentifier": "AWS::RoboMaker::SimulationApplication",
        "ServiceTypeIdentifier": "AWS::RoboMaker"
    },
    {
        "ServiceHumanReadableName": "AWS RoboMaker",
        "ServiceProvider": "AWS",
        "ServiceName": "RoboMaker",
        "DataTypeName": "SimulationApplicationVersion",
        "ResourceTypeIdentifier": "AWS::RoboMaker::SimulationApplicationVersion",
        "ServiceTypeIdentifier": "AWS::RoboMaker"
    },
    {
        "ServiceHumanReadableName": "IAM Roles Anywhere",
        "ServiceProvider": "AWS",
        "ServiceName": "RolesAnywhere",
        "DataTypeName": "CRL",
        "ResourceTypeIdentifier": "AWS::RolesAnywhere::CRL",
        "ServiceTypeIdentifier": "AWS::RolesAnywhere"
    },
    {
        "ServiceHumanReadableName": "IAM Roles Anywhere",
        "ServiceProvider": "AWS",
        "ServiceName": "RolesAnywhere",
        "DataTypeName": "Profile",
        "ResourceTypeIdentifier": "AWS::RolesAnywhere::Profile",
        "ServiceTypeIdentifier": "AWS::RolesAnywhere"
    },
    {
        "ServiceHumanReadableName": "IAM Roles Anywhere",
        "ServiceProvider": "AWS",
        "ServiceName": "RolesAnywhere",
        "DataTypeName": "TrustAnchor",
        "ResourceTypeIdentifier": "AWS::RolesAnywhere::TrustAnchor",
        "ServiceTypeIdentifier": "AWS::RolesAnywhere"
    },
    {
        "ServiceHumanReadableName": "Amazon Route\u00a053",
        "ServiceProvider": "AWS",
        "ServiceName": "Route53",
        "DataTypeName": "CidrCollection",
        "ResourceTypeIdentifier": "AWS::Route53::CidrCollection",
        "ServiceTypeIdentifier": "AWS::Route53"
    },
    {
        "ServiceHumanReadableName": "Amazon Route\u00a053",
        "ServiceProvider": "AWS",
        "ServiceName": "Route53",
        "DataTypeName": "DNSSEC",
        "ResourceTypeIdentifier": "AWS::Route53::DNSSEC",
        "ServiceTypeIdentifier": "AWS::Route53"
    },
    {
        "ServiceHumanReadableName": "Amazon Route\u00a053",
        "ServiceProvider": "AWS",
        "ServiceName": "Route53",
        "DataTypeName": "HealthCheck",
        "ResourceTypeIdentifier": "AWS::Route53::HealthCheck",
        "ServiceTypeIdentifier": "AWS::Route53"
    },
    {
        "ServiceHumanReadableName": "Amazon Route\u00a053",
        "ServiceProvider": "AWS",
        "ServiceName": "Route53",
        "DataTypeName": "HostedZone",
        "ResourceTypeIdentifier": "AWS::Route53::HostedZone",
        "ServiceTypeIdentifier": "AWS::Route53"
    },
    {
        "ServiceHumanReadableName": "Amazon Route\u00a053",
        "ServiceProvider": "AWS",
        "ServiceName": "Route53",
        "DataTypeName": "KeySigningKey",
        "ResourceTypeIdentifier": "AWS::Route53::KeySigningKey",
        "ServiceTypeIdentifier": "AWS::Route53"
    },
    {
        "ServiceHumanReadableName": "Amazon Route\u00a053",
        "ServiceProvider": "AWS",
        "ServiceName": "Route53",
        "DataTypeName": "RecordSet",
        "ResourceTypeIdentifier": "AWS::Route53::RecordSet",
        "ServiceTypeIdentifier": "AWS::Route53"
    },
    {
        "ServiceHumanReadableName": "Amazon Route\u00a053",
        "ServiceProvider": "AWS",
        "ServiceName": "Route53",
        "DataTypeName": "RecordSetGroup",
        "ResourceTypeIdentifier": "AWS::Route53::RecordSetGroup",
        "ServiceTypeIdentifier": "AWS::Route53"
    },
    {
        "ServiceHumanReadableName": "Amazon Route\u00a053 Recovery Control",
        "ServiceProvider": "AWS",
        "ServiceName": "Route53RecoveryControl",
        "DataTypeName": "Cluster",
        "ResourceTypeIdentifier": "AWS::Route53RecoveryControl::Cluster",
        "ServiceTypeIdentifier": "AWS::Route53RecoveryControl"
    },
    {
        "ServiceHumanReadableName": "Amazon Route\u00a053 Recovery Control",
        "ServiceProvider": "AWS",
        "ServiceName": "Route53RecoveryControl",
        "DataTypeName": "ControlPanel",
        "ResourceTypeIdentifier": "AWS::Route53RecoveryControl::ControlPanel",
        "ServiceTypeIdentifier": "AWS::Route53RecoveryControl"
    },
    {
        "ServiceHumanReadableName": "Amazon Route\u00a053 Recovery Control",
        "ServiceProvider": "AWS",
        "ServiceName": "Route53RecoveryControl",
        "DataTypeName": "RoutingControl",
        "ResourceTypeIdentifier": "AWS::Route53RecoveryControl::RoutingControl",
        "ServiceTypeIdentifier": "AWS::Route53RecoveryControl"
    },
    {
        "ServiceHumanReadableName": "Amazon Route\u00a053 Recovery Control",
        "ServiceProvider": "AWS",
        "ServiceName": "Route53RecoveryControl",
        "DataTypeName": "SafetyRule",
        "ResourceTypeIdentifier": "AWS::Route53RecoveryControl::SafetyRule",
        "ServiceTypeIdentifier": "AWS::Route53RecoveryControl"
    },
    {
        "ServiceHumanReadableName": "Amazon Route\u00a053 Recovery Readiness",
        "ServiceProvider": "AWS",
        "ServiceName": "Route53RecoveryReadiness",
        "DataTypeName": "Cell",
        "ResourceTypeIdentifier": "AWS::Route53RecoveryReadiness::Cell",
        "ServiceTypeIdentifier": "AWS::Route53RecoveryReadiness"
    },
    {
        "ServiceHumanReadableName": "Amazon Route\u00a053 Recovery Readiness",
        "ServiceProvider": "AWS",
        "ServiceName": "Route53RecoveryReadiness",
        "DataTypeName": "ReadinessCheck",
        "ResourceTypeIdentifier": "AWS::Route53RecoveryReadiness::ReadinessCheck",
        "ServiceTypeIdentifier": "AWS::Route53RecoveryReadiness"
    },
    {
        "ServiceHumanReadableName": "Amazon Route\u00a053 Recovery Readiness",
        "ServiceProvider": "AWS",
        "ServiceName": "Route53RecoveryReadiness",
        "DataTypeName": "RecoveryGroup",
        "ResourceTypeIdentifier": "AWS::Route53RecoveryReadiness::RecoveryGroup",
        "ServiceTypeIdentifier": "AWS::Route53RecoveryReadiness"
    },
    {
        "ServiceHumanReadableName": "Amazon Route\u00a053 Recovery Readiness",
        "ServiceProvider": "AWS",
        "ServiceName": "Route53RecoveryReadiness",
        "DataTypeName": "ResourceSet",
        "ResourceTypeIdentifier": "AWS::Route53RecoveryReadiness::ResourceSet",
        "ServiceTypeIdentifier": "AWS::Route53RecoveryReadiness"
    },
    {
        "ServiceHumanReadableName": "Amazon Route\u00a053 Resolver",
        "ServiceProvider": "AWS",
        "ServiceName": "Route53Resolver",
        "DataTypeName": "FirewallDomainList",
        "ResourceTypeIdentifier": "AWS::Route53Resolver::FirewallDomainList",
        "ServiceTypeIdentifier": "AWS::Route53Resolver"
    },
    {
        "ServiceHumanReadableName": "Amazon Route\u00a053 Resolver",
        "ServiceProvider": "AWS",
        "ServiceName": "Route53Resolver",
        "DataTypeName": "FirewallRuleGroup",
        "ResourceTypeIdentifier": "AWS::Route53Resolver::FirewallRuleGroup",
        "ServiceTypeIdentifier": "AWS::Route53Resolver"
    },
    {
        "ServiceHumanReadableName": "Amazon Route\u00a053 Resolver",
        "ServiceProvider": "AWS",
        "ServiceName": "Route53Resolver",
        "DataTypeName": "FirewallRuleGroupAssociation",
        "ResourceTypeIdentifier": "AWS::Route53Resolver::FirewallRuleGroupAssociation",
        "ServiceTypeIdentifier": "AWS::Route53Resolver"
    },
    {
        "ServiceHumanReadableName": "Amazon Route\u00a053 Resolver",
        "ServiceProvider": "AWS",
        "ServiceName": "Route53Resolver",
        "DataTypeName": "OutpostResolver",
        "ResourceTypeIdentifier": "AWS::Route53Resolver::OutpostResolver",
        "ServiceTypeIdentifier": "AWS::Route53Resolver"
    },
    {
        "ServiceHumanReadableName": "Amazon Route\u00a053 Resolver",
        "ServiceProvider": "AWS",
        "ServiceName": "Route53Resolver",
        "DataTypeName": "ResolverConfig",
        "ResourceTypeIdentifier": "AWS::Route53Resolver::ResolverConfig",
        "ServiceTypeIdentifier": "AWS::Route53Resolver"
    },
    {
        "ServiceHumanReadableName": "Amazon Route\u00a053 Resolver",
        "ServiceProvider": "AWS",
        "ServiceName": "Route53Resolver",
        "DataTypeName": "ResolverDNSSECConfig",
        "ResourceTypeIdentifier": "AWS::Route53Resolver::ResolverDNSSECConfig",
        "ServiceTypeIdentifier": "AWS::Route53Resolver"
    },
    {
        "ServiceHumanReadableName": "Amazon Route\u00a053 Resolver",
        "ServiceProvider": "AWS",
        "ServiceName": "Route53Resolver",
        "DataTypeName": "ResolverEndpoint",
        "ResourceTypeIdentifier": "AWS::Route53Resolver::ResolverEndpoint",
        "ServiceTypeIdentifier": "AWS::Route53Resolver"
    },
    {
        "ServiceHumanReadableName": "Amazon Route\u00a053 Resolver",
        "ServiceProvider": "AWS",
        "ServiceName": "Route53Resolver",
        "DataTypeName": "ResolverQueryLoggingConfig",
        "ResourceTypeIdentifier": "AWS::Route53Resolver::ResolverQueryLoggingConfig",
        "ServiceTypeIdentifier": "AWS::Route53Resolver"
    },
    {
        "ServiceHumanReadableName": "Amazon Route\u00a053 Resolver",
        "ServiceProvider": "AWS",
        "ServiceName": "Route53Resolver",
        "DataTypeName": "ResolverQueryLoggingConfigAssociation",
        "ResourceTypeIdentifier": "AWS::Route53Resolver::ResolverQueryLoggingConfigAssociation",
        "ServiceTypeIdentifier": "AWS::Route53Resolver"
    },
    {
        "ServiceHumanReadableName": "Amazon Route\u00a053 Resolver",
        "ServiceProvider": "AWS",
        "ServiceName": "Route53Resolver",
        "DataTypeName": "ResolverRule",
        "ResourceTypeIdentifier": "AWS::Route53Resolver::ResolverRule",
        "ServiceTypeIdentifier": "AWS::Route53Resolver"
    },
    {
        "ServiceHumanReadableName": "Amazon Route\u00a053 Resolver",
        "ServiceProvider": "AWS",
        "ServiceName": "Route53Resolver",
        "DataTypeName": "ResolverRuleAssociation",
        "ResourceTypeIdentifier": "AWS::Route53Resolver::ResolverRuleAssociation",
        "ServiceTypeIdentifier": "AWS::Route53Resolver"
    },
    {
        "ServiceHumanReadableName": "Amazon Route\u00a053 Profiles",
        "ServiceProvider": "AWS",
        "ServiceName": "Route53Profiles",
        "DataTypeName": "Profile",
        "ResourceTypeIdentifier": "AWS::Route53Profiles::Profile",
        "ServiceTypeIdentifier": "AWS::Route53Profiles"
    },
    {
        "ServiceHumanReadableName": "Amazon Route\u00a053 Profiles",
        "ServiceProvider": "AWS",
        "ServiceName": "Route53Profiles",
        "DataTypeName": "ProfileAssociation",
        "ResourceTypeIdentifier": "AWS::Route53Profiles::ProfileAssociation",
        "ServiceTypeIdentifier": "AWS::Route53Profiles"
    },
    {
        "ServiceHumanReadableName": "Amazon Route\u00a053 Profiles",
        "ServiceProvider": "AWS",
        "ServiceName": "Route53Profiles",
        "DataTypeName": "ProfileResourceAssociation",
        "ResourceTypeIdentifier": "AWS::Route53Profiles::ProfileResourceAssociation",
        "ServiceTypeIdentifier": "AWS::Route53Profiles"
    },
    {
        "ServiceHumanReadableName": "Amazon CloudWatch RUM",
        "ServiceProvider": "AWS",
        "ServiceName": "RUM",
        "DataTypeName": "AppMonitor",
        "ResourceTypeIdentifier": "AWS::RUM::AppMonitor",
        "ServiceTypeIdentifier": "AWS::RUM"
    },
    {
        "ServiceHumanReadableName": "Amazon S3",
        "ServiceProvider": "AWS",
        "ServiceName": "S3",
        "DataTypeName": "AccessGrant",
        "ResourceTypeIdentifier": "AWS::S3::AccessGrant",
        "ServiceTypeIdentifier": "AWS::S3"
    },
    {
        "ServiceHumanReadableName": "Amazon S3",
        "ServiceProvider": "AWS",
        "ServiceName": "S3",
        "DataTypeName": "AccessGrantsInstance",
        "ResourceTypeIdentifier": "AWS::S3::AccessGrantsInstance",
        "ServiceTypeIdentifier": "AWS::S3"
    },
    {
        "ServiceHumanReadableName": "Amazon S3",
        "ServiceProvider": "AWS",
        "ServiceName": "S3",
        "DataTypeName": "AccessGrantsLocation",
        "ResourceTypeIdentifier": "AWS::S3::AccessGrantsLocation",
        "ServiceTypeIdentifier": "AWS::S3"
    },
    {
        "ServiceHumanReadableName": "Amazon S3",
        "ServiceProvider": "AWS",
        "ServiceName": "S3",
        "DataTypeName": "AccessPoint",
        "ResourceTypeIdentifier": "AWS::S3::AccessPoint",
        "ServiceTypeIdentifier": "AWS::S3"
    },
    {
        "ServiceHumanReadableName": "Amazon S3",
        "ServiceProvider": "AWS",
        "ServiceName": "S3",
        "DataTypeName": "Bucket",
        "ResourceTypeIdentifier": "AWS::S3::Bucket",
        "ServiceTypeIdentifier": "AWS::S3"
    },
    {
        "ServiceHumanReadableName": "Amazon S3",
        "ServiceProvider": "AWS",
        "ServiceName": "S3",
        "DataTypeName": "BucketPolicy",
        "ResourceTypeIdentifier": "AWS::S3::BucketPolicy",
        "ServiceTypeIdentifier": "AWS::S3"
    },
    {
        "ServiceHumanReadableName": "Amazon S3",
        "ServiceProvider": "AWS",
        "ServiceName": "S3",
        "DataTypeName": "MultiRegionAccessPoint",
        "ResourceTypeIdentifier": "AWS::S3::MultiRegionAccessPoint",
        "ServiceTypeIdentifier": "AWS::S3"
    },
    {
        "ServiceHumanReadableName": "Amazon S3",
        "ServiceProvider": "AWS",
        "ServiceName": "S3",
        "DataTypeName": "MultiRegionAccessPointPolicy",
        "ResourceTypeIdentifier": "AWS::S3::MultiRegionAccessPointPolicy",
        "ServiceTypeIdentifier": "AWS::S3"
    },
    {
        "ServiceHumanReadableName": "Amazon S3",
        "ServiceProvider": "AWS",
        "ServiceName": "S3",
        "DataTypeName": "StorageLens",
        "ResourceTypeIdentifier": "AWS::S3::StorageLens",
        "ServiceTypeIdentifier": "AWS::S3"
    },
    {
        "ServiceHumanReadableName": "Amazon S3",
        "ServiceProvider": "AWS",
        "ServiceName": "S3",
        "DataTypeName": "StorageLensGroup",
        "ResourceTypeIdentifier": "AWS::S3::StorageLensGroup",
        "ServiceTypeIdentifier": "AWS::S3"
    },
    {
        "ServiceHumanReadableName": "Amazon S3 Express",
        "ServiceProvider": "AWS",
        "ServiceName": "S3Express",
        "DataTypeName": "BucketPolicy",
        "ResourceTypeIdentifier": "AWS::S3Express::BucketPolicy",
        "ServiceTypeIdentifier": "AWS::S3Express"
    },
    {
        "ServiceHumanReadableName": "Amazon S3 Express",
        "ServiceProvider": "AWS",
        "ServiceName": "S3Express",
        "DataTypeName": "DirectoryBucket",
        "ResourceTypeIdentifier": "AWS::S3Express::DirectoryBucket",
        "ServiceTypeIdentifier": "AWS::S3Express"
    },
    {
        "ServiceHumanReadableName": "Amazon S3 Object Lambda",
        "ServiceProvider": "AWS",
        "ServiceName": "S3ObjectLambda",
        "DataTypeName": "AccessPoint",
        "ResourceTypeIdentifier": "AWS::S3ObjectLambda::AccessPoint",
        "ServiceTypeIdentifier": "AWS::S3ObjectLambda"
    },
    {
        "ServiceHumanReadableName": "Amazon S3 Object Lambda",
        "ServiceProvider": "AWS",
        "ServiceName": "S3ObjectLambda",
        "DataTypeName": "AccessPointPolicy",
        "ResourceTypeIdentifier": "AWS::S3ObjectLambda::AccessPointPolicy",
        "ServiceTypeIdentifier": "AWS::S3ObjectLambda"
    },
    {
        "ServiceHumanReadableName": "Amazon S3 on Outposts",
        "ServiceProvider": "AWS",
        "ServiceName": "S3Outposts",
        "DataTypeName": "AccessPoint",
        "ResourceTypeIdentifier": "AWS::S3Outposts::AccessPoint",
        "ServiceTypeIdentifier": "AWS::S3Outposts"
    },
    {
        "ServiceHumanReadableName": "Amazon S3 on Outposts",
        "ServiceProvider": "AWS",
        "ServiceName": "S3Outposts",
        "DataTypeName": "Bucket",
        "ResourceTypeIdentifier": "AWS::S3Outposts::Bucket",
        "ServiceTypeIdentifier": "AWS::S3Outposts"
    },
    {
        "ServiceHumanReadableName": "Amazon S3 on Outposts",
        "ServiceProvider": "AWS",
        "ServiceName": "S3Outposts",
        "DataTypeName": "BucketPolicy",
        "ResourceTypeIdentifier": "AWS::S3Outposts::BucketPolicy",
        "ServiceTypeIdentifier": "AWS::S3Outposts"
    },
    {
        "ServiceHumanReadableName": "Amazon S3 on Outposts",
        "ServiceProvider": "AWS",
        "ServiceName": "S3Outposts",
        "DataTypeName": "Endpoint",
        "ResourceTypeIdentifier": "AWS::S3Outposts::Endpoint",
        "ServiceTypeIdentifier": "AWS::S3Outposts"
    },
    {
        "ServiceHumanReadableName": "Amazon SageMaker",
        "ServiceProvider": "AWS",
        "ServiceName": "SageMaker",
        "DataTypeName": "App",
        "ResourceTypeIdentifier": "AWS::SageMaker::App",
        "ServiceTypeIdentifier": "AWS::SageMaker"
    },
    {
        "ServiceHumanReadableName": "Amazon SageMaker",
        "ServiceProvider": "AWS",
        "ServiceName": "SageMaker",
        "DataTypeName": "AppImageConfig",
        "ResourceTypeIdentifier": "AWS::SageMaker::AppImageConfig",
        "ServiceTypeIdentifier": "AWS::SageMaker"
    },
    {
        "ServiceHumanReadableName": "Amazon SageMaker",
        "ServiceProvider": "AWS",
        "ServiceName": "SageMaker",
        "DataTypeName": "Cluster",
        "ResourceTypeIdentifier": "AWS::SageMaker::Cluster",
        "ServiceTypeIdentifier": "AWS::SageMaker"
    },
    {
        "ServiceHumanReadableName": "Amazon SageMaker",
        "ServiceProvider": "AWS",
        "ServiceName": "SageMaker",
        "DataTypeName": "CodeRepository",
        "ResourceTypeIdentifier": "AWS::SageMaker::CodeRepository",
        "ServiceTypeIdentifier": "AWS::SageMaker"
    },
    {
        "ServiceHumanReadableName": "Amazon SageMaker",
        "ServiceProvider": "AWS",
        "ServiceName": "SageMaker",
        "DataTypeName": "DataQualityJobDefinition",
        "ResourceTypeIdentifier": "AWS::SageMaker::DataQualityJobDefinition",
        "ServiceTypeIdentifier": "AWS::SageMaker"
    },
    {
        "ServiceHumanReadableName": "Amazon SageMaker",
        "ServiceProvider": "AWS",
        "ServiceName": "SageMaker",
        "DataTypeName": "Device",
        "ResourceTypeIdentifier": "AWS::SageMaker::Device",
        "ServiceTypeIdentifier": "AWS::SageMaker"
    },
    {
        "ServiceHumanReadableName": "Amazon SageMaker",
        "ServiceProvider": "AWS",
        "ServiceName": "SageMaker",
        "DataTypeName": "DeviceFleet",
        "ResourceTypeIdentifier": "AWS::SageMaker::DeviceFleet",
        "ServiceTypeIdentifier": "AWS::SageMaker"
    },
    {
        "ServiceHumanReadableName": "Amazon SageMaker",
        "ServiceProvider": "AWS",
        "ServiceName": "SageMaker",
        "DataTypeName": "Domain",
        "ResourceTypeIdentifier": "AWS::SageMaker::Domain",
        "ServiceTypeIdentifier": "AWS::SageMaker"
    },
    {
        "ServiceHumanReadableName": "Amazon SageMaker",
        "ServiceProvider": "AWS",
        "ServiceName": "SageMaker",
        "DataTypeName": "Endpoint",
        "ResourceTypeIdentifier": "AWS::SageMaker::Endpoint",
        "ServiceTypeIdentifier": "AWS::SageMaker"
    },
    {
        "ServiceHumanReadableName": "Amazon SageMaker",
        "ServiceProvider": "AWS",
        "ServiceName": "SageMaker",
        "DataTypeName": "EndpointConfig",
        "ResourceTypeIdentifier": "AWS::SageMaker::EndpointConfig",
        "ServiceTypeIdentifier": "AWS::SageMaker"
    },
    {
        "ServiceHumanReadableName": "Amazon SageMaker",
        "ServiceProvider": "AWS",
        "ServiceName": "SageMaker",
        "DataTypeName": "FeatureGroup",
        "ResourceTypeIdentifier": "AWS::SageMaker::FeatureGroup",
        "ServiceTypeIdentifier": "AWS::SageMaker"
    },
    {
        "ServiceHumanReadableName": "Amazon SageMaker",
        "ServiceProvider": "AWS",
        "ServiceName": "SageMaker",
        "DataTypeName": "Image",
        "ResourceTypeIdentifier": "AWS::SageMaker::Image",
        "ServiceTypeIdentifier": "AWS::SageMaker"
    },
    {
        "ServiceHumanReadableName": "Amazon SageMaker",
        "ServiceProvider": "AWS",
        "ServiceName": "SageMaker",
        "DataTypeName": "ImageVersion",
        "ResourceTypeIdentifier": "AWS::SageMaker::ImageVersion",
        "ServiceTypeIdentifier": "AWS::SageMaker"
    },
    {
        "ServiceHumanReadableName": "Amazon SageMaker",
        "ServiceProvider": "AWS",
        "ServiceName": "SageMaker",
        "DataTypeName": "InferenceComponent",
        "ResourceTypeIdentifier": "AWS::SageMaker::InferenceComponent",
        "ServiceTypeIdentifier": "AWS::SageMaker"
    },
    {
        "ServiceHumanReadableName": "Amazon SageMaker",
        "ServiceProvider": "AWS",
        "ServiceName": "SageMaker",
        "DataTypeName": "InferenceExperiment",
        "ResourceTypeIdentifier": "AWS::SageMaker::InferenceExperiment",
        "ServiceTypeIdentifier": "AWS::SageMaker"
    },
    {
        "ServiceHumanReadableName": "Amazon SageMaker",
        "ServiceProvider": "AWS",
        "ServiceName": "SageMaker",
        "DataTypeName": "MlflowTrackingServer",
        "ResourceTypeIdentifier": "AWS::SageMaker::MlflowTrackingServer",
        "ServiceTypeIdentifier": "AWS::SageMaker"
    },
    {
        "ServiceHumanReadableName": "Amazon SageMaker",
        "ServiceProvider": "AWS",
        "ServiceName": "SageMaker",
        "DataTypeName": "Model",
        "ResourceTypeIdentifier": "AWS::SageMaker::Model",
        "ServiceTypeIdentifier": "AWS::SageMaker"
    },
    {
        "ServiceHumanReadableName": "Amazon SageMaker",
        "ServiceProvider": "AWS",
        "ServiceName": "SageMaker",
        "DataTypeName": "ModelBiasJobDefinition",
        "ResourceTypeIdentifier": "AWS::SageMaker::ModelBiasJobDefinition",
        "ServiceTypeIdentifier": "AWS::SageMaker"
    },
    {
        "ServiceHumanReadableName": "Amazon SageMaker",
        "ServiceProvider": "AWS",
        "ServiceName": "SageMaker",
        "DataTypeName": "ModelCard",
        "ResourceTypeIdentifier": "AWS::SageMaker::ModelCard",
        "ServiceTypeIdentifier": "AWS::SageMaker"
    },
    {
        "ServiceHumanReadableName": "Amazon SageMaker",
        "ServiceProvider": "AWS",
        "ServiceName": "SageMaker",
        "DataTypeName": "ModelExplainabilityJobDefinition",
        "ResourceTypeIdentifier": "AWS::SageMaker::ModelExplainabilityJobDefinition",
        "ServiceTypeIdentifier": "AWS::SageMaker"
    },
    {
        "ServiceHumanReadableName": "Amazon SageMaker",
        "ServiceProvider": "AWS",
        "ServiceName": "SageMaker",
        "DataTypeName": "ModelPackage",
        "ResourceTypeIdentifier": "AWS::SageMaker::ModelPackage",
        "ServiceTypeIdentifier": "AWS::SageMaker"
    },
    {
        "ServiceHumanReadableName": "Amazon SageMaker",
        "ServiceProvider": "AWS",
        "ServiceName": "SageMaker",
        "DataTypeName": "ModelPackageGroup",
        "ResourceTypeIdentifier": "AWS::SageMaker::ModelPackageGroup",
        "ServiceTypeIdentifier": "AWS::SageMaker"
    },
    {
        "ServiceHumanReadableName": "Amazon SageMaker",
        "ServiceProvider": "AWS",
        "ServiceName": "SageMaker",
        "DataTypeName": "ModelQualityJobDefinition",
        "ResourceTypeIdentifier": "AWS::SageMaker::ModelQualityJobDefinition",
        "ServiceTypeIdentifier": "AWS::SageMaker"
    },
    {
        "ServiceHumanReadableName": "Amazon SageMaker",
        "ServiceProvider": "AWS",
        "ServiceName": "SageMaker",
        "DataTypeName": "MonitoringSchedule",
        "ResourceTypeIdentifier": "AWS::SageMaker::MonitoringSchedule",
        "ServiceTypeIdentifier": "AWS::SageMaker"
    },
    {
        "ServiceHumanReadableName": "Amazon SageMaker",
        "ServiceProvider": "AWS",
        "ServiceName": "SageMaker",
        "DataTypeName": "NotebookInstance",
        "ResourceTypeIdentifier": "AWS::SageMaker::NotebookInstance",
        "ServiceTypeIdentifier": "AWS::SageMaker"
    },
    {
        "ServiceHumanReadableName": "Amazon SageMaker",
        "ServiceProvider": "AWS",
        "ServiceName": "SageMaker",
        "DataTypeName": "NotebookInstanceLifecycleConfig",
        "ResourceTypeIdentifier": "AWS::SageMaker::NotebookInstanceLifecycleConfig",
        "ServiceTypeIdentifier": "AWS::SageMaker"
    },
    {
        "ServiceHumanReadableName": "Amazon SageMaker",
        "ServiceProvider": "AWS",
        "ServiceName": "SageMaker",
        "DataTypeName": "Pipeline",
        "ResourceTypeIdentifier": "AWS::SageMaker::Pipeline",
        "ServiceTypeIdentifier": "AWS::SageMaker"
    },
    {
        "ServiceHumanReadableName": "Amazon SageMaker",
        "ServiceProvider": "AWS",
        "ServiceName": "SageMaker",
        "DataTypeName": "Project",
        "ResourceTypeIdentifier": "AWS::SageMaker::Project",
        "ServiceTypeIdentifier": "AWS::SageMaker"
    },
    {
        "ServiceHumanReadableName": "Amazon SageMaker",
        "ServiceProvider": "AWS",
        "ServiceName": "SageMaker",
        "DataTypeName": "Space",
        "ResourceTypeIdentifier": "AWS::SageMaker::Space",
        "ServiceTypeIdentifier": "AWS::SageMaker"
    },
    {
        "ServiceHumanReadableName": "Amazon SageMaker",
        "ServiceProvider": "AWS",
        "ServiceName": "SageMaker",
        "DataTypeName": "StudioLifecycleConfig",
        "ResourceTypeIdentifier": "AWS::SageMaker::StudioLifecycleConfig",
        "ServiceTypeIdentifier": "AWS::SageMaker"
    },
    {
        "ServiceHumanReadableName": "Amazon SageMaker",
        "ServiceProvider": "AWS",
        "ServiceName": "SageMaker",
        "DataTypeName": "UserProfile",
        "ResourceTypeIdentifier": "AWS::SageMaker::UserProfile",
        "ServiceTypeIdentifier": "AWS::SageMaker"
    },
    {
        "ServiceHumanReadableName": "Amazon SageMaker",
        "ServiceProvider": "AWS",
        "ServiceName": "SageMaker",
        "DataTypeName": "Workteam",
        "ResourceTypeIdentifier": "AWS::SageMaker::Workteam",
        "ServiceTypeIdentifier": "AWS::SageMaker"
    },
    {
        "ServiceHumanReadableName": "AWS Secrets Manager",
        "ServiceProvider": "AWS",
        "ServiceName": "SecretsManager",
        "DataTypeName": "ResourcePolicy",
        "ResourceTypeIdentifier": "AWS::SecretsManager::ResourcePolicy",
        "ServiceTypeIdentifier": "AWS::SecretsManager"
    },
    {
        "ServiceHumanReadableName": "AWS Secrets Manager",
        "ServiceProvider": "AWS",
        "ServiceName": "SecretsManager",
        "DataTypeName": "RotationSchedule",
        "ResourceTypeIdentifier": "AWS::SecretsManager::RotationSchedule",
        "ServiceTypeIdentifier": "AWS::SecretsManager"
    },
    {
        "ServiceHumanReadableName": "AWS Secrets Manager",
        "ServiceProvider": "AWS",
        "ServiceName": "SecretsManager",
        "DataTypeName": "Secret",
        "ResourceTypeIdentifier": "AWS::SecretsManager::Secret",
        "ServiceTypeIdentifier": "AWS::SecretsManager"
    },
    {
        "ServiceHumanReadableName": "AWS Secrets Manager",
        "ServiceProvider": "AWS",
        "ServiceName": "SecretsManager",
        "DataTypeName": "SecretTargetAttachment",
        "ResourceTypeIdentifier": "AWS::SecretsManager::SecretTargetAttachment",
        "ServiceTypeIdentifier": "AWS::SecretsManager"
    },
    {
        "ServiceHumanReadableName": "Amazon Security Lake",
        "ServiceProvider": "AWS",
        "ServiceName": "SecurityLake",
        "DataTypeName": "AwsLogSource",
        "ResourceTypeIdentifier": "AWS::SecurityLake::AwsLogSource",
        "ServiceTypeIdentifier": "AWS::SecurityLake"
    },
    {
        "ServiceHumanReadableName": "Amazon Security Lake",
        "ServiceProvider": "AWS",
        "ServiceName": "SecurityLake",
        "DataTypeName": "DataLake",
        "ResourceTypeIdentifier": "AWS::SecurityLake::DataLake",
        "ServiceTypeIdentifier": "AWS::SecurityLake"
    },
    {
        "ServiceHumanReadableName": "Amazon Security Lake",
        "ServiceProvider": "AWS",
        "ServiceName": "SecurityLake",
        "DataTypeName": "Subscriber",
        "ResourceTypeIdentifier": "AWS::SecurityLake::Subscriber",
        "ServiceTypeIdentifier": "AWS::SecurityLake"
    },
    {
        "ServiceHumanReadableName": "Amazon Security Lake",
        "ServiceProvider": "AWS",
        "ServiceName": "SecurityLake",
        "DataTypeName": "SubscriberNotification",
        "ResourceTypeIdentifier": "AWS::SecurityLake::SubscriberNotification",
        "ServiceTypeIdentifier": "AWS::SecurityLake"
    },
    {
        "ServiceHumanReadableName": "AWS Service Catalog",
        "ServiceProvider": "AWS",
        "ServiceName": "ServiceCatalog",
        "DataTypeName": "AcceptedPortfolioShare",
        "ResourceTypeIdentifier": "AWS::ServiceCatalog::AcceptedPortfolioShare",
        "ServiceTypeIdentifier": "AWS::ServiceCatalog"
    },
    {
        "ServiceHumanReadableName": "AWS Service Catalog",
        "ServiceProvider": "AWS",
        "ServiceName": "ServiceCatalog",
        "DataTypeName": "CloudFormationProduct",
        "ResourceTypeIdentifier": "AWS::ServiceCatalog::CloudFormationProduct",
        "ServiceTypeIdentifier": "AWS::ServiceCatalog"
    },
    {
        "ServiceHumanReadableName": "AWS Service Catalog",
        "ServiceProvider": "AWS",
        "ServiceName": "ServiceCatalog",
        "DataTypeName": "CloudFormationProvisionedProduct",
        "ResourceTypeIdentifier": "AWS::ServiceCatalog::CloudFormationProvisionedProduct",
        "ServiceTypeIdentifier": "AWS::ServiceCatalog"
    },
    {
        "ServiceHumanReadableName": "AWS Service Catalog",
        "ServiceProvider": "AWS",
        "ServiceName": "ServiceCatalog",
        "DataTypeName": "LaunchNotificationConstraint",
        "ResourceTypeIdentifier": "AWS::ServiceCatalog::LaunchNotificationConstraint",
        "ServiceTypeIdentifier": "AWS::ServiceCatalog"
    },
    {
        "ServiceHumanReadableName": "AWS Service Catalog",
        "ServiceProvider": "AWS",
        "ServiceName": "ServiceCatalog",
        "DataTypeName": "LaunchRoleConstraint",
        "ResourceTypeIdentifier": "AWS::ServiceCatalog::LaunchRoleConstraint",
        "ServiceTypeIdentifier": "AWS::ServiceCatalog"
    },
    {
        "ServiceHumanReadableName": "AWS Service Catalog",
        "ServiceProvider": "AWS",
        "ServiceName": "ServiceCatalog",
        "DataTypeName": "LaunchTemplateConstraint",
        "ResourceTypeIdentifier": "AWS::ServiceCatalog::LaunchTemplateConstraint",
        "ServiceTypeIdentifier": "AWS::ServiceCatalog"
    },
    {
        "ServiceHumanReadableName": "AWS Service Catalog",
        "ServiceProvider": "AWS",
        "ServiceName": "ServiceCatalog",
        "DataTypeName": "Portfolio",
        "ResourceTypeIdentifier": "AWS::ServiceCatalog::Portfolio",
        "ServiceTypeIdentifier": "AWS::ServiceCatalog"
    },
    {
        "ServiceHumanReadableName": "AWS Service Catalog",
        "ServiceProvider": "AWS",
        "ServiceName": "ServiceCatalog",
        "DataTypeName": "PortfolioPrincipalAssociation",
        "ResourceTypeIdentifier": "AWS::ServiceCatalog::PortfolioPrincipalAssociation",
        "ServiceTypeIdentifier": "AWS::ServiceCatalog"
    },
    {
        "ServiceHumanReadableName": "AWS Service Catalog",
        "ServiceProvider": "AWS",
        "ServiceName": "ServiceCatalog",
        "DataTypeName": "PortfolioProductAssociation",
        "ResourceTypeIdentifier": "AWS::ServiceCatalog::PortfolioProductAssociation",
        "ServiceTypeIdentifier": "AWS::ServiceCatalog"
    },
    {
        "ServiceHumanReadableName": "AWS Service Catalog",
        "ServiceProvider": "AWS",
        "ServiceName": "ServiceCatalog",
        "DataTypeName": "PortfolioShare",
        "ResourceTypeIdentifier": "AWS::ServiceCatalog::PortfolioShare",
        "ServiceTypeIdentifier": "AWS::ServiceCatalog"
    },
    {
        "ServiceHumanReadableName": "AWS Service Catalog",
        "ServiceProvider": "AWS",
        "ServiceName": "ServiceCatalog",
        "DataTypeName": "ResourceUpdateConstraint",
        "ResourceTypeIdentifier": "AWS::ServiceCatalog::ResourceUpdateConstraint",
        "ServiceTypeIdentifier": "AWS::ServiceCatalog"
    },
    {
        "ServiceHumanReadableName": "AWS Service Catalog",
        "ServiceProvider": "AWS",
        "ServiceName": "ServiceCatalog",
        "DataTypeName": "ServiceAction",
        "ResourceTypeIdentifier": "AWS::ServiceCatalog::ServiceAction",
        "ServiceTypeIdentifier": "AWS::ServiceCatalog"
    },
    {
        "ServiceHumanReadableName": "AWS Service Catalog",
        "ServiceProvider": "AWS",
        "ServiceName": "ServiceCatalog",
        "DataTypeName": "ServiceActionAssociation",
        "ResourceTypeIdentifier": "AWS::ServiceCatalog::ServiceActionAssociation",
        "ServiceTypeIdentifier": "AWS::ServiceCatalog"
    },
    {
        "ServiceHumanReadableName": "AWS Service Catalog",
        "ServiceProvider": "AWS",
        "ServiceName": "ServiceCatalog",
        "DataTypeName": "StackSetConstraint",
        "ResourceTypeIdentifier": "AWS::ServiceCatalog::StackSetConstraint",
        "ServiceTypeIdentifier": "AWS::ServiceCatalog"
    },
    {
        "ServiceHumanReadableName": "AWS Service Catalog",
        "ServiceProvider": "AWS",
        "ServiceName": "ServiceCatalog",
        "DataTypeName": "TagOption",
        "ResourceTypeIdentifier": "AWS::ServiceCatalog::TagOption",
        "ServiceTypeIdentifier": "AWS::ServiceCatalog"
    },
    {
        "ServiceHumanReadableName": "AWS Service Catalog",
        "ServiceProvider": "AWS",
        "ServiceName": "ServiceCatalog",
        "DataTypeName": "TagOptionAssociation",
        "ResourceTypeIdentifier": "AWS::ServiceCatalog::TagOptionAssociation",
        "ServiceTypeIdentifier": "AWS::ServiceCatalog"
    },
    {
        "ServiceHumanReadableName": "AWS Service Catalog AppRegistry",
        "ServiceProvider": "AWS",
        "ServiceName": "ServiceCatalogAppRegistry",
        "DataTypeName": "Application",
        "ResourceTypeIdentifier": "AWS::ServiceCatalogAppRegistry::Application",
        "ServiceTypeIdentifier": "AWS::ServiceCatalogAppRegistry"
    },
    {
        "ServiceHumanReadableName": "AWS Service Catalog AppRegistry",
        "ServiceProvider": "AWS",
        "ServiceName": "ServiceCatalogAppRegistry",
        "DataTypeName": "AttributeGroup",
        "ResourceTypeIdentifier": "AWS::ServiceCatalogAppRegistry::AttributeGroup",
        "ServiceTypeIdentifier": "AWS::ServiceCatalogAppRegistry"
    },
    {
        "ServiceHumanReadableName": "AWS Service Catalog AppRegistry",
        "ServiceProvider": "AWS",
        "ServiceName": "ServiceCatalogAppRegistry",
        "DataTypeName": "AttributeGroupAssociation",
        "ResourceTypeIdentifier": "AWS::ServiceCatalogAppRegistry::AttributeGroupAssociation",
        "ServiceTypeIdentifier": "AWS::ServiceCatalogAppRegistry"
    },
    {
        "ServiceHumanReadableName": "AWS Service Catalog AppRegistry",
        "ServiceProvider": "AWS",
        "ServiceName": "ServiceCatalogAppRegistry",
        "DataTypeName": "ResourceAssociation",
        "ResourceTypeIdentifier": "AWS::ServiceCatalogAppRegistry::ResourceAssociation",
        "ServiceTypeIdentifier": "AWS::ServiceCatalogAppRegistry"
    },
    {
        "ServiceHumanReadableName": "AWS Security Hub",
        "ServiceProvider": "AWS",
        "ServiceName": "SecurityHub",
        "DataTypeName": "AutomationRule",
        "ResourceTypeIdentifier": "AWS::SecurityHub::AutomationRule",
        "ServiceTypeIdentifier": "AWS::SecurityHub"
    },
    {
        "ServiceHumanReadableName": "AWS Security Hub",
        "ServiceProvider": "AWS",
        "ServiceName": "SecurityHub",
        "DataTypeName": "ConfigurationPolicy",
        "ResourceTypeIdentifier": "AWS::SecurityHub::ConfigurationPolicy",
        "ServiceTypeIdentifier": "AWS::SecurityHub"
    },
    {
        "ServiceHumanReadableName": "AWS Security Hub",
        "ServiceProvider": "AWS",
        "ServiceName": "SecurityHub",
        "DataTypeName": "DelegatedAdmin",
        "ResourceTypeIdentifier": "AWS::SecurityHub::DelegatedAdmin",
        "ServiceTypeIdentifier": "AWS::SecurityHub"
    },
    {
        "ServiceHumanReadableName": "AWS Security Hub",
        "ServiceProvider": "AWS",
        "ServiceName": "SecurityHub",
        "DataTypeName": "FindingAggregator",
        "ResourceTypeIdentifier": "AWS::SecurityHub::FindingAggregator",
        "ServiceTypeIdentifier": "AWS::SecurityHub"
    },
    {
        "ServiceHumanReadableName": "AWS Security Hub",
        "ServiceProvider": "AWS",
        "ServiceName": "SecurityHub",
        "DataTypeName": "Hub",
        "ResourceTypeIdentifier": "AWS::SecurityHub::Hub",
        "ServiceTypeIdentifier": "AWS::SecurityHub"
    },
    {
        "ServiceHumanReadableName": "AWS Security Hub",
        "ServiceProvider": "AWS",
        "ServiceName": "SecurityHub",
        "DataTypeName": "Insight",
        "ResourceTypeIdentifier": "AWS::SecurityHub::Insight",
        "ServiceTypeIdentifier": "AWS::SecurityHub"
    },
    {
        "ServiceHumanReadableName": "AWS Security Hub",
        "ServiceProvider": "AWS",
        "ServiceName": "SecurityHub",
        "DataTypeName": "OrganizationConfiguration",
        "ResourceTypeIdentifier": "AWS::SecurityHub::OrganizationConfiguration",
        "ServiceTypeIdentifier": "AWS::SecurityHub"
    },
    {
        "ServiceHumanReadableName": "AWS Security Hub",
        "ServiceProvider": "AWS",
        "ServiceName": "SecurityHub",
        "DataTypeName": "PolicyAssociation",
        "ResourceTypeIdentifier": "AWS::SecurityHub::PolicyAssociation",
        "ServiceTypeIdentifier": "AWS::SecurityHub"
    },
    {
        "ServiceHumanReadableName": "AWS Security Hub",
        "ServiceProvider": "AWS",
        "ServiceName": "SecurityHub",
        "DataTypeName": "ProductSubscription",
        "ResourceTypeIdentifier": "AWS::SecurityHub::ProductSubscription",
        "ServiceTypeIdentifier": "AWS::SecurityHub"
    },
    {
        "ServiceHumanReadableName": "AWS Security Hub",
        "ServiceProvider": "AWS",
        "ServiceName": "SecurityHub",
        "DataTypeName": "SecurityControl",
        "ResourceTypeIdentifier": "AWS::SecurityHub::SecurityControl",
        "ServiceTypeIdentifier": "AWS::SecurityHub"
    },
    {
        "ServiceHumanReadableName": "AWS Security Hub",
        "ServiceProvider": "AWS",
        "ServiceName": "SecurityHub",
        "DataTypeName": "Standard",
        "ResourceTypeIdentifier": "AWS::SecurityHub::Standard",
        "ServiceTypeIdentifier": "AWS::SecurityHub"
    },
    {
        "ServiceHumanReadableName": "Amazon Simple Email Service",
        "ServiceProvider": "AWS",
        "ServiceName": "SES",
        "DataTypeName": "ConfigurationSet",
        "ResourceTypeIdentifier": "AWS::SES::ConfigurationSet",
        "ServiceTypeIdentifier": "AWS::SES"
    },
    {
        "ServiceHumanReadableName": "Amazon Simple Email Service",
        "ServiceProvider": "AWS",
        "ServiceName": "SES",
        "DataTypeName": "ConfigurationSetEventDestination",
        "ResourceTypeIdentifier": "AWS::SES::ConfigurationSetEventDestination",
        "ServiceTypeIdentifier": "AWS::SES"
    },
    {
        "ServiceHumanReadableName": "Amazon Simple Email Service",
        "ServiceProvider": "AWS",
        "ServiceName": "SES",
        "DataTypeName": "ContactList",
        "ResourceTypeIdentifier": "AWS::SES::ContactList",
        "ServiceTypeIdentifier": "AWS::SES"
    },
    {
        "ServiceHumanReadableName": "Amazon Simple Email Service",
        "ServiceProvider": "AWS",
        "ServiceName": "SES",
        "DataTypeName": "DedicatedIpPool",
        "ResourceTypeIdentifier": "AWS::SES::DedicatedIpPool",
        "ServiceTypeIdentifier": "AWS::SES"
    },
    {
        "ServiceHumanReadableName": "Amazon Simple Email Service",
        "ServiceProvider": "AWS",
        "ServiceName": "SES",
        "DataTypeName": "EmailIdentity",
        "ResourceTypeIdentifier": "AWS::SES::EmailIdentity",
        "ServiceTypeIdentifier": "AWS::SES"
    },
    {
        "ServiceHumanReadableName": "Amazon Simple Email Service",
        "ServiceProvider": "AWS",
        "ServiceName": "SES",
        "DataTypeName": "MailManagerAddonInstance",
        "ResourceTypeIdentifier": "AWS::SES::MailManagerAddonInstance",
        "ServiceTypeIdentifier": "AWS::SES"
    },
    {
        "ServiceHumanReadableName": "Amazon Simple Email Service",
        "ServiceProvider": "AWS",
        "ServiceName": "SES",
        "DataTypeName": "MailManagerAddonSubscription",
        "ResourceTypeIdentifier": "AWS::SES::MailManagerAddonSubscription",
        "ServiceTypeIdentifier": "AWS::SES"
    },
    {
        "ServiceHumanReadableName": "Amazon Simple Email Service",
        "ServiceProvider": "AWS",
        "ServiceName": "SES",
        "DataTypeName": "MailManagerArchive",
        "ResourceTypeIdentifier": "AWS::SES::MailManagerArchive",
        "ServiceTypeIdentifier": "AWS::SES"
    },
    {
        "ServiceHumanReadableName": "Amazon Simple Email Service",
        "ServiceProvider": "AWS",
        "ServiceName": "SES",
        "DataTypeName": "MailManagerIngressPoint",
        "ResourceTypeIdentifier": "AWS::SES::MailManagerIngressPoint",
        "ServiceTypeIdentifier": "AWS::SES"
    },
    {
        "ServiceHumanReadableName": "Amazon Simple Email Service",
        "ServiceProvider": "AWS",
        "ServiceName": "SES",
        "DataTypeName": "MailManagerRelay",
        "ResourceTypeIdentifier": "AWS::SES::MailManagerRelay",
        "ServiceTypeIdentifier": "AWS::SES"
    },
    {
        "ServiceHumanReadableName": "Amazon Simple Email Service",
        "ServiceProvider": "AWS",
        "ServiceName": "SES",
        "DataTypeName": "MailManagerRuleSet",
        "ResourceTypeIdentifier": "AWS::SES::MailManagerRuleSet",
        "ServiceTypeIdentifier": "AWS::SES"
    },
    {
        "ServiceHumanReadableName": "Amazon Simple Email Service",
        "ServiceProvider": "AWS",
        "ServiceName": "SES",
        "DataTypeName": "MailManagerTrafficPolicy",
        "ResourceTypeIdentifier": "AWS::SES::MailManagerTrafficPolicy",
        "ServiceTypeIdentifier": "AWS::SES"
    },
    {
        "ServiceHumanReadableName": "Amazon Simple Email Service",
        "ServiceProvider": "AWS",
        "ServiceName": "SES",
        "DataTypeName": "ReceiptFilter",
        "ResourceTypeIdentifier": "AWS::SES::ReceiptFilter",
        "ServiceTypeIdentifier": "AWS::SES"
    },
    {
        "ServiceHumanReadableName": "Amazon Simple Email Service",
        "ServiceProvider": "AWS",
        "ServiceName": "SES",
        "DataTypeName": "ReceiptRule",
        "ResourceTypeIdentifier": "AWS::SES::ReceiptRule",
        "ServiceTypeIdentifier": "AWS::SES"
    },
    {
        "ServiceHumanReadableName": "Amazon Simple Email Service",
        "ServiceProvider": "AWS",
        "ServiceName": "SES",
        "DataTypeName": "ReceiptRuleSet",
        "ResourceTypeIdentifier": "AWS::SES::ReceiptRuleSet",
        "ServiceTypeIdentifier": "AWS::SES"
    },
    {
        "ServiceHumanReadableName": "Amazon Simple Email Service",
        "ServiceProvider": "AWS",
        "ServiceName": "SES",
        "DataTypeName": "Template",
        "ResourceTypeIdentifier": "AWS::SES::Template",
        "ServiceTypeIdentifier": "AWS::SES"
    },
    {
        "ServiceHumanReadableName": "Amazon Simple Email Service",
        "ServiceProvider": "AWS",
        "ServiceName": "SES",
        "DataTypeName": "VdmAttributes",
        "ResourceTypeIdentifier": "AWS::SES::VdmAttributes",
        "ServiceTypeIdentifier": "AWS::SES"
    },
    {
        "ServiceHumanReadableName": "Amazon SimpleDB",
        "ServiceProvider": "AWS",
        "ServiceName": "SDB",
        "DataTypeName": "Domain",
        "ResourceTypeIdentifier": "AWS::SDB::Domain",
        "ServiceTypeIdentifier": "AWS::SDB"
    },
    {
        "ServiceHumanReadableName": "AWS Shield",
        "ServiceProvider": "AWS",
        "ServiceName": "Shield",
        "DataTypeName": "DRTAccess",
        "ResourceTypeIdentifier": "AWS::Shield::DRTAccess",
        "ServiceTypeIdentifier": "AWS::Shield"
    },
    {
        "ServiceHumanReadableName": "AWS Shield",
        "ServiceProvider": "AWS",
        "ServiceName": "Shield",
        "DataTypeName": "ProactiveEngagement",
        "ResourceTypeIdentifier": "AWS::Shield::ProactiveEngagement",
        "ServiceTypeIdentifier": "AWS::Shield"
    },
    {
        "ServiceHumanReadableName": "AWS Shield",
        "ServiceProvider": "AWS",
        "ServiceName": "Shield",
        "DataTypeName": "Protection",
        "ResourceTypeIdentifier": "AWS::Shield::Protection",
        "ServiceTypeIdentifier": "AWS::Shield"
    },
    {
        "ServiceHumanReadableName": "AWS Shield",
        "ServiceProvider": "AWS",
        "ServiceName": "Shield",
        "DataTypeName": "ProtectionGroup",
        "ResourceTypeIdentifier": "AWS::Shield::ProtectionGroup",
        "ServiceTypeIdentifier": "AWS::Shield"
    },
    {
        "ServiceHumanReadableName": "AWS Signer",
        "ServiceProvider": "AWS",
        "ServiceName": "Signer",
        "DataTypeName": "ProfilePermission",
        "ResourceTypeIdentifier": "AWS::Signer::ProfilePermission",
        "ServiceTypeIdentifier": "AWS::Signer"
    },
    {
        "ServiceHumanReadableName": "AWS Signer",
        "ServiceProvider": "AWS",
        "ServiceName": "Signer",
        "DataTypeName": "SigningProfile",
        "ResourceTypeIdentifier": "AWS::Signer::SigningProfile",
        "ServiceTypeIdentifier": "AWS::Signer"
    },
    {
        "ServiceHumanReadableName": "AWS SimSpace Weaver",
        "ServiceProvider": "AWS",
        "ServiceName": "SimSpaceWeaver",
        "DataTypeName": "Simulation",
        "ResourceTypeIdentifier": "AWS::SimSpaceWeaver::Simulation",
        "ServiceTypeIdentifier": "AWS::SimSpaceWeaver"
    },
    {
        "ServiceHumanReadableName": "Amazon Simple Notification Service",
        "ServiceProvider": "AWS",
        "ServiceName": "SNS",
        "DataTypeName": "Subscription",
        "ResourceTypeIdentifier": "AWS::SNS::Subscription",
        "ServiceTypeIdentifier": "AWS::SNS"
    },
    {
        "ServiceHumanReadableName": "Amazon Simple Notification Service",
        "ServiceProvider": "AWS",
        "ServiceName": "SNS",
        "DataTypeName": "Topic",
        "ResourceTypeIdentifier": "AWS::SNS::Topic",
        "ServiceTypeIdentifier": "AWS::SNS"
    },
    {
        "ServiceHumanReadableName": "Amazon Simple Notification Service",
        "ServiceProvider": "AWS",
        "ServiceName": "SNS",
        "DataTypeName": "TopicInlinePolicy",
        "ResourceTypeIdentifier": "AWS::SNS::TopicInlinePolicy",
        "ServiceTypeIdentifier": "AWS::SNS"
    },
    {
        "ServiceHumanReadableName": "Amazon Simple Notification Service",
        "ServiceProvider": "AWS",
        "ServiceName": "SNS",
        "DataTypeName": "TopicPolicy",
        "ResourceTypeIdentifier": "AWS::SNS::TopicPolicy",
        "ServiceTypeIdentifier": "AWS::SNS"
    },
    {
        "ServiceHumanReadableName": "Amazon Simple Queue Service",
        "ServiceProvider": "AWS",
        "ServiceName": "SQS",
        "DataTypeName": "Queue",
        "ResourceTypeIdentifier": "AWS::SQS::Queue",
        "ServiceTypeIdentifier": "AWS::SQS"
    },
    {
        "ServiceHumanReadableName": "Amazon Simple Queue Service",
        "ServiceProvider": "AWS",
        "ServiceName": "SQS",
        "DataTypeName": "QueueInlinePolicy",
        "ResourceTypeIdentifier": "AWS::SQS::QueueInlinePolicy",
        "ServiceTypeIdentifier": "AWS::SQS"
    },
    {
        "ServiceHumanReadableName": "Amazon Simple Queue Service",
        "ServiceProvider": "AWS",
        "ServiceName": "SQS",
        "DataTypeName": "QueuePolicy",
        "ResourceTypeIdentifier": "AWS::SQS::QueuePolicy",
        "ServiceTypeIdentifier": "AWS::SQS"
    },
    {
        "ServiceHumanReadableName": "AWS Step Functions",
        "ServiceProvider": "AWS",
        "ServiceName": "StepFunctions",
        "DataTypeName": "Activity",
        "ResourceTypeIdentifier": "AWS::StepFunctions::Activity",
        "ServiceTypeIdentifier": "AWS::StepFunctions"
    },
    {
        "ServiceHumanReadableName": "AWS Step Functions",
        "ServiceProvider": "AWS",
        "ServiceName": "StepFunctions",
        "DataTypeName": "StateMachine",
        "ResourceTypeIdentifier": "AWS::StepFunctions::StateMachine",
        "ServiceTypeIdentifier": "AWS::StepFunctions"
    },
    {
        "ServiceHumanReadableName": "AWS Step Functions",
        "ServiceProvider": "AWS",
        "ServiceName": "StepFunctions",
        "DataTypeName": "StateMachineAlias",
        "ResourceTypeIdentifier": "AWS::StepFunctions::StateMachineAlias",
        "ServiceTypeIdentifier": "AWS::StepFunctions"
    },
    {
        "ServiceHumanReadableName": "AWS Step Functions",
        "ServiceProvider": "AWS",
        "ServiceName": "StepFunctions",
        "DataTypeName": "StateMachineVersion",
        "ResourceTypeIdentifier": "AWS::StepFunctions::StateMachineVersion",
        "ServiceTypeIdentifier": "AWS::StepFunctions"
    },
    {
        "ServiceHumanReadableName": "AWS Systems Manager",
        "ServiceProvider": "AWS",
        "ServiceName": "SSM",
        "DataTypeName": "Association",
        "ResourceTypeIdentifier": "AWS::SSM::Association",
        "ServiceTypeIdentifier": "AWS::SSM"
    },
    {
        "ServiceHumanReadableName": "AWS Systems Manager",
        "ServiceProvider": "AWS",
        "ServiceName": "SSM",
        "DataTypeName": "Document",
        "ResourceTypeIdentifier": "AWS::SSM::Document",
        "ServiceTypeIdentifier": "AWS::SSM"
    },
    {
        "ServiceHumanReadableName": "AWS Systems Manager",
        "ServiceProvider": "AWS",
        "ServiceName": "SSM",
        "DataTypeName": "MaintenanceWindow",
        "ResourceTypeIdentifier": "AWS::SSM::MaintenanceWindow",
        "ServiceTypeIdentifier": "AWS::SSM"
    },
    {
        "ServiceHumanReadableName": "AWS Systems Manager",
        "ServiceProvider": "AWS",
        "ServiceName": "SSM",
        "DataTypeName": "MaintenanceWindowTarget",
        "ResourceTypeIdentifier": "AWS::SSM::MaintenanceWindowTarget",
        "ServiceTypeIdentifier": "AWS::SSM"
    },
    {
        "ServiceHumanReadableName": "AWS Systems Manager",
        "ServiceProvider": "AWS",
        "ServiceName": "SSM",
        "DataTypeName": "MaintenanceWindowTask",
        "ResourceTypeIdentifier": "AWS::SSM::MaintenanceWindowTask",
        "ServiceTypeIdentifier": "AWS::SSM"
    },
    {
        "ServiceHumanReadableName": "AWS Systems Manager",
        "ServiceProvider": "AWS",
        "ServiceName": "SSM",
        "DataTypeName": "Parameter",
        "ResourceTypeIdentifier": "AWS::SSM::Parameter",
        "ServiceTypeIdentifier": "AWS::SSM"
    },
    {
        "ServiceHumanReadableName": "AWS Systems Manager",
        "ServiceProvider": "AWS",
        "ServiceName": "SSM",
        "DataTypeName": "PatchBaseline",
        "ResourceTypeIdentifier": "AWS::SSM::PatchBaseline",
        "ServiceTypeIdentifier": "AWS::SSM"
    },
    {
        "ServiceHumanReadableName": "AWS Systems Manager",
        "ServiceProvider": "AWS",
        "ServiceName": "SSM",
        "DataTypeName": "ResourceDataSync",
        "ResourceTypeIdentifier": "AWS::SSM::ResourceDataSync",
        "ServiceTypeIdentifier": "AWS::SSM"
    },
    {
        "ServiceHumanReadableName": "AWS Systems Manager",
        "ServiceProvider": "AWS",
        "ServiceName": "SSM",
        "DataTypeName": "ResourcePolicy",
        "ResourceTypeIdentifier": "AWS::SSM::ResourcePolicy",
        "ServiceTypeIdentifier": "AWS::SSM"
    },
    {
        "ServiceHumanReadableName": "AWS Systems Manager Quick Setup",
        "ServiceProvider": "AWS",
        "ServiceName": "SSMQuickSetup",
        "DataTypeName": "ConfigurationManager",
        "ResourceTypeIdentifier": "AWS::SSMQuickSetup::ConfigurationManager",
        "ServiceTypeIdentifier": "AWS::SSMQuickSetup"
    },
    {
        "ServiceHumanReadableName": "AWS Support App",
        "ServiceProvider": "AWS",
        "ServiceName": "SupportApp",
        "DataTypeName": "AccountAlias",
        "ResourceTypeIdentifier": "AWS::SupportApp::AccountAlias",
        "ServiceTypeIdentifier": "AWS::SupportApp"
    },
    {
        "ServiceHumanReadableName": "AWS Support App",
        "ServiceProvider": "AWS",
        "ServiceName": "SupportApp",
        "DataTypeName": "SlackChannelConfiguration",
        "ResourceTypeIdentifier": "AWS::SupportApp::SlackChannelConfiguration",
        "ServiceTypeIdentifier": "AWS::SupportApp"
    },
    {
        "ServiceHumanReadableName": "AWS Support App",
        "ServiceProvider": "AWS",
        "ServiceName": "SupportApp",
        "DataTypeName": "SlackWorkspaceConfiguration",
        "ResourceTypeIdentifier": "AWS::SupportApp::SlackWorkspaceConfiguration",
        "ServiceTypeIdentifier": "AWS::SupportApp"
    },
    {
        "ServiceHumanReadableName": "AWS Systems Manager for SAP",
        "ServiceProvider": "AWS",
        "ServiceName": "SystemsManagerSAP",
        "DataTypeName": "Application",
        "ResourceTypeIdentifier": "AWS::SystemsManagerSAP::Application",
        "ServiceTypeIdentifier": "AWS::SystemsManagerSAP"
    },
    {
        "ServiceHumanReadableName": "Amazon Timestream",
        "ServiceProvider": "AWS",
        "ServiceName": "Timestream",
        "DataTypeName": "Database",
        "ResourceTypeIdentifier": "AWS::Timestream::Database",
        "ServiceTypeIdentifier": "AWS::Timestream"
    },
    {
        "ServiceHumanReadableName": "Amazon Timestream",
        "ServiceProvider": "AWS",
        "ServiceName": "Timestream",
        "DataTypeName": "InfluxDBInstance",
        "ResourceTypeIdentifier": "AWS::Timestream::InfluxDBInstance",
        "ServiceTypeIdentifier": "AWS::Timestream"
    },
    {
        "ServiceHumanReadableName": "Amazon Timestream",
        "ServiceProvider": "AWS",
        "ServiceName": "Timestream",
        "DataTypeName": "ScheduledQuery",
        "ResourceTypeIdentifier": "AWS::Timestream::ScheduledQuery",
        "ServiceTypeIdentifier": "AWS::Timestream"
    },
    {
        "ServiceHumanReadableName": "Amazon Timestream",
        "ServiceProvider": "AWS",
        "ServiceName": "Timestream",
        "DataTypeName": "Table",
        "ResourceTypeIdentifier": "AWS::Timestream::Table",
        "ServiceTypeIdentifier": "AWS::Timestream"
    },
    {
        "ServiceHumanReadableName": "AWS Transfer Family",
        "ServiceProvider": "AWS",
        "ServiceName": "Transfer",
        "DataTypeName": "Agreement",
        "ResourceTypeIdentifier": "AWS::Transfer::Agreement",
        "ServiceTypeIdentifier": "AWS::Transfer"
    },
    {
        "ServiceHumanReadableName": "AWS Transfer Family",
        "ServiceProvider": "AWS",
        "ServiceName": "Transfer",
        "DataTypeName": "Certificate",
        "ResourceTypeIdentifier": "AWS::Transfer::Certificate",
        "ServiceTypeIdentifier": "AWS::Transfer"
    },
    {
        "ServiceHumanReadableName": "AWS Transfer Family",
        "ServiceProvider": "AWS",
        "ServiceName": "Transfer",
        "DataTypeName": "Connector",
        "ResourceTypeIdentifier": "AWS::Transfer::Connector",
        "ServiceTypeIdentifier": "AWS::Transfer"
    },
    {
        "ServiceHumanReadableName": "AWS Transfer Family",
        "ServiceProvider": "AWS",
        "ServiceName": "Transfer",
        "DataTypeName": "Profile",
        "ResourceTypeIdentifier": "AWS::Transfer::Profile",
        "ServiceTypeIdentifier": "AWS::Transfer"
    },
    {
        "ServiceHumanReadableName": "AWS Transfer Family",
        "ServiceProvider": "AWS",
        "ServiceName": "Transfer",
        "DataTypeName": "Server",
        "ResourceTypeIdentifier": "AWS::Transfer::Server",
        "ServiceTypeIdentifier": "AWS::Transfer"
    },
    {
        "ServiceHumanReadableName": "AWS Transfer Family",
        "ServiceProvider": "AWS",
        "ServiceName": "Transfer",
        "DataTypeName": "User",
        "ResourceTypeIdentifier": "AWS::Transfer::User",
        "ServiceTypeIdentifier": "AWS::Transfer"
    },
    {
        "ServiceHumanReadableName": "AWS Transfer Family",
        "ServiceProvider": "AWS",
        "ServiceName": "Transfer",
        "DataTypeName": "Workflow",
        "ResourceTypeIdentifier": "AWS::Transfer::Workflow",
        "ServiceTypeIdentifier": "AWS::Transfer"
    },
    {
        "ServiceHumanReadableName": "Amazon Verified Permissions",
        "ServiceProvider": "AWS",
        "ServiceName": "VerifiedPermissions",
        "DataTypeName": "IdentitySource",
        "ResourceTypeIdentifier": "AWS::VerifiedPermissions::IdentitySource",
        "ServiceTypeIdentifier": "AWS::VerifiedPermissions"
    },
    {
        "ServiceHumanReadableName": "Amazon Verified Permissions",
        "ServiceProvider": "AWS",
        "ServiceName": "VerifiedPermissions",
        "DataTypeName": "Policy",
        "ResourceTypeIdentifier": "AWS::VerifiedPermissions::Policy",
        "ServiceTypeIdentifier": "AWS::VerifiedPermissions"
    },
    {
        "ServiceHumanReadableName": "Amazon Verified Permissions",
        "ServiceProvider": "AWS",
        "ServiceName": "VerifiedPermissions",
        "DataTypeName": "PolicyStore",
        "ResourceTypeIdentifier": "AWS::VerifiedPermissions::PolicyStore",
        "ServiceTypeIdentifier": "AWS::VerifiedPermissions"
    },
    {
        "ServiceHumanReadableName": "Amazon Verified Permissions",
        "ServiceProvider": "AWS",
        "ServiceName": "VerifiedPermissions",
        "DataTypeName": "PolicyTemplate",
        "ResourceTypeIdentifier": "AWS::VerifiedPermissions::PolicyTemplate",
        "ServiceTypeIdentifier": "AWS::VerifiedPermissions"
    },
    {
        "ServiceHumanReadableName": "Amazon Connect Voice ID",
        "ServiceProvider": "AWS",
        "ServiceName": "VoiceID",
        "DataTypeName": "Domain",
        "ResourceTypeIdentifier": "AWS::VoiceID::Domain",
        "ServiceTypeIdentifier": "AWS::VoiceID"
    },
    {
        "ServiceHumanReadableName": "Amazon VPC Lattice",
        "ServiceProvider": "AWS",
        "ServiceName": "VpcLattice",
        "DataTypeName": "AccessLogSubscription",
        "ResourceTypeIdentifier": "AWS::VpcLattice::AccessLogSubscription",
        "ServiceTypeIdentifier": "AWS::VpcLattice"
    },
    {
        "ServiceHumanReadableName": "Amazon VPC Lattice",
        "ServiceProvider": "AWS",
        "ServiceName": "VpcLattice",
        "DataTypeName": "AuthPolicy",
        "ResourceTypeIdentifier": "AWS::VpcLattice::AuthPolicy",
        "ServiceTypeIdentifier": "AWS::VpcLattice"
    },
    {
        "ServiceHumanReadableName": "Amazon VPC Lattice",
        "ServiceProvider": "AWS",
        "ServiceName": "VpcLattice",
        "DataTypeName": "Listener",
        "ResourceTypeIdentifier": "AWS::VpcLattice::Listener",
        "ServiceTypeIdentifier": "AWS::VpcLattice"
    },
    {
        "ServiceHumanReadableName": "Amazon VPC Lattice",
        "ServiceProvider": "AWS",
        "ServiceName": "VpcLattice",
        "DataTypeName": "ResourcePolicy",
        "ResourceTypeIdentifier": "AWS::VpcLattice::ResourcePolicy",
        "ServiceTypeIdentifier": "AWS::VpcLattice"
    },
    {
        "ServiceHumanReadableName": "Amazon VPC Lattice",
        "ServiceProvider": "AWS",
        "ServiceName": "VpcLattice",
        "DataTypeName": "Rule",
        "ResourceTypeIdentifier": "AWS::VpcLattice::Rule",
        "ServiceTypeIdentifier": "AWS::VpcLattice"
    },
    {
        "ServiceHumanReadableName": "Amazon VPC Lattice",
        "ServiceProvider": "AWS",
        "ServiceName": "VpcLattice",
        "DataTypeName": "Service",
        "ResourceTypeIdentifier": "AWS::VpcLattice::Service",
        "ServiceTypeIdentifier": "AWS::VpcLattice"
    },
    {
        "ServiceHumanReadableName": "Amazon VPC Lattice",
        "ServiceProvider": "AWS",
        "ServiceName": "VpcLattice",
        "DataTypeName": "ServiceNetwork",
        "ResourceTypeIdentifier": "AWS::VpcLattice::ServiceNetwork",
        "ServiceTypeIdentifier": "AWS::VpcLattice"
    },
    {
        "ServiceHumanReadableName": "Amazon VPC Lattice",
        "ServiceProvider": "AWS",
        "ServiceName": "VpcLattice",
        "DataTypeName": "ServiceNetworkServiceAssociation",
        "ResourceTypeIdentifier": "AWS::VpcLattice::ServiceNetworkServiceAssociation",
        "ServiceTypeIdentifier": "AWS::VpcLattice"
    },
    {
        "ServiceHumanReadableName": "Amazon VPC Lattice",
        "ServiceProvider": "AWS",
        "ServiceName": "VpcLattice",
        "DataTypeName": "ServiceNetworkVpcAssociation",
        "ResourceTypeIdentifier": "AWS::VpcLattice::ServiceNetworkVpcAssociation",
        "ServiceTypeIdentifier": "AWS::VpcLattice"
    },
    {
        "ServiceHumanReadableName": "Amazon VPC Lattice",
        "ServiceProvider": "AWS",
        "ServiceName": "VpcLattice",
        "DataTypeName": "TargetGroup",
        "ResourceTypeIdentifier": "AWS::VpcLattice::TargetGroup",
        "ServiceTypeIdentifier": "AWS::VpcLattice"
    },
    {
        "ServiceHumanReadableName": "AWS WAF",
        "ServiceProvider": "AWS",
        "ServiceName": "WAF",
        "DataTypeName": "ByteMatchSet",
        "ResourceTypeIdentifier": "AWS::WAF::ByteMatchSet",
        "ServiceTypeIdentifier": "AWS::WAF"
    },
    {
        "ServiceHumanReadableName": "AWS WAF",
        "ServiceProvider": "AWS",
        "ServiceName": "WAF",
        "DataTypeName": "IPSet",
        "ResourceTypeIdentifier": "AWS::WAF::IPSet",
        "ServiceTypeIdentifier": "AWS::WAF"
    },
    {
        "ServiceHumanReadableName": "AWS WAF",
        "ServiceProvider": "AWS",
        "ServiceName": "WAF",
        "DataTypeName": "Rule",
        "ResourceTypeIdentifier": "AWS::WAF::Rule",
        "ServiceTypeIdentifier": "AWS::WAF"
    },
    {
        "ServiceHumanReadableName": "AWS WAF",
        "ServiceProvider": "AWS",
        "ServiceName": "WAF",
        "DataTypeName": "SizeConstraintSet",
        "ResourceTypeIdentifier": "AWS::WAF::SizeConstraintSet",
        "ServiceTypeIdentifier": "AWS::WAF"
    },
    {
        "ServiceHumanReadableName": "AWS WAF",
        "ServiceProvider": "AWS",
        "ServiceName": "WAF",
        "DataTypeName": "SqlInjectionMatchSet",
        "ResourceTypeIdentifier": "AWS::WAF::SqlInjectionMatchSet",
        "ServiceTypeIdentifier": "AWS::WAF"
    },
    {
        "ServiceHumanReadableName": "AWS WAF",
        "ServiceProvider": "AWS",
        "ServiceName": "WAF",
        "DataTypeName": "WebACL",
        "ResourceTypeIdentifier": "AWS::WAF::WebACL",
        "ServiceTypeIdentifier": "AWS::WAF"
    },
    {
        "ServiceHumanReadableName": "AWS WAF",
        "ServiceProvider": "AWS",
        "ServiceName": "WAF",
        "DataTypeName": "XssMatchSet",
        "ResourceTypeIdentifier": "AWS::WAF::XssMatchSet",
        "ServiceTypeIdentifier": "AWS::WAF"
    },
    {
        "ServiceHumanReadableName": "AWS WAF Regional",
        "ServiceProvider": "AWS",
        "ServiceName": "WAFRegional",
        "DataTypeName": "ByteMatchSet",
        "ResourceTypeIdentifier": "AWS::WAFRegional::ByteMatchSet",
        "ServiceTypeIdentifier": "AWS::WAFRegional"
    },
    {
        "ServiceHumanReadableName": "AWS WAF Regional",
        "ServiceProvider": "AWS",
        "ServiceName": "WAFRegional",
        "DataTypeName": "GeoMatchSet",
        "ResourceTypeIdentifier": "AWS::WAFRegional::GeoMatchSet",
        "ServiceTypeIdentifier": "AWS::WAFRegional"
    },
    {
        "ServiceHumanReadableName": "AWS WAF Regional",
        "ServiceProvider": "AWS",
        "ServiceName": "WAFRegional",
        "DataTypeName": "IPSet",
        "ResourceTypeIdentifier": "AWS::WAFRegional::IPSet",
        "ServiceTypeIdentifier": "AWS::WAFRegional"
    },
    {
        "ServiceHumanReadableName": "AWS WAF Regional",
        "ServiceProvider": "AWS",
        "ServiceName": "WAFRegional",
        "DataTypeName": "RateBasedRule",
        "ResourceTypeIdentifier": "AWS::WAFRegional::RateBasedRule",
        "ServiceTypeIdentifier": "AWS::WAFRegional"
    },
    {
        "ServiceHumanReadableName": "AWS WAF Regional",
        "ServiceProvider": "AWS",
        "ServiceName": "WAFRegional",
        "DataTypeName": "RegexPatternSet",
        "ResourceTypeIdentifier": "AWS::WAFRegional::RegexPatternSet",
        "ServiceTypeIdentifier": "AWS::WAFRegional"
    },
    {
        "ServiceHumanReadableName": "AWS WAF Regional",
        "ServiceProvider": "AWS",
        "ServiceName": "WAFRegional",
        "DataTypeName": "Rule",
        "ResourceTypeIdentifier": "AWS::WAFRegional::Rule",
        "ServiceTypeIdentifier": "AWS::WAFRegional"
    },
    {
        "ServiceHumanReadableName": "AWS WAF Regional",
        "ServiceProvider": "AWS",
        "ServiceName": "WAFRegional",
        "DataTypeName": "SizeConstraintSet",
        "ResourceTypeIdentifier": "AWS::WAFRegional::SizeConstraintSet",
        "ServiceTypeIdentifier": "AWS::WAFRegional"
    },
    {
        "ServiceHumanReadableName": "AWS WAF Regional",
        "ServiceProvider": "AWS",
        "ServiceName": "WAFRegional",
        "DataTypeName": "SqlInjectionMatchSet",
        "ResourceTypeIdentifier": "AWS::WAFRegional::SqlInjectionMatchSet",
        "ServiceTypeIdentifier": "AWS::WAFRegional"
    },
    {
        "ServiceHumanReadableName": "AWS WAF Regional",
        "ServiceProvider": "AWS",
        "ServiceName": "WAFRegional",
        "DataTypeName": "WebACL",
        "ResourceTypeIdentifier": "AWS::WAFRegional::WebACL",
        "ServiceTypeIdentifier": "AWS::WAFRegional"
    },
    {
        "ServiceHumanReadableName": "AWS WAF Regional",
        "ServiceProvider": "AWS",
        "ServiceName": "WAFRegional",
        "DataTypeName": "WebACLAssociation",
        "ResourceTypeIdentifier": "AWS::WAFRegional::WebACLAssociation",
        "ServiceTypeIdentifier": "AWS::WAFRegional"
    },
    {
        "ServiceHumanReadableName": "AWS WAF Regional",
        "ServiceProvider": "AWS",
        "ServiceName": "WAFRegional",
        "DataTypeName": "XssMatchSet",
        "ResourceTypeIdentifier": "AWS::WAFRegional::XssMatchSet",
        "ServiceTypeIdentifier": "AWS::WAFRegional"
    },
    {
        "ServiceHumanReadableName": "AWS WAF V2",
        "ServiceProvider": "AWS",
        "ServiceName": "WAFv2",
        "DataTypeName": "IPSet",
        "ResourceTypeIdentifier": "AWS::WAFv2::IPSet",
        "ServiceTypeIdentifier": "AWS::WAFv2"
    },
    {
        "ServiceHumanReadableName": "AWS WAF V2",
        "ServiceProvider": "AWS",
        "ServiceName": "WAFv2",
        "DataTypeName": "LoggingConfiguration",
        "ResourceTypeIdentifier": "AWS::WAFv2::LoggingConfiguration",
        "ServiceTypeIdentifier": "AWS::WAFv2"
    },
    {
        "ServiceHumanReadableName": "AWS WAF V2",
        "ServiceProvider": "AWS",
        "ServiceName": "WAFv2",
        "DataTypeName": "RegexPatternSet",
        "ResourceTypeIdentifier": "AWS::WAFv2::RegexPatternSet",
        "ServiceTypeIdentifier": "AWS::WAFv2"
    },
    {
        "ServiceHumanReadableName": "AWS WAF V2",
        "ServiceProvider": "AWS",
        "ServiceName": "WAFv2",
        "DataTypeName": "RuleGroup",
        "ResourceTypeIdentifier": "AWS::WAFv2::RuleGroup",
        "ServiceTypeIdentifier": "AWS::WAFv2"
    },
    {
        "ServiceHumanReadableName": "AWS WAF V2",
        "ServiceProvider": "AWS",
        "ServiceName": "WAFv2",
        "DataTypeName": "WebACL",
        "ResourceTypeIdentifier": "AWS::WAFv2::WebACL",
        "ServiceTypeIdentifier": "AWS::WAFv2"
    },
    {
        "ServiceHumanReadableName": "AWS WAF V2",
        "ServiceProvider": "AWS",
        "ServiceName": "WAFv2",
        "DataTypeName": "WebACLAssociation",
        "ResourceTypeIdentifier": "AWS::WAFv2::WebACLAssociation",
        "ServiceTypeIdentifier": "AWS::WAFv2"
    },
    {
        "ServiceHumanReadableName": "Amazon Connect Wisdom",
        "ServiceProvider": "AWS",
        "ServiceName": "Wisdom",
        "DataTypeName": "AIPrompt",
        "ResourceTypeIdentifier": "AWS::Wisdom::AIPrompt",
        "ServiceTypeIdentifier": "AWS::Wisdom"
    },
    {
        "ServiceHumanReadableName": "Amazon Connect Wisdom",
        "ServiceProvider": "AWS",
        "ServiceName": "Wisdom",
        "DataTypeName": "AIPromptVersion",
        "ResourceTypeIdentifier": "AWS::Wisdom::AIPromptVersion",
        "ServiceTypeIdentifier": "AWS::Wisdom"
    },
    {
        "ServiceHumanReadableName": "Amazon Connect Wisdom",
        "ServiceProvider": "AWS",
        "ServiceName": "Wisdom",
        "DataTypeName": "Assistant",
        "ResourceTypeIdentifier": "AWS::Wisdom::Assistant",
        "ServiceTypeIdentifier": "AWS::Wisdom"
    },
    {
        "ServiceHumanReadableName": "Amazon Connect Wisdom",
        "ServiceProvider": "AWS",
        "ServiceName": "Wisdom",
        "DataTypeName": "AssistantAssociation",
        "ResourceTypeIdentifier": "AWS::Wisdom::AssistantAssociation",
        "ServiceTypeIdentifier": "AWS::Wisdom"
    },
    {
        "ServiceHumanReadableName": "Amazon Connect Wisdom",
        "ServiceProvider": "AWS",
        "ServiceName": "Wisdom",
        "DataTypeName": "KnowledgeBase",
        "ResourceTypeIdentifier": "AWS::Wisdom::KnowledgeBase",
        "ServiceTypeIdentifier": "AWS::Wisdom"
    },
    {
        "ServiceHumanReadableName": "Amazon WorkSpaces",
        "ServiceProvider": "AWS",
        "ServiceName": "WorkSpaces",
        "DataTypeName": "ConnectionAlias",
        "ResourceTypeIdentifier": "AWS::WorkSpaces::ConnectionAlias",
        "ServiceTypeIdentifier": "AWS::WorkSpaces"
    },
    {
        "ServiceHumanReadableName": "Amazon WorkSpaces",
        "ServiceProvider": "AWS",
        "ServiceName": "WorkSpaces",
        "DataTypeName": "Workspace",
        "ResourceTypeIdentifier": "AWS::WorkSpaces::Workspace",
        "ServiceTypeIdentifier": "AWS::WorkSpaces"
    },
    {
        "ServiceHumanReadableName": "Amazon WorkSpaces",
        "ServiceProvider": "AWS",
        "ServiceName": "WorkSpaces",
        "DataTypeName": "WorkspacesPool",
        "ResourceTypeIdentifier": "AWS::WorkSpaces::WorkspacesPool",
        "ServiceTypeIdentifier": "AWS::WorkSpaces"
    },
    {
        "ServiceHumanReadableName": "Amazon WorkSpaces Thin Client",
        "ServiceProvider": "AWS",
        "ServiceName": "WorkSpacesThinClient",
        "DataTypeName": "Environment",
        "ResourceTypeIdentifier": "AWS::WorkSpacesThinClient::Environment",
        "ServiceTypeIdentifier": "AWS::WorkSpacesThinClient"
    },
    {
        "ServiceHumanReadableName": "Amazon WorkSpaces Secure Browser",
        "ServiceProvider": "AWS",
        "ServiceName": "WorkSpacesWeb",
        "DataTypeName": "BrowserSettings",
        "ResourceTypeIdentifier": "AWS::WorkSpacesWeb::BrowserSettings",
        "ServiceTypeIdentifier": "AWS::WorkSpacesWeb"
    },
    {
        "ServiceHumanReadableName": "Amazon WorkSpaces Secure Browser",
        "ServiceProvider": "AWS",
        "ServiceName": "WorkSpacesWeb",
        "DataTypeName": "IdentityProvider",
        "ResourceTypeIdentifier": "AWS::WorkSpacesWeb::IdentityProvider",
        "ServiceTypeIdentifier": "AWS::WorkSpacesWeb"
    },
    {
        "ServiceHumanReadableName": "Amazon WorkSpaces Secure Browser",
        "ServiceProvider": "AWS",
        "ServiceName": "WorkSpacesWeb",
        "DataTypeName": "IpAccessSettings",
        "ResourceTypeIdentifier": "AWS::WorkSpacesWeb::IpAccessSettings",
        "ServiceTypeIdentifier": "AWS::WorkSpacesWeb"
    },
    {
        "ServiceHumanReadableName": "Amazon WorkSpaces Secure Browser",
        "ServiceProvider": "AWS",
        "ServiceName": "WorkSpacesWeb",
        "DataTypeName": "NetworkSettings",
        "ResourceTypeIdentifier": "AWS::WorkSpacesWeb::NetworkSettings",
        "ServiceTypeIdentifier": "AWS::WorkSpacesWeb"
    },
    {
        "ServiceHumanReadableName": "Amazon WorkSpaces Secure Browser",
        "ServiceProvider": "AWS",
        "ServiceName": "WorkSpacesWeb",
        "DataTypeName": "Portal",
        "ResourceTypeIdentifier": "AWS::WorkSpacesWeb::Portal",
        "ServiceTypeIdentifier": "AWS::WorkSpacesWeb"
    },
    {
        "ServiceHumanReadableName": "Amazon WorkSpaces Secure Browser",
        "ServiceProvider": "AWS",
        "ServiceName": "WorkSpacesWeb",
        "DataTypeName": "TrustStore",
        "ResourceTypeIdentifier": "AWS::WorkSpacesWeb::TrustStore",
        "ServiceTypeIdentifier": "AWS::WorkSpacesWeb"
    },
    {
        "ServiceHumanReadableName": "Amazon WorkSpaces Secure Browser",
        "ServiceProvider": "AWS",
        "ServiceName": "WorkSpacesWeb",
        "DataTypeName": "UserAccessLoggingSettings",
        "ResourceTypeIdentifier": "AWS::WorkSpacesWeb::UserAccessLoggingSettings",
        "ServiceTypeIdentifier": "AWS::WorkSpacesWeb"
    },
    {
        "ServiceHumanReadableName": "Amazon WorkSpaces Secure Browser",
        "ServiceProvider": "AWS",
        "ServiceName": "WorkSpacesWeb",
        "DataTypeName": "UserSettings",
        "ResourceTypeIdentifier": "AWS::WorkSpacesWeb::UserSettings",
        "ServiceTypeIdentifier": "AWS::WorkSpacesWeb"
    },
    {
        "ServiceHumanReadableName": "AWS X-Ray",
        "ServiceProvider": "AWS",
        "ServiceName": "XRay",
        "DataTypeName": "Group",
        "ResourceTypeIdentifier": "AWS::XRay::Group",
        "ServiceTypeIdentifier": "AWS::XRay"
    },
    {
        "ServiceHumanReadableName": "AWS X-Ray",
        "ServiceProvider": "AWS",
        "ServiceName": "XRay",
        "DataTypeName": "ResourcePolicy",
        "ResourceTypeIdentifier": "AWS::XRay::ResourcePolicy",
        "ServiceTypeIdentifier": "AWS::XRay"
    },
    {
        "ServiceHumanReadableName": "AWS X-Ray",
        "ServiceProvider": "AWS",
        "ServiceName": "XRay",
        "DataTypeName": "SamplingRule",
        "ResourceTypeIdentifier": "AWS::XRay::SamplingRule",
        "ServiceTypeIdentifier": "AWS::XRay"
    }
]